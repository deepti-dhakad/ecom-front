[{"D:\\ecom\\src\\index.js":"1","D:\\ecom\\src\\App.js":"2","D:\\ecom\\src\\reportWebVitals.js":"3","D:\\ecom\\src\\components\\FetchNodeServices.js":"4","D:\\ecom\\src\\components\\category\\CategoryInterface.js":"5","D:\\ecom\\src\\components\\brand\\BrandInterface.js":"6","D:\\ecom\\src\\components\\Checks.js":"7","D:\\ecom\\src\\components\\category\\DisplayAll.js":"8","D:\\ecom\\src\\components\\category\\DisplayFormat.js":"9","D:\\ecom\\src\\components\\model\\ModelInterface.js":"10","D:\\ecom\\src\\components\\model\\DisplayModel.js":"11","D:\\ecom\\src\\components\\DisplayTracking.js":"12","D:\\ecom\\src\\components\\brand\\DisplayBrand.js":"13","D:\\ecom\\src\\components\\product\\ProductInterface.js":"14","D:\\ecom\\src\\components\\product\\DisplayProduct.js":"15","D:\\ecom\\src\\components\\admin\\AdminLogin.js":"16","D:\\ecom\\src\\components\\admin\\Dashboard.js":"17","D:\\ecom\\src\\components\\admin\\DashboardList.js":"18","D:\\ecom\\src\\components\\productPicture\\ProductPicture.js":"19","D:\\ecom\\src\\components\\ClientView\\MainPage.js":"20","D:\\ecom\\src\\components\\ClientView\\Footer.js":"21","D:\\ecom\\src\\components\\ClientView\\Footers.js":"22","D:\\ecom\\src\\components\\ClientView\\Home.js":"23","D:\\ecom\\src\\components\\ClientView\\QtyCtrl.js":"24","D:\\ecom\\src\\components\\RootReducer.js":"25","D:\\ecom\\src\\components\\ClientView\\Register.js":"26","D:\\ecom\\src\\components\\ClientView\\Login.js":"27","D:\\ecom\\src\\components\\ClientView\\SignIn.js":"28","D:\\ecom\\src\\components\\ClientView\\ListProducts.js":"29","D:\\ecom\\src\\components\\ClientView\\ProductView.js":"30","D:\\ecom\\src\\components\\ClientView\\SproductView.js":"31","D:\\ecom\\src\\components\\ClientView\\Filter.js":"32","D:\\ecom\\src\\components\\statecity\\StateCityArea.js":"33","D:\\ecom\\src\\components\\ClientView\\SignInClient.js":"34","D:\\ecom\\src\\components\\ClientView\\SignInUserForm.js":"35","D:\\ecom\\src\\components\\ClientView\\ShowCartWithAddress.js":"36","D:\\ecom\\src\\components\\ClientView\\PaymentGateway.js":"37"},{"size":694,"mtime":1613374986747,"results":"38","hashOfConfig":"39"},{"size":6556,"mtime":1621716151085,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":911,"mtime":1608671992869,"results":"42","hashOfConfig":"39"},{"size":6564,"mtime":1610015684499,"results":"43","hashOfConfig":"39"},{"size":9460,"mtime":1609845990210,"results":"44","hashOfConfig":"39"},{"size":842,"mtime":1619981486742,"results":"45","hashOfConfig":"39"},{"size":609,"mtime":1608491445615,"results":"46","hashOfConfig":"39"},{"size":16147,"mtime":1617964155927,"results":"47","hashOfConfig":"39"},{"size":6441,"mtime":1609845308364,"results":"48","hashOfConfig":"39"},{"size":9887,"mtime":1609846377589,"results":"49","hashOfConfig":"39"},{"size":6087,"mtime":1609751565843,"results":"50","hashOfConfig":"39"},{"size":16421,"mtime":1612426286385,"results":"51","hashOfConfig":"39"},{"size":14945,"mtime":1609925814081,"results":"52","hashOfConfig":"39"},{"size":21231,"mtime":1612521705463,"results":"53","hashOfConfig":"39"},{"size":4677,"mtime":1610104687970,"results":"54","hashOfConfig":"39"},{"size":5771,"mtime":1610708628779,"results":"55","hashOfConfig":"39"},{"size":8448,"mtime":1615192667770,"results":"56","hashOfConfig":"39"},{"size":10234,"mtime":1610624178064,"results":"57","hashOfConfig":"39"},{"size":25341,"mtime":1624625516501,"results":"58","hashOfConfig":"39"},{"size":7875,"mtime":1615110310834,"results":"59","hashOfConfig":"39"},{"size":4132,"mtime":1611231054019,"results":"60","hashOfConfig":"39"},{"size":8894,"mtime":1619979416787,"results":"61","hashOfConfig":"39"},{"size":1722,"mtime":1613383254934,"results":"62","hashOfConfig":"39"},{"size":863,"mtime":1621710945134,"results":"63","hashOfConfig":"39"},{"size":6736,"mtime":1614246442294,"results":"64","hashOfConfig":"39"},{"size":7751,"mtime":1619982319383,"results":"65","hashOfConfig":"39"},{"size":10829,"mtime":1614256270926,"results":"66","hashOfConfig":"39"},{"size":14373,"mtime":1619778831322,"results":"67","hashOfConfig":"39"},{"size":19359,"mtime":1620646110064,"results":"68","hashOfConfig":"39"},{"size":4671,"mtime":1619982540178,"results":"69","hashOfConfig":"39"},{"size":7307,"mtime":1619948113251,"results":"70","hashOfConfig":"39"},{"size":3559,"mtime":1617017799236,"results":"71","hashOfConfig":"39"},{"size":9974,"mtime":1621710945136,"results":"72","hashOfConfig":"39"},{"size":16994,"mtime":1621711096603,"results":"73","hashOfConfig":"39"},{"size":18322,"mtime":1621716151087,"results":"74","hashOfConfig":"39"},{"size":4783,"mtime":1621716576799,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"131q655",{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"78"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"78"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"78"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"78"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"78"},"D:\\ecom\\src\\index.js",[],["182","183"],"D:\\ecom\\src\\App.js",["184","185","186","187"],"import logo from \"./logo.svg\";\nimport BrandInterface from \"./components/brand/BrandInterface\";\nimport CategoryInterface from \"./components/category/CategoryInterface\";\nimport DisplayAll from \"./components/category/DisplayAll\";\nimport DisplayFormat from \"./components/category/DisplayFormat\";\nimport ModelInterface from \"./components/model/ModelInterface\";\nimport DisplayModel from \"./components/model/DisplayModel\";\nimport DisplayTracking from \"./components/DisplayTracking\";\nimport DisplayBrand from \"./components/brand/DisplayBrand\";\nimport ProductInterface from \"./components/product/ProductInterface\";\nimport DisplayProduct from \"./components/product/DisplayProduct\";\nimport AdminLogin from \"./components/admin/AdminLogin\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/admin/Dashboard\";\nimport ProductPicture from \"./components/productPicture/ProductPicture\";\nimport MainPage from \"./components/ClientView/MainPage\";\nimport Footer from \"./components/ClientView/Footer\";\nimport Footers from \"./components/ClientView/Footers\";\nimport Home from \"./components/ClientView/Home\";\nimport QtyCtrl from \"./components/ClientView/QtyCtrl\";\nimport Register from \"./components/ClientView/Register\";\nimport SignIn from \"./components/ClientView/SignIn\";\nimport Login from \"./components/ClientView/Login\";\nimport ListProducts from \"./components/ClientView/ListProducts\";\nimport ProductView from \"./components/ClientView/ProductView\";\nimport SproductView from \"./components/ClientView/SproductView\";\nimport Filter from \"./components/ClientView/Filter\";\nimport StateCityArea from \"./components/statecity/StateCityArea\";\nimport SignInClient from \"./components/ClientView/SignInClient\";\nimport SignInUserForm from \"./components/ClientView/SignInUserForm\";\nimport ShowCartWithAddress from \"./components/ClientView/ShowCartWithAddress\";\nimport PaymmentGateway from \"./components/ClientView/PaymentGateway\";\nimport PaymentGateway from \"./components/ClientView/PaymentGateway\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route\n          exact\n          strict\n          component={CategoryInterface}\n          path=\"/categoryinterface\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={DisplayFormat}\n          path=\"/DisplayFormat\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={BrandInterface}\n          path=\"/BrandInterface\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={DisplayBrand}\n          path=\"/DisplayBrand\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ModelInterface}\n          path=\"/ModelInterface\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={DisplayModel}\n          path=\"/DisplayModel\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ProductInterface}\n          path=\"/ProductInterface\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={DisplayProduct}\n          path=\"/DisplayProduct\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={AdminLogin}\n          path=\"/AdminLogin\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Dashboard}\n          path=\"/Dashboard\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ProductPicture}\n          path=\"/productpicture\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={MainPage}\n          path=\"/MainPage\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Footer}\n          path=\"/Footer\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Footers}\n          path=\"/Footers\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Home}\n          path=\"/Home\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={QtyCtrl}\n          path=\"/QtyCtrl\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Register}\n          path=\"/Register\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Login}\n          path=\"/Login\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={SignIn}\n          path=\"/SignIn\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ListProducts}\n          path=\"/ListProducts\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ProductView}\n          path=\"/ProductView/:pid\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={SproductView}\n          path=\"/SproductView/:pid\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={Filter}\n          path=\"/Filter\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={StateCityArea}\n          path=\"/StateCityArea\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={SignInClient}\n          path=\"/SignInClient\"\n          history={props.history}\n        />\n\n        <Route\n          exact\n          strict\n          component={SignInUserForm}\n          path=\"/signinuserform\"\n          history={props.history}\n        />\n        <Route\n          exact\n          strict\n          component={ShowCartWithAddress}\n          path=\"/ShowCartWithAddress\"\n          history={props.history}\n        />\n\n        <Route\n          exact\n          strict\n          component={PaymentGateway}\n          path=\"/PaymentGateway\"\n          history={props.history}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\ecom\\src\\reportWebVitals.js",[],"D:\\ecom\\src\\components\\FetchNodeServices.js",[],"D:\\ecom\\src\\components\\category\\CategoryInterface.js",["188","189","190","191","192","193","194","195","196","197"],"import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {postDataAndImage,ServerURL} from '../FetchNodeServices'\r\nimport {isEmpty} from '../Checks'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:'flex',\r\n    alignContent:'center',\r\n     justifyContent:'center',\r\n     \r\n  },\r\n  headingdiv:{\r\n   display:'flex',\r\n   flexDirection:'column',\r\n   width:'auto',\r\n   padding:3,\r\n   border:'1 solid #000000'\r\n    \r\n  },\r\n  maindiv:{\r\n     display:'flex',\r\n     alignContent:'center',\r\n     justifyContent:'center',\r\n     flexDirection:'column',\r\n \r\n     padding:20,\r\n     marginTop:20,\r\n     width:600,\r\n     backgroundColor:'#ecf0f1'\r\n\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width:70 ,\r\n    height:70,\r\n    margin:5,\r\n    padding:3,\r\n    \r\n    \r\n  },\r\n  \r\n}));\r\n\r\nexport default function CategoryInterface(props)\r\n{\r\n    const classes = useStyles();\r\n    const [getCategoryName,setCategoryName]=useState('')\r\n    const [getCategoryDescription,setCategoryDescription]=useState('')\r\n    const [getCategoryIcon,setCategoryIcon]=useState({fileBytes:'',fileUrl:'/noimage.png'})\r\n    const [getCategoryAd,setCategoryAd]=useState({fileBytes:'',fileUrl:'/noimage.png'})\r\n    const [getCategoryStatus,setCategoryStatus]=useState('')\r\n    const [getMessage,setMessage]=useState()\r\n    const [getErrorPic,setErrorPic]=useState({cn:'tp.png',cd:'tp.png',ci:'tp.png',ca:'tp.png',cas:'tp.png'})\r\n    const handleIcon=(event)=>{\r\n    setCategoryIcon({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n\r\n    }\r\n    const handleAd=(event)=>{\r\n      setCategoryAd({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n  \r\n      }\r\n  const handleSubmit=async()=>{\r\n    var error=false\r\n    var cn=isEmpty(getCategoryName)\r\n    var cd=isEmpty(getCategoryDescription)\r\n    var ci=isEmpty(getCategoryIcon.fileBytes)\r\n    var ca=isEmpty(getCategoryAd.fileBytes)\r\n    var cas=isEmpty(getCategoryStatus)\r\n    if(cn.err)\r\n    { error=cn.err\r\n     }\r\n\r\n    if(cd.err)\r\n    { error=cd.err\r\n      }\r\n    if(ci.err)\r\n    {error=ci.err}\r\n\r\n    if(ca.err)\r\n    {error=ca.err}\r\n    if(cas.err)\r\n    {error=cas.err}\r\n    setErrorPic({cn:cn.img,cd:cd.img,ci:ci.img,ca:ca.img,cas:cas.img})\r\n    \r\n    if(!error)\r\n    \r\n        {\r\n    var formData=new FormData()\r\n    formData.append('categoryname',getCategoryName)\r\n    formData.append('description',getCategoryDescription)\r\n    formData.append('icon',getCategoryIcon.fileBytes) \r\n    formData.append('ad',getCategoryAd.fileBytes) \r\n    formData.append('adstatus',getCategoryStatus) \r\n    const config={headers:{'content-type':'multipart/form-data'}}\r\n    var result=await postDataAndImage('category/categorysubmit',formData,config)\r\n     if(result){\r\n       setMessage(\"Record Submtted....\")\r\n     } \r\n     else\r\n      { setMessage(\"Fail to Record Submit\")}\r\n     \r\n    }\r\n\r\n  }\r\n\r\nreturn(\r\n\r\n<div className={classes.root} >\r\n   <div className={classes.maindiv}>\r\n     <div className={classes.headingdiv}>\r\n       <h3>Category Interface</h3>\r\n\r\n     </div>\r\n    <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n        <img src={`/${getErrorPic.cn}`}/> \r\n        <TextField id=\"outlined-basic\" label=\"Category Name\" variant=\"outlined\"  fullWidth onChange={(event)=>setCategoryName(event.target.value)} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n        <img src={`/${getErrorPic.cd}`}/> \r\n        <TextField onChange={(event)=>setCategoryDescription(event.target.value)} id=\"outlined-basic\" label=\"Category Description\" variant=\"outlined\" fullWidth />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <img src={`/${getErrorPic.ci}`}/> \r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"icon\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleIcon(event)}\r\n      />\r\n      <label htmlFor=\"icon\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\" >\r\n          Upload Icon\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getCategoryIcon.fileUrl}  variant=\"rounded\" className={classes.large} />\r\n       </Grid>\r\n \r\n    <Grid item xs={12} sm={6}>\r\n    <img src={`/${getErrorPic.ca}`}/> \r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id='ad'\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleAd(event)}\r\n      />\r\n      <label htmlFor=\"ad\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload Ad\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getCategoryAd.fileUrl}  className={classes.large} />\r\n       </Grid>\r\n\r\n     <Grid item  xs={12}>\r\n     <img src={`/${getErrorPic.cas}`}/> \r\n     <FormControl variant=\"outlined\" fullWidth >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Ad Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getCategoryStatus}\r\n          onChange={(event)=>setCategoryStatus(event.target.value)}\r\n          label=\"Ad Status\"\r\n        >\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         </Select>\r\n      </FormControl>\r\n         </Grid>\r\n\r\n     <Grid item style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n     <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()}>\r\n      Submit\r\n     </Button>\r\n     </Grid>\r\n     <Grid item style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n     <Button variant=\"contained\" color=\"primary\">\r\n      Reset\r\n     </Button>\r\n     </Grid>\r\n    </Grid>\r\n    <div style={{width:550,padding:10,display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n    <b>{getMessage}</b>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n)\r\n\r\n\r\n}","D:\\ecom\\src\\components\\brand\\BrandInterface.js",["198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {postDataAndImage,ServerURL,getData} from '../FetchNodeServices'\r\nimport {isEmpty} from '../Checks'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:'flex',\r\n    alignContent:'center',\r\n     justifyContent:'center',\r\n     \r\n  },\r\n  headingdiv:{\r\n   display:'flex',\r\n   flexDirection:'column',\r\n   width:'auto',\r\n   padding:3,\r\n   border:'1 solid #000000',\r\n   alignContent:'center',\r\n   justifyContent:'center',\r\n  },\r\n  maindiv:{\r\n     display:'flex',\r\n     alignContent:'center',\r\n     justifyContent:'center',\r\n     flexDirection:'column',\r\n \r\n     padding:20,\r\n     marginTop:20,\r\n     width:600,\r\n     backgroundColor:'#ecf0f1'\r\n\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width:70 ,\r\n    height:70,\r\n    margin:5,\r\n    padding:3,\r\n    \r\n    \r\n  },\r\n  \r\n}));\r\n\r\nexport default function BrandInterface(props)\r\n{\r\n    const classes = useStyles();\r\n    const [getCategoryId,setCategoryId]=useState('')\r\n    const [getBrandName,setBrandName]=useState('')\r\n    const [getBrandDescription,setBrandDescription]=useState('')\r\n    const [getBrandIcon,setBrandIcon]=useState({fileBytes:'',fileUrl:'/noimage.png'})\r\n    const [getBrandAd,setBrandAd]=useState({fileBytes:'',fileUrl:'/noimage.png'})\r\n    const [getBrandStatus,setBrandStatus]=useState('')\r\n    const [getTopBrand,setTopBrand]=useState('')\r\n    const [getNewBrand,setNewBrand]=useState('')\r\n    const [getList,setList]=useState([])\r\n    const [getMessage,setMessage]=useState()\r\n    const [geterrpic,seterrpic]=useState({ci:'tp.png',bn:'tp.png',de:'tp.png',pi:'tp.png',ad:'tp.png',as:'tp.png',tb:'tp.png',nb:'tp.png'})\r\n    const handleIcon=(event)=>{\r\n    setBrandIcon({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n\r\n    }\r\n    const handleAd=(event)=>{\r\n      setBrandAd({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n  \r\n      }\r\n\r\nconst fetchcategory=async()=>{\r\n  var result=await getData('category/fetchallcategory')\r\n  setList(result)\r\n}\r\n\r\n function showCategory(){\r\n   return getList.map(item=>(\r\n     <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n   ))\r\n\r\n }\r\n\r\nuseEffect(function(){\r\nfetchcategory()\r\n},[])\r\n\r\n  const handleSubmit=async()=>{\r\n    var error = false\r\n    var ci = isEmpty(getCategoryId)\r\n    var bn = isEmpty(getBrandName)\r\n    var de = isEmpty(getBrandDescription)\r\n    var pi = isEmpty(getBrandIcon.fileBytes)\r\n    var ad = isEmpty(getBrandAd.fileBytes)\r\n    var as = isEmpty(getBrandStatus)\r\n    var tb = isEmpty(getTopBrand)\r\n    var nb = isEmpty(getNewBrand)\r\n    \r\n\r\n    if(ci.err)\r\n    {\r\n      error= ci.err\r\n    }\r\n    if(bn.err)\r\n    {\r\n      error=bn.err\r\n    }\r\n    if(de.err)\r\n    {\r\n      error=de.err\r\n    }\r\n    if(pi.err)\r\n    {\r\n      error=pi.err\r\n    }\r\n    if(ad.err)\r\n    {\r\n      error=ad.err\r\n    }\r\n    if(as.err)\r\n    {\r\n      error=as.err\r\n    }\r\n    if(tb.err)\r\n    {\r\n      error=tb.err\r\n    }\r\n    if(nb.err)\r\n    {\r\n      error=nb.err\r\n    }\r\n\r\n   seterrpic({ci:ci.img,bn:bn.img,de:de.img,pi:pi.img,ad:ad.img,as:as.img,tb:tb.img,nb:nb.img})\r\n  \r\n\r\n\r\n  if(!error)\r\n  {\r\n  var formData=new FormData()\r\n    formData.append('categoryId',getCategoryId)\r\n    formData.append('brandName',getBrandName)\r\n    formData.append('description',getBrandDescription)\r\n    formData.append('picture',getBrandIcon.fileBytes) \r\n    formData.append('ad',getBrandAd.fileBytes) \r\n    formData.append('adStatus',getBrandStatus) \r\n    formData.append('topBrands',getTopBrand) \r\n    formData.append('newBrands',getNewBrand) \r\n    const config={headers:{'content-type':'multipart/form-data'}}\r\n    var result=await postDataAndImage('brand/brandSubmit',formData,config)\r\n    if(result){\r\n      setMessage(\"Record Submtted....\")\r\n    } \r\n    else\r\n     { setMessage(\"Fail to Record Submit\")}\r\n    \r\n  }\r\n  else\r\n  {\r\n    alert('fill the all entries')\r\n  }\r\n  }\r\n\r\nreturn(\r\n\r\n<div className={classes.root} >\r\n   <div className={classes.maindiv}>\r\n     <div className={classes.headingdiv}>\r\n       <h3>Brand Interface</h3>\r\n\r\n     </div>\r\n    <Grid container spacing={2}>\r\n    <Grid item  xs={12} sm={6}>\r\n    <img src={`${geterrpic.ci}`} width='13' height='13'/>\r\n     <FormControl variant=\"outlined\" fullWidth >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Category Id</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getCategoryId}\r\n          onChange={(event)=>setCategoryId(event.target.value)}\r\n          label=\"Ad Status\"\r\n        >\r\n         {showCategory()}\r\n         </Select>\r\n      </FormControl>\r\n    \r\n     </Grid>\r\n\r\n         <Grid item xs={12} sm={6}>\r\n         <img src={`${geterrpic.bn}`} width='13' height='13'/>\r\n        <TextField id=\"outlined-basic\" label=\"Brand Name\" variant=\"outlined\"  fullWidth onChange={(event)=>setBrandName(event.target.value)} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n        <img src={`${geterrpic.de}`} width='13' height='13'/>\r\n        <TextField onChange={(event)=>setBrandDescription(event.target.value)} id=\"outlined-basic\" label=\"Brand Description\" variant=\"outlined\" fullWidth />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <img src={`${geterrpic.pi}`} width='13' height='13'/>\r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"picture\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleIcon(event)}\r\n      />\r\n      <label htmlFor=\"picture\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\" >\r\n          Upload Icon\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getBrandIcon.fileUrl}  variant=\"rounded\" className={classes.large} />\r\n       </Grid>\r\n \r\n    <Grid item xs={12} sm={6}>\r\n    <img src={geterrpic.ad} width='13' height='13'/>\r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id='ad'\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleAd(event)}\r\n      />\r\n      <label htmlFor=\"ad\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload Ad\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getBrandAd.fileUrl}  className={classes.large} />\r\n       </Grid>\r\n\r\n\r\n     <Grid item  xs={12}>\r\n     <img src={geterrpic.as} width='13' height='13'/>\r\n     <FormControl variant=\"outlined\" fullWidth >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Ad Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getBrandStatus}\r\n          onChange={(event)=>setBrandStatus(event.target.value)}\r\n          label=\"Ad Status\"\r\n        >\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         </Select>\r\n      </FormControl>\r\n    \r\n     </Grid>\r\n\r\n<Grid item  xs={12} sm={6}>\r\n<img src={geterrpic.tb} width='13' height='13'/>\r\n     <FormControl variant=\"outlined\" fullWidth >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Top Brands</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getTopBrand}\r\n          onChange={(event)=>setTopBrand(event.target.value)}\r\n          label=\"Top Brands\"\r\n        >\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         </Select>\r\n      </FormControl>\r\n    \r\n     </Grid>\r\n     \r\n     <Grid item  xs={12} sm={6}>\r\n     <img src={geterrpic.nb} width='13' height='13'/>\r\n     <FormControl variant=\"outlined\" fullWidth >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">New Brands</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getNewBrand}\r\n          onChange={(event)=>setNewBrand(event.target.value)}\r\n          label=\"New Brands\"\r\n        >\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         </Select>\r\n      </FormControl>\r\n    \r\n     </Grid>\r\n     \r\n\r\n\r\n     <Grid item style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n     <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()}>\r\n      Submit\r\n     </Button>\r\n     </Grid>\r\n     <Grid item style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n     <Button variant=\"contained\" color=\"primary\">\r\n      Reset\r\n     </Button>\r\n     </Grid>\r\n     <b>{getMessage}</b>\r\n    </Grid>\r\n    </div>\r\n</div>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\ecom\\src\\components\\Checks.js",["211","212","213","214","215","216","217","218"],"function isEmpty(txt) {\r\n  if (txt.length == 0) return { img: \"crs.png\", err: true };\r\n  else return { img: \"tick.png\", err: false };\r\n}\r\nfunction checkRequire(txt) {\r\n  if (txt.length == 0) return false;\r\n  else return true;\r\n}\r\n\r\nfunction checkPassword(txt) {\r\n  if (txt.length <= 5) return false;\r\n  else return true;\r\n}\r\n\r\nfunction checkMobile(txt) {\r\n  var reg = /[0-9]{10}/;\r\n  //Alert.alert('cc '+reg.test(txt))\r\n  if (reg.test(txt) == false) return false;\r\n  else return true;\r\n}\r\n\r\nfunction checkEmail(txt) {\r\n  if (checkRequire(txt)) {\r\n    var reg = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n    if (reg.test(txt) == false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { isEmpty, checkRequire, checkMobile, checkEmail, checkPassword };\r\n","D:\\ecom\\src\\components\\category\\DisplayAll.js",["219"],"import React,{useState,useEffect} from 'react';\r\nimport {ServerURL,getData} from '../FetchNodeServices'\r\nexport default function DisplayAll(props)\r\n{ const [getList,setList]=useState([])\r\n\r\nconst fetchData=async()=>{\r\nvar result=await getData('category/fetchallcategory')\r\nsetList(result)\r\n\r\n}\r\n\r\nuseEffect(function(){\r\nfetchData()\r\n\r\n},[])    \r\n\r\nconst displayResult=()=>{\r\nreturn(\r\n        \r\n      getList.map((item,index)=>{\r\n        return(  <div>\r\n              {item.categoryid} {item.categoryname}\r\n             </div>) })     \r\n            \r\n    )\r\n}\r\n\r\n\r\nreturn(<div>\r\n{displayResult()}\r\n\r\n</div>)\r\n}","D:\\ecom\\src\\components\\category\\DisplayFormat.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  ServerURL,\r\n  getData,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { isEmpty } from \"../Checks\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  subdiv: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    width: \"100px\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  large: {\r\n    width: 70,\r\n    height: 70,\r\n    margin: 5,\r\n    padding: 3,\r\n  },\r\n}));\r\n\r\nexport default function DisplayFormat(props) {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [getCategoryId, setCategoryId] = useState(\"\");\r\n  const [getCategoryName, setCategoryName] = useState(\"\");\r\n  const [getCategoryDescription, setCategoryDescription] = useState(\"\");\r\n  const [getCategoryIcon, setCategoryIcon] = useState({\r\n    fileBytes: \"\",\r\n    fileUrl: \"/noimage.png\",\r\n  });\r\n  const [getCategoryAd, setCategoryAd] = useState({\r\n    fileBytes: \"\",\r\n    fileUrl: \"/noimage.png\",\r\n  });\r\n  const [getCategoryStatus, setCategoryStatus] = useState(\"\");\r\n  const [getBtnSaveIcon, setBtnSaveIcon] = useState(false);\r\n  const [getBtnSaveAdIcon, setBtnSaveAdIcon] = useState(false);\r\n  const [getMessage, setMessage] = useState();\r\n  const [getErrorPic, setErrorPic] = useState({\r\n    cn: \"\",\r\n    cd: \"\",\r\n    ci: \"\",\r\n    ca: \"\",\r\n    cas: \"\",\r\n  });\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const classes = useStyles();\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Category Id\", field: \"categoryid\" },\r\n    { title: \"Name\", field: \"categoryname\" },\r\n    { title: \"Description\", field: \"description\" },\r\n    {\r\n      title: \"Icon\",\r\n      field: \"icon\",\r\n      render: (rowData) => (\r\n        <img\r\n          src={`${ServerURL}/images/${rowData.icon}`}\r\n          style={{ width: 50, height: 50, borderRadius: \"5%\" }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Ad\",\r\n      field: \"ad\",\r\n      render: (rowData) => (\r\n        <img\r\n          src={`${ServerURL}/images/${rowData.ad}`}\r\n          style={{ width: 50, height: 50, borderRadius: \"5%\" }}\r\n        />\r\n      ),\r\n    },\r\n    { title: \"Ad Status\", field: \"adstatus\" },\r\n  ]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    var result = await getData(\"category/fetchallcategory\");\r\n    setData(result);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    //alert(oldData.categoryname)\r\n    var body = { categoryid: oldData.categoryid };\r\n    var result = await postData(\"category/categorydelete\", body);\r\n    alert(result.RESULT);\r\n  };\r\n\r\n  const handleIcon = (event) => {\r\n    setCategoryIcon({\r\n      fileBytes: event.target.files[0],\r\n      fileUrl: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n    setBtnSaveIcon(true);\r\n  };\r\n  const handleAd = (event) => {\r\n    setCategoryAd({\r\n      fileBytes: event.target.files[0],\r\n      fileUrl: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n    setBtnSaveAdIcon(true);\r\n  };\r\n  const handleSubmit = async () => {\r\n    var error = false;\r\n    var cn = isEmpty(getCategoryName);\r\n    var cd = isEmpty(getCategoryDescription);\r\n\r\n    var cas = isEmpty(getCategoryStatus);\r\n    if (cn.err) {\r\n      error = cn.err;\r\n    }\r\n\r\n    if (cd.err) {\r\n      error = cd.err;\r\n    }\r\n\r\n    if (cas.err) {\r\n      error = cas.err;\r\n    }\r\n    setErrorPic({ cn: cn.img, cd: cd.img, cas: cas.img });\r\n\r\n    if (!error) {\r\n      // var formData=new FormData()\r\n      // formData.append('categoryname',getCategoryName)\r\n      // formData.append('description',getCategoryDescription)\r\n      // formData.append('icon',getCategoryIcon.fileBytes)\r\n      // formData.append('ad',getCategoryAd.fileBytes)\r\n      // formData.append('adstatus',getCategoryStatus)\r\n      // const config={headers:{'content-type':'multipart/form-data'}}\r\n      // var result=await postDataAndImage('category/categorysubmit',formData,config)\r\n      //  if(result){\r\n      //    setMessage(\"Record Submtted....\")\r\n      //  }\r\n      //  else\r\n      // { setMessage(\"Fail to Record Submit\")}\r\n\r\n      var body = {\r\n        categoryid: getCategoryId,\r\n        categorydescription: getCategoryDescription,\r\n        categoryname: getCategoryName,\r\n        adstatus: getCategoryStatus,\r\n      };\r\n      var result = await postData(\"category/updatecategory\", body);\r\n      fetchData();\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveIcon = async () => {\r\n    var formData = new FormData();\r\n    formData.append(\"categoryid\", getCategoryId);\r\n    formData.append(\"icon\", getCategoryIcon.fileBytes);\r\n\r\n    const config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n    var result = await postDataAndImage(\r\n      \"category/editcategoryicon\",\r\n      formData,\r\n      config\r\n    );\r\n    setOpen(false);\r\n    fetchData();\r\n  };\r\n\r\n  const handleSaveAdIcon = async () => {\r\n    var formData = new FormData();\r\n    formData.append(\"categoryid\", getCategoryId);\r\n    formData.append(\"ad\", getCategoryAd.fileBytes);\r\n\r\n    const config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n    var result = await postDataAndImage(\r\n      \"category/editcategoryad\",\r\n      formData,\r\n      config\r\n    );\r\n    alert(result);\r\n    setOpen(false);\r\n    fetchData();\r\n  };\r\n\r\n  const showEditContent = () => {\r\n    return (\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Edit Category\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.cn}`} />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  value={getCategoryName}\r\n                  label=\"Category Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(event) => setCategoryName(event.target.value)}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.cd}`} />\r\n                <TextField\r\n                  onChange={(event) =>\r\n                    setCategoryDescription(event.target.value)\r\n                  }\r\n                  value={getCategoryDescription}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Category Description\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} sm={6}>\r\n        <img src={`/${getErrorPic.ci}`}/> \r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"icon\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleIcon(event)}\r\n      />\r\n      <label htmlFor=\"icon\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\" >\r\n          Upload Icon\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getCategoryIcon.fileUrl}  variant=\"rounded\" className={classes.large} />\r\n       </Grid>\r\n \r\n    <Grid item xs={12} sm={6}>\r\n    <img src={`/${getErrorPic.ca}`}/> \r\n        <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id='ad'\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleAd(event)}\r\n      />\r\n      <label htmlFor=\"ad\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload Ad\r\n        </Button>\r\n      </label>\r\n \r\n        </Grid>\r\n      <Grid  style={{display:'flex',justifyContent:'center'}} xs={12} sm={6}>\r\n      <img  src={getCategoryAd.fileUrl}  className={classes.large} />\r\n       </Grid> */}\r\n\r\n              <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.cas}`} />\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Ad Status\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={getCategoryStatus}\r\n                    onChange={(event) => setCategoryStatus(event.target.value)}\r\n                    label=\"Ad Status\"\r\n                  >\r\n                    <MenuItem value={\"No\"}>No</MenuItem>\r\n                    <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                xs={12}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handleSubmit()}\r\n                >\r\n                  Edit Data\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Divider />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <img src={`/${getErrorPic.ci}`} />\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"icon\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(event) => handleIcon(event)}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div style={{ padding: 3 }}>\r\n                    <label htmlFor=\"icon\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Change Icon\r\n                      </Button>\r\n                    </label>\r\n                  </div>\r\n                  <div style={{ padding: 3 }}>\r\n                    {getBtnSaveIcon ? (\r\n                      <Button\r\n                        onClick={handleSaveIcon}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                      >\r\n                        SaveIcon\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                xs={12}\r\n                sm={6}\r\n              >\r\n                <img\r\n                  src={getCategoryIcon.fileUrl}\r\n                  variant=\"rounded\"\r\n                  className={classes.large}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Divider />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <img src={`/${getErrorPic.ca}`} />\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"ad\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(event) => handleAd(event)}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div style={{ padding: 3 }}>\r\n                    <label htmlFor=\"ad\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Change Ad\r\n                      </Button>\r\n                    </label>\r\n                  </div>\r\n                  <div style={{ padding: 3 }}>\r\n                    {getBtnSaveAdIcon ? (\r\n                      <Button\r\n                        onClick={handleSaveAdIcon}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        autoFocus\r\n                      >\r\n                        Save Ad\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                xs={12}\r\n                sm={6}\r\n              >\r\n                <img src={getCategoryAd.fileUrl} className={classes.large} />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const handleEdit = (rowData) => {\r\n    setCategoryId(rowData.categoryid);\r\n    setCategoryName(rowData.categoryname);\r\n    setCategoryDescription(rowData.description);\r\n    setCategoryStatus(rowData.adstatus);\r\n    setCategoryIcon({\r\n      fileBytes: \"\",\r\n      fileUrl: `${ServerURL}/images/${rowData.icon}`,\r\n    });\r\n    setCategoryAd({\r\n      fileBytes: \"\",\r\n      fileUrl: `${ServerURL}/images/${rowData.ad}`,\r\n    });\r\n    setBtnSaveIcon(false);\r\n\r\n    setErrorPic({\r\n      cn: \"tick.png\",\r\n      cd: \"tick.png\",\r\n      ci: \"tick.png\",\r\n      ca: \"tick.png\",\r\n      cas: \"tick.png\",\r\n    });\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  function Editable() {\r\n    return (\r\n      <div className={classes.subdiv}>\r\n        <MaterialTable\r\n          title=\"Category Register\"\r\n          columns={columns}\r\n          data={data}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => {\r\n                handleEdit(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setData([...data, newData]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n                  handleDelete(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {Editable()}\r\n      {showEditContent()}\r\n    </div>\r\n  );\r\n}\r\n","D:\\ecom\\src\\components\\model\\ModelInterface.js",["236","237","238","239","240"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {postData,ServerURL,getData} from '../FetchNodeServices';\r\nimport {isEmpty} from '../Checks'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:'flex',\r\n    alignContent:'center',\r\n    justifyContent:'center',\r\n  },\r\n maindiv:{\r\n   display:'flex',\r\n   flexDirection:'column',\r\n   alignContent:'center',\r\n   justifyContent:'center',\r\n   padding:20,\r\n   marginTop:30,\r\n   width:600,\r\n   backgroundColor:'#dfe4ea',\r\n   border:'2px solid #7f8c8d',\r\n   borderRadius:'2%',\r\n },\r\n headingdiv:{\r\n  display:'flex',\r\n  width:'auto',\r\n  padding:3,\r\n  border:'1 solid #000000',\r\n\r\n },\r\n input: {\r\n  display: 'none',\r\n},\r\nlarge: {\r\n  width: 70,\r\n  height: 70,\r\n  margin:5,\r\n},\r\n}));\r\n\r\nexport default function ModelInterface(props)\r\n{\r\n    const classes = useStyles();\r\n    const[getList,setList]=useState([]);\r\n    const[getBrand,setBrand]=useState([]);\r\n    const[getCategoryId,setCategoryId]=useState('');\r\n    const[getBrandId,setBrandId]=useState('');\r\n    const[getModelName,setModelName]=useState('');\r\n    const[getModelDescription,setModelDescription]=useState('');\r\n    const[getMessage,setMessage]=useState();\r\n    const[getErrorPic,setErrorPic]=useState({bi:'tp.png',mn:'tp.png',md:'tp.png'})\r\n   \r\n    // const categoryid =(event)=>{\r\n    //   setcategoryid(event.target.value)\r\n    //   }\r\n\r\n  \r\n\r\n    const handleCategory=(event)=>{\r\n      setCategoryId(event.target.value);\r\n     fetchBrand(event.target.value);\r\n     }\r\n\r\n\r\n    const fetchData=async()=>{\r\n      var result=await getData('category/fetchallcategory')\r\n      setList(result)\r\n     }\r\n\r\n     const fetchBrand=async(data)=>{\r\n      var body={categoryid:data}\r\n      var result=await postData('brand/fetchbrands',body)\r\n           setBrand(result)\r\n     }\r\n\r\n   \r\n\r\n     useEffect(function(){\r\n      fetchData()\r\n      fetchBrand()\r\n       },[])\r\n       \r\n    \r\n       const categoryItems=()=>{\r\n        return(\r\n         \r\n                getList? getList.map((item,index)=>{\r\n                     return(\r\n                          <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                    )\r\n                 }):null\r\n            \r\n        )\r\n        }\r\n\r\n        const brandItems=()=>{\r\n          return(\r\n           \r\n                   getBrand.map((item,index)=>{\r\n                       return(\r\n                            <MenuItem value={item.brandid}>{item.brandname}</MenuItem>\r\n                      )\r\n                   })\r\n              \r\n          )\r\n          }\r\n  \r\n\r\n      const handleSubmit=async()=>{\r\n\r\n        var error=false\r\n        var bi=isEmpty(getBrandId)\r\n        var mn=isEmpty(getModelName)\r\n        var md=isEmpty(getModelDescription)\r\n       \r\n        if(bi.err)\r\n        {\r\n           error=bi.err\r\n          \r\n        }\r\n        if(mn.err)\r\n        {\r\n           error=mn.err\r\n           \r\n        }\r\n        if(md.err)\r\n        {\r\n           error=md.err\r\n          \r\n        }\r\n      \r\n      \r\n          setErrorPic({bi:bi.img,mn:mn.img,md:md.img})\r\n       \r\n        if(!error)\r\n        {\r\n             \r\n        var body={brandid:getBrandId,modelname:getModelName,description:getModelDescription}\r\n        var result=await postData('model/modelSubmit',body)\r\n        \r\n        if(result){\r\n          setMessage(\"Record Submitted...\")\r\n        }\r\n        else{\r\n          setMessage(\"Record not submitted...\")\r\n        }\r\n      }\r\n      else{\r\n        alert(\"Please fill the blank entry..\")\r\n      }\r\n      }  \r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n          <div className={classes.maindiv}>\r\n             <div className={classes.headingdiv}>\r\n             <h3>Model Interface</h3>\r\n            </div>\r\n           <Grid container spacing={2}>\r\n           <Grid item xs={12} sm={6}>\r\n                   <img src='/tp.png' />\r\n                   <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Category Id</InputLabel>\r\n                 <Select value={getCategoryId}  onChange={(event)=>handleCategory(event)}  \r\n                 label=\"Category Id\" >\r\n                           {categoryItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                  <img src={`/${getErrorPic.bi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Brand Id</InputLabel>\r\n                 <Select value={getBrandId}  onChange={(event)=>setBrandId(event.target.value)}  \r\n                 label=\"Brand Id\" >\r\n                           {brandItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n                            \r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.mn}`} />\r\n                  <TextField  label=\"Model Name\" variant=\"outlined\" fullWidth onChange={(event)=>setModelName(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.mn}`} />\r\n                  <TextField  label=\"Model Description\" variant=\"outlined\" fullWidth onChange={(event)=>setModelDescription(event.target.value)} />\r\n                </Grid>\r\n            \r\n           \r\n           <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()} >\r\n               Submit\r\n                   </Button>\r\n                  </Grid>\r\n\r\n                  <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                   Reset\r\n                   </Button>\r\n                  </Grid>\r\n\r\n\r\n           </Grid>\r\n           <div style={{ width:600,padding:10,display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n         <b>{getMessage}</b>\r\n         </div>\r\n          </div>\r\n      \r\n        </div>\r\n    );\r\n}","D:\\ecom\\src\\components\\model\\DisplayModel.js",["241","242","243","244","245","246","247","248","249"],"import React,{useEffect, useState} from 'react';\r\nimport {ServerURL,getData, postData,postDataAndImage} from '../FetchNodeServices';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {isEmpty} from '../Checks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display:'flex',\r\n      alignContent:'center',\r\n      justifyContent:'center',\r\n    },\r\n   subdiv:{\r\n     display:'flex',\r\n     alignContent:'center',\r\n     justifyContent:'center',\r\n     padding:20,\r\n     marginTop:30,\r\n     width:800,\r\n     \r\n    \r\n   },\r\n\r\n   input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: 70,\r\n    height: 70,\r\n    margin:5,\r\n  },\r\n  \r\n  }));\r\n\r\nexport default function DisplayModel(props)\r\n{\r\n    const [data, setData] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const[getList,setList]=useState([]);\r\n    //const[getCategory,setCategory]=useState([]);\r\n    \r\n    const[getBrand,setBrand]=useState([]);\r\n    const[getCategoryId,setCategoryId]=useState('');\r\n    const[getModelId,setModelId]=useState('');\r\n    const[getBrandId,setBrandId]=useState('');\r\n    const[getModelName,setModelName]=useState('');\r\n    const[getModelDescription,setModelDescription]=useState('');\r\n    const[getErrorPic,setErrorPic]=useState({bi:'',mn:'',md:''})\r\n  \r\n    \r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = useStyles();\r\n\r\n    const [columns, setColumns] = useState([\r\n        \r\n        { title: 'Model Id', field: 'modelid' },\r\n        { title: 'Brand Id', field: 'brandid' },\r\n        { title: 'Model Name', field: 'modelname' },\r\n        { title: 'Description', field: 'description' },\r\n       \r\n      ]);\r\n\r\n   \r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    const fetchData=async()=>{\r\n        var result=await getData('model/displayAllModel')\r\n        setData(result)\r\n    }\r\n\r\n    const handleCategory=(event)=>{\r\n      setCategoryId(event.target.value);\r\n      fetchBrand(event.target.value);\r\n     }\r\n\r\n\r\n    const fetchCategory=async()=>{\r\n      var result=await getData('category/fetchallcategory')\r\n      setList(result)\r\n     }\r\n\r\n     const fetchBrand=async(data)=>{\r\n      var body={categoryid:data}\r\n      var result=await postData('brand/fetchbrands',body)\r\n           setBrand(result)\r\n     }\r\n\r\n     const fetchCategoryByBrand=async(brandid)=>{\r\n      var body={brandid:brandid}\r\n      var result=await postData('brand/fetchcategorybybrand',body)\r\n          // setCategory(result[0])\r\n          await fetchBrand(result[0].categoryid)\r\n           await setCategoryId(result[0].categoryid)\r\n     }\r\n\r\n     useEffect(function(){\r\n      fetchData()\r\n      fetchCategory()\r\n      fetchBrand()\r\n       },[])\r\n       \r\n    \r\n       const categoryItems=()=>{\r\n        return(\r\n         \r\n                getList? getList.map((item,index)=>{\r\n                     return(\r\n                          <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                    )\r\n                 }):null\r\n            \r\n        )\r\n        }\r\n\r\n        const brandItems=()=>{\r\n          return(\r\n           \r\n                   getBrand.map((item,index)=>{\r\n                       return(\r\n                            <MenuItem value={item.brandid}>{item.brandname}</MenuItem>\r\n                      )\r\n                   })\r\n              \r\n          )\r\n          }\r\n  \r\n      \r\n        const handleSubmit=async()=>{\r\n                var error=false\r\n                var bi=isEmpty(getBrandId)\r\n                var mn=isEmpty(getModelName)\r\n                var md=isEmpty(getModelDescription)\r\n               \r\n                if(bi.err)\r\n                {\r\n                   error=bi.err\r\n                  \r\n                }\r\n                if(mn.err)\r\n                {\r\n                   error=mn.err\r\n                   \r\n                }\r\n                if(md.err)\r\n                {\r\n                   error=md.err\r\n                  \r\n                }\r\n              \r\n              \r\n                  setErrorPic({bi:bi.img,mn:mn.img,md:md.img})\r\n          \r\n              \r\n  \r\n        if(!error)\r\n        {\r\n          \r\n            var body={modelid:getModelId,brandid:getBrandId,modelname:getModelName,description:getModelDescription}\r\n            var result=await postData('model/updatemodel',body)\r\n                 \r\n                 fetchData()\r\n                 setOpen(false)\r\n      }\r\n      \r\n      }  \r\n\r\n    const showEditContent=()=>{\r\n      return(\r\n        <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Edit Model\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          <Grid container spacing={2}>\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n                   <img src='/tp.png' />\r\n                   <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Category Id</InputLabel>\r\n                 <Select value={getCategoryId}  onChange={(event)=>handleCategory(event)}  \r\n                 label=\"Category Id\" >\r\n                           {categoryItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                  <img src={`/${getErrorPic.bi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Brand Id</InputLabel>\r\n                 <Select value={getBrandId}  onChange={(event)=>setBrandId(event.target.value)}  \r\n                 label=\"Brand Id\" >\r\n                           {brandItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n                            \r\n                            \r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.mn}`} />\r\n                  <TextField value={getModelName} label=\"Model Name\" variant=\"outlined\" fullWidth onChange={(event)=>setModelName(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.mn}`} />\r\n                  <TextField value={getModelDescription} label=\"Model Description\" variant=\"outlined\" fullWidth onChange={(event)=>setModelDescription(event.target.value)} />\r\n                </Grid>\r\n            \r\n\r\n           <Grid style={{ display:'flex'}} item xs={12}>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()} >\r\n              Edit Data\r\n                   </Button>\r\n                  </Grid>\r\n           </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      )\r\n    }\r\n\r\n    const handleEdit=async(rowData)=>{\r\n        fetchCategoryByBrand(rowData.brandid)\r\n      \r\n        setModelId(rowData.modelid)\r\n        setBrandId(rowData.brandid)\r\n        setModelName(rowData.modelname)\r\n        setModelDescription(rowData.description)\r\n       setOpen(true)\r\n       setErrorPic({bi:'tic.png',mn:'tic.png',md:'tic.png'})\r\n      \r\n    }\r\n\r\n    const handleDelete=async(oldData)=>{\r\n     \r\n      var body={modelid:oldData.modelid}\r\n      var result=await postData('model/deleteModel',body)\r\n      //alert(result.Result)\r\n\r\n    }\r\n\r\n    function Editable() {\r\n        \r\n\r\n        return (\r\n          <MaterialTable\r\n            title=\"Model Register\"\r\n            columns={columns}\r\n            data={data}\r\n           \r\n            actions={[\r\n              {\r\n                icon:'edit',\r\n                tooltip:'Edit',\r\n                onClick:(event,rowData)=>{\r\n                  handleEdit(rowData)\r\n                }\r\n              }\r\n\r\n            ]}\r\n\r\n            editable={{\r\n              onRowAdd: newData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    setData([...data, newData]);\r\n                    \r\n                    resolve();\r\n                  }, 1000)\r\n                }),\r\n            \r\n\r\n              onRowDelete: oldData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataDelete = [...data];\r\n                    const index = oldData.tableData.id;\r\n                    dataDelete.splice(index, 1);\r\n                    setData([...dataDelete]);\r\n                    handleDelete(oldData);\r\n                    resolve()\r\n                  }, 1000)\r\n                }),\r\n            }}\r\n            options={{\r\n                rowStyle: {\r\n                  backgroundColor: '#EEE',\r\n                }\r\n              }}\r\n          />\r\n        )\r\n      }\r\n\r\nreturn(\r\n<div className={classes.root}>\r\n<div className={classes.subdiv}>\r\n{Editable()}\r\n{showEditContent()}\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\n}","D:\\ecom\\src\\components\\DisplayTracking.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React,{useState,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles,Typography } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport {ServerURL,getData,postData,postDataAndImage} from './FetchNodeServices'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display:'flex',\r\n      alignContent:'center',\r\n       justifyContent:'center',\r\n       \r\n    },\r\n\r\n    subdiv:{\r\n        display:'flex',\r\n        // alignContent:'center',\r\n        //  justifyContent:'center',\r\n         padding:20,  \r\n         width:'100px', \r\n         marginLeft:'10px' ,\r\n         marginRight:'10px',\r\n    },\r\n\r\n    maindiv:{\r\n      display:'flex',\r\n      alignContent:'center',\r\n      justifyContent:'center',\r\n      flexDirection:'column',\r\n  \r\n      padding:20,\r\n      marginTop:20,\r\n      width:600,\r\n      backgroundColor:'#ecf0f1'\r\n \r\n   },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    large: {\r\n      width:70 ,\r\n      height:70,\r\n      margin:5,\r\n      padding:3,\r\n      \r\n      \r\n    },\r\n}))  \r\n\r\nexport default function DisplayTracking(props)\r\n{ \r\n    const [data, setData] = useState([])\r\n    const [selectedDate1, setSelectedDate1] = React.useState(new Date('2014-08-18T21:11:54'));\r\n    const [selectedDate2, setSelectedDate2] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    \r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = useStyles();\r\n    \r\n    const [columns, setColumns] = useState([\r\n\r\n\r\n        { title: 'Transaction Id', field: 'transactionid' },\r\n       \r\n        // { title: 'TDate', field: 'tdate' },\r\n        // { title: 'TTime', field: 'ttime' },\r\n          \r\n        { title: 'Employee Id', field: 'emplyeeid',render: rowData=><div><div>{rowData.employeeid}</div><div>{rowData.vendorid}</div></div>},\r\n        { title: 'Latitude', field: 'latitude',render: rowData=><div><div>{rowData.latitude}</div><div>{rowData.longtitude}</div></div>},\r\n        { title: 'TDate', field: 'tdate',render: rowData=><div><div>{rowData.tdate}</div><div>{rowData.ttime}</div></div>},\r\n        { title: 'Task Id', field: 'taskid' },\r\n        { title: 'Task Id', field: 'taskid' },\r\n      ]);\r\n\r\n      const fetchAllTracking=async()=>{\r\n          var result=await getData('tracking/displayAll')\r\n          setData(result)\r\n      }\r\n      useEffect(function(){\r\n          fetchAllTracking()\r\n       \r\n      },[])\r\n\r\n      const handleDateChange1 = async(date) => {\r\n        setSelectedDate1(date);\r\n      \r\n      };\r\n      const handleDateChange2 = async(date) => {\r\n        setSelectedDate2(date);\r\n      \r\n      };\r\n\r\n      // const handleDate=async(event)=>\r\n      // {\r\n      //  // setDate(event.target.value)\r\n      //  // var transactionid=event.target.value\r\n        \r\n      \r\n      //   var result=await postData('tracking/trackdate')\r\n      //   if(result)\r\n      //   {\r\n      //     await setData({data:result})\r\n      //   }\r\n      // }\r\nfunction Editable() {\r\n  \r\n \r\n    return (\r\n        \r\n      \r\n\r\n\r\n  <Paper className={classes.root}>\r\n   \r\n  <React.Fragment>\r\n  \r\n      <Grid container xs={24} spacing={3}>\r\n     \r\n    \r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid item xs={12} sm={6}>\r\n      <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          format=\"MM/dd/yyyy\"\r\n           value={selectedDate1}\r\n           onChange={handleDateChange1}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate2}\r\n          onChange={handleDateChange2}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </Grid>\r\n        </MuiPickersUtilsProvider>\r\n\r\n      <div className={classes.subdiv}>\r\n\r\n\r\n        \r\n      <MaterialTable\r\n      \r\n       title=\"Model List\"\r\n       \r\n        columns={columns}\r\n        data={data}\r\n\r\n        actions={[\r\n          {\r\n            icon: 'edit',\r\n            tooltip: 'Edit',\r\n            onClick: (event, rowData) => {\r\n            \r\n            }\r\n          }\r\n        ]}\r\n        \r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n\r\n          \r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n              \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      /> \r\n       </div>\r\n\r\n     \r\n \r\n\r\n\r\n</Grid>  \r\n\r\n    </React.Fragment>\r\n  \r\n    </Paper>\r\n   )\r\n  \r\n  }\r\n\r\nreturn(\r\n<div className={classes.root}>\r\n{Editable()}\r\n\r\n</div>)\r\n\r\n\r\n}","D:\\ecom\\src\\components\\brand\\DisplayBrand.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React,{useState,useEffect}  from 'react';\r\nimport {ServerURL,getData,postData,postDataAndImage} from '../FetchNodeServices'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport  {isEmpty} from '../Checks';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignContent:'center',\r\n    \r\n  },\r\n  formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  maindiv:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignContent:'center',\r\n    width:'45%',\r\n    \r\n  \r\n  },\r\n  subdiv:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignContent:'center',\r\n    width:'auto',\r\n    marginTop:'10px',\r\n    \r\n    padding:'15px',\r\n    borderRadius:'34px'\r\n  },\r\n \r\n  input: {\r\n      display: 'none',\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function DisplayBrand(props)\r\n{\r\n    const classes = useStyles();\r\n\r\n    const [getbrandid,setbrandid]=useState('')\r\n    const [getcategoryid,setcategoryid]=useState('')\r\n    const [getbrandname,setbrandname]=useState('')\r\n    const [getdescription,setdescription]=useState('')\r\n    const [getpicture,setpicture]=useState({fileBytes:'',fileUrl:''})\r\n    const [getsavepicture,setsavepicture]=useState(false)\r\n    const [getsavead,setsavead]=useState(false)\r\n    const [getad,setad]=useState({fileBytes:'',fileUrl:''})\r\n    const [getadstatus,setadstatus]=useState('')\r\n    const [gettopbrand,settopbrand]=useState('')\r\n    const [getnewbrand,setnewbrand]=useState('')\r\n    const [getMessage,setMessage] =useState('')\r\n    const [geterrpic,seterrpic]=useState({ci:'tp.png',bn:'tp.png',de:'tp.png',pi:'tp.png',ad:'tp.png',as:'tp.png',tb:'tp.png',nb:'tp.png'})\r\n    \r\n    const categoryid =(event)=>{\r\n    setcategoryid(event.target.value)\r\n    }\r\n    const brandname =(event)=>{\r\n    setbrandname(event.target.value)\r\n    }\r\n    const description=(event)=>{\r\n    setdescription(event.target.value)\r\n    }\r\n    const picture=(event)=>{\r\n    setpicture({fileBytes:(event.target.files[0]),fileUrl:URL.createObjectURL(event.target.files[0])})\r\n    setsavepicture(true)\r\n    }\r\n    const ad=(event)=>{\r\n    setad({fileBytes:(event.target.files[0]),fileUrl:URL.createObjectURL(event.target.files[0])})\r\n    setsavead(true)\r\n    }\r\n\r\n    const handlesavepicture=async()=>{\r\n      var formData =new FormData()\r\n\r\n      formData.append('brandid',getbrandid)\r\n      formData.append('picture',getpicture.fileBytes)\r\n      const config = {headers:{'content-type':'multipart/form-data'}}\r\n      var result =await postDataAndImage('brand/editpicture',formData,config)\r\n      setOpen(false)\r\n      fetchData()\r\n    }\r\n    \r\n    const handlesavead=async()=>{\r\n      var formData = new FormData()\r\n\r\n      formData.append('brandid',getbrandid)\r\n      formData.append('ad',getad.fileBytes)\r\n      const config ={headers:{'content-type':'multipart/form-data'}}\r\n      var result = await postDataAndImage('brand/editad',formData,config) \r\n      setOpen(false)\r\n      fetchData()\r\n    }\r\n\r\n    const handleEdit=async()=>{\r\n      \r\n       var error = false\r\n      var ci = isEmpty(getcategoryid)\r\n     var bn = isEmpty(getbrandname)\r\n       var de = isEmpty(getdescription)\r\n      //  var pi = isEmpty(getpicture.fileBytes)\r\n      // var ad = isEmpty(getad.fileBytes)\r\n      var as = isEmpty(getadstatus)\r\n       var tb = isEmpty(gettopbrand)\r\n      var nb = isEmpty(getnewbrand)\r\n      \r\n\r\n      if(ci.err)\r\n      {\r\n        error= ci.err\r\n      }\r\n      if(bn.err)\r\n      {\r\n        error=bn.err\r\n      }\r\n      if(de.err)\r\n      {\r\n        error=de.err\r\n      }\r\n      // if(pi.err)\r\n      // {\r\n      //   error=pi.err\r\n      // }\r\n      // if(ad.err)\r\n      // {\r\n      //   error=ad.err\r\n      // }\r\n      if(as.err)\r\n      {\r\n        error=as.err\r\n      }\r\n      if(tb.err)\r\n      {\r\n        error=tb.err\r\n      }\r\n      if(nb.err)\r\n      {\r\n        error=nb.err\r\n      }\r\n\r\n     seterrpic({ci:ci.img,bn:bn.img,de:de.img,as:as.img,tb:tb.img,nb:nb.img})\r\n    \r\n\r\n\r\n    if(!error)\r\n    {\r\n      // var formData = new FormData()\r\n      //   formData.append('categoryid',getcategoryid)\r\n      //   formData.append('brandname',getbrandname)\r\n      //   formData.append('description',getdescription)\r\n      //   formData.append('picture',getpicture.fileBytes)\r\n      //   formData.append('ad',getad.fileBytes)\r\n      //   formData.append('adstatus',getadstatus)\r\n      //   formData.append('topbrand',gettopbrand)\r\n      //   formData.append('newbrand',getnewbrand)\r\n\r\n      //   const config={headers:{'content-type':'multipart/formdata'}}\r\n      //   var result =await postDataAndImage('brand/brandsubmit',formData,config)\r\n\r\n      //   if(result)\r\n      //   {\r\n      //     console.log(result)\r\n      //     setMessage('Record Submited...')\r\n      //   }\r\n      //   else\r\n      //   {\r\n      //     console.log(result)\r\n      //     setMessage('Fail to submit record...')\r\n      //   }\r\n      var body = {brandid:getbrandid,categoryid:getcategoryid,brandname:getbrandname,description:getdescription,adstatus:getadstatus,topbrands:gettopbrand,newbrands:getnewbrand}\r\n      var result=await postData('brand/updatebrand',body)\r\n      fetchData()\r\n      setOpen(false)\r\n    }\r\n\r\n   \r\n\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [columns, setColumns] = useState([\r\n      { title: 'CategoryID', field: 'categoryid' },\r\n      { title: 'Brnadname', field :'brandname'},\r\n      { title: 'Description', field: 'description'},\r\n      {title:'Picture', field:'picture',render: rowData => <img src={`${ServerURL}/images/${rowData.picture}`} style={{width: 50,height:50, borderRadius: '3%'}}/>},\r\n      {title:'Ad', field:'ad',render: rowData => <img src={`${ServerURL}/images/${rowData.ad}`} style={{width: 50, height:50, borderRadius: '3%'}}/>},\r\n      {title:'Ad Status', field:'adstatus'},\r\n      {title:'Topbrand',field:'topbrands'},\r\n      {title:'Newbrand',field:'newbrands'}\r\n    ]);\r\n\r\n    const [getList,setList]=useState([])\r\n            const [open, setOpen] = React.useState(false);\r\n            const theme = useTheme();\r\n            const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n            const handleClickOpen = () => {\r\n              setOpen(true);\r\n            };\r\n\r\n            const handleClose = () => {\r\n              setOpen(false);\r\n            };\r\n\r\n\r\n\r\n\r\n\r\n    const fetchData = async()=>{\r\n\r\n        var result =await getData('brand/displaybrand')\r\n        setData(result)\r\n    }\r\n\r\n\r\n    const fetchCategory=async()=>{\r\n      var result=await getData('category/fetchallcategory')\r\n      setList(result)\r\n      \r\n      }\r\n    \r\n      const categoryItems=()=>{\r\n        return(\r\n                \r\n              getList.map((item,index)=>{\r\n                return(   \r\n                          <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                      ) })     \r\n                    \r\n            )\r\n        }\r\n    \r\n    \r\n     const  handleDelete=async(olddata)=>{\r\n      var body ={brandid:olddata.brandid}\r\n      var result = await postData('brand/deletebrand',body)\r\n      alert(result.RESULT)\r\n     }\r\n\r\n     const  handelEdit=(rowData)=>{\r\n        setbrandid(rowData.brandid)\r\n        setcategoryid(rowData.categoryid)\r\n        setbrandname(rowData.brandname)\r\n        setdescription(rowData.description)\r\n        setadstatus(rowData.adstatus)\r\n        settopbrand(rowData.topbrands)\r\n        setnewbrand(rowData.newbrands)\r\n        setpicture({fileBytes:'',fileUrl:`${ServerURL}/images/${rowData.picture}`})\r\n        setsavepicture(false)\r\n        setad({fileBytes:'',fileUrl:`${ServerURL}/images/${rowData.ad}`})\r\n        setsavead(false)\r\n\r\n        EditContent(rowData)\r\n        setOpen(true)\r\n     }\r\n\r\n     function EditContent(rowData){\r\n      return(<Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Edit Brand\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          <Grid container spacing={3} style={{marginTop:'-50px'}}>\r\n        <Grid item xs={12}>\r\n        <h3>{getMessage}</h3>\r\n        </Grid>\r\n          <Grid item xs={12}>\r\n            <img src={`${geterrpic.ci}`} width='13' height='13'/>\r\n            <FormControl variant=\"outlined\"  fullWidth>\r\n        <InputLabel id=\"categoryid\">Category ID</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"categoryid\"\r\n          value={getcategoryid}\r\n          onChange = {(event)=>categoryid(event)}\r\n          label=\"Category ID\"\r\n        >\r\n          \r\n        {categoryItems()}\r\n          \r\n        </Select>\r\n      </FormControl>\r\n     \r\n     \r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <img src={`${geterrpic.bn}`} width='13' height='13'/>\r\n          <TextField value={getbrandname} id=\"outlined-basic\" label=\"Brand Name\" variant=\"outlined\" fullWidth  onChange={(event)=>brandname(event)}/>          \r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <img src={`${geterrpic.de}`} width='13' height='13'/>\r\n          <TextField  value={getdescription} id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" fullWidth onChange={(event)=>description(event)} />         \r\n          </Grid>\r\n        <Grid item xs>\r\n        <img src={`${geterrpic.as}`} width='13' height='13'/>\r\n        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Ad Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getadstatus}\r\n          onChange={(event)=>setadstatus(event.target.value)}\r\n          label=\"Ad Status\"\r\n        >\r\n\r\n\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n        <img src={`${geterrpic.tb}`} width='13' height='13'/>\r\n        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Top Brands</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={gettopbrand}\r\n          onChange={(event)=>settopbrand(event.target.value)}\r\n          label=\"Top Brands\"\r\n        >\r\n         \r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n        <img src={`${geterrpic.nb}`} width='13' height='13'/>\r\n        <FormControl variant=\"outlined\" className={classes.formControl} fullWidth> \r\n        <InputLabel id=\"demo-simple-select-outlined-label\" >New Brands</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getnewbrand}\r\n          onChange={(event)=>setnewbrand(event.target.value)}\r\n          label=\"New Brands\"\r\n        >\r\n\r\n          <MenuItem value={'No'}>No</MenuItem>\r\n          <MenuItem value={'Yes'}>Yes</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        </Grid>\r\n\r\n        <Grid xs={12} style={{marginTop:-20}}>\r\n        <Button variant=\"contained\" color=\"primary\" style={{ marginTop:20, width:370,marginLeft:98,color:'white',background:'purple'}}\r\n         onClick={()=>handleEdit()}>EDIT</Button>    \r\n        </Grid>\r\n      \r\n        <Grid item xs={3} style={{marginTop:'26px',}}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"pi\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(event)=>picture(event)}\r\n            />\r\n            <div style={{display:'flex',flexDirection:'column'}}>\r\n            <div style={{padding:'3px',}}>\r\n           <label htmlFor=\"pi\">\r\n           <img src={`${geterrpic.pi}`} width='13' height='13'/>\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n            Picture\r\n            </Button>\r\n           </label>\r\n            </div>\r\n            <div style={{padding:'3px',marginLeft:'20px',width:'20%'}}>\r\n           {getsavepicture?<Button onClick={handlesavepicture} variant=\"contained\" color=\"primary\" autoFocus>\r\n            Save\r\n          </Button>:<div></div>}\r\n            </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <img src={getpicture.fileUrl} width='90px' height='90px'/>\r\n          </Grid>\r\n          <Grid item xs={3}  style={{marginTop:'26px',}}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"ad\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(event)=>ad(event)}\r\n            />\r\n            <div style={{display:'flex',flexDirection:'column'}}>\r\n            <div style={{padding:'3px',}}>\r\n           <label htmlFor=\"ad\">\r\n           <img src={geterrpic.ad} width='13' height='13'/>\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n            Ad\r\n            </Button>\r\n            <div style={{padding:'3px',marginLeft:'20%'}}></div>\r\n            <div style={{marginLeft:'10px',width:'30%'}}>\r\n            {getsavead?<Button  onClick={handlesavead} variant=\"contained\" color=\"primary\" autoFocus>\r\n            Save\r\n          </Button>:<div></div>}\r\n           </div>\r\n           </label>\r\n           </div>\r\n           </div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n          <img src={getad.fileUrl} width='90px' height='90px'/>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n         <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      )\r\n     }\r\n   \r\n   \r\n     function Editable() {\r\n\r\n      useEffect(function(){\r\n        fetchCategory()\r\n        fetchData()\r\n       },[])\r\n         return (<div classes={classes.maindiv}>\r\n           <div className={classes.subdiv}>\r\n          <MaterialTable\r\n            title=\"Brand\"\r\n            columns={columns}\r\n            data={data}\r\n\r\n            actions={[\r\n              {\r\n                icon: 'edit',\r\n                tooltip: 'edit',\r\n                onClick: (event, rowData) => {\r\n                handelEdit(rowData)\r\n                }\r\n              }\r\n            ]}\r\n            editable={{\r\n              onRowAdd: newData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    setData([...data, newData]);\r\n                    \r\n                    resolve();\r\n                  }, 1000)\r\n                }),\r\n      \r\n              onRowDelete: oldData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataDelete = [...data];\r\n                    const index = oldData.tableData.id;\r\n                    dataDelete.splice(index, 1);\r\n                    setData([...dataDelete]);\r\n                    handleDelete(oldData)\r\n                    resolve()\r\n                  }, 1000)\r\n                }),\r\n            }}\r\n          />\r\n          </div>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n\r\n\r\n\r\n\r\n    return (<div>\r\n        {Editable()}\r\n        {EditContent()}\r\n        </div>)\r\n}","D:\\ecom\\src\\components\\product\\ProductInterface.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {postData,ServerURL,getData,postDataAndImage} from '../FetchNodeServices';\r\nimport {isEmpty} from '../Checks'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:'flex',\r\n    alignContent:'center',\r\n    justifyContent:'center',\r\n  },\r\n maindiv:{\r\n   display:'flex',\r\n   flexDirection:'column',\r\n   alignContent:'center',\r\n   justifyContent:'center',\r\n   padding:20,\r\n   marginTop:30,\r\n   width:600,\r\n   backgroundColor:'#dfe4ea',\r\n   border:'2px solid #7f8c8d',\r\n   borderRadius:'2%',\r\n },\r\n headingdiv:{\r\n  display:'flex',\r\n  width:'auto',\r\n  padding:3,\r\n  border:'1 solid #000000',\r\n\r\n },\r\n input: {\r\n  display: 'none',\r\n},\r\nlarge: {\r\n  width: 70,\r\n  height: 70,\r\n  margin:5,\r\n},\r\n}));\r\n\r\nexport default function ProductInterface(props)\r\n{\r\n    const classes = useStyles();\r\n    const[getCategory,setCategory]=useState([]);\r\n    const[getBrand,setBrand]=useState([]);\r\n    const[getModel,setModel]=useState([]);\r\n    const[getCategoryId,setCategoryId]=useState('');\r\n    const[getBrandId,setBrandId]=useState('');\r\n    const[getModelId,setModelId]=useState('');\r\n    const[getProductName,setProductName]=useState('');\r\n    const[getProductDescription,setProductDescription]=useState('');\r\n    const[getProductPrice,setProductPrice]=useState('');\r\n    const[getProductPicture,setProductPicture]=useState({fileBytes:'',fileUrl:'/nm.jpg'});\r\n    const[getOfferPrice,setOfferPrice]=useState('');\r\n    const[getDelivery,setDelivery]=useState('');\r\n    const[getRatings,setRatings]=useState('');\r\n    const[getColor,setColor]=useState('');\r\n    const[getProductAd,setProductAd]=useState({fileBytes:'',fileUrl:'/nm.jpg'});\r\n    const[getAdStatus,setAdStatus]=useState('');\r\n    const[getOfferType,setOfferType]=useState('');\r\n    const[getStock,setStock]=useState('');\r\n    const[getMessage,setMessage]=useState();\r\n    const[getErrorPic,setErrorPic]=useState({ci:'tp.png',bi:'tp.png',mi:'tp.png',pn:'tp.png',pd:'tp.png',pp:'tp.png',pic:'tp.png',op:'tp.png',del:'tp.png',pr:'tp.png',pc:'tp.png',pa:'tp.png',pas:'tp.png',ot:'tp.png',ps:'tp.png'})\r\n   \r\n    \r\n    const handleCategory=(event)=>{\r\n      setCategoryId(event.target.value);\r\n      fetchBrand(event.target.value);\r\n     \r\n     }\r\n    \r\n     const handleBrand=(event)=>{\r\n      setBrandId(event.target.value);\r\n      fetchModel(event.target.value);\r\n     \r\n     }\r\n\r\n    const fetchCategory=async()=>{\r\n      var result=await getData('category/fetchallcategory')\r\n      setCategory(result)\r\n     }\r\n\r\n     const fetchBrand=async(data)=>{\r\n      var body={categoryid:data}\r\n      var result=await postData('brand/fetchbrands',body)\r\n           setBrand(result)\r\n           \r\n     }\r\n     \r\n     const fetchModel=async(brandid)=>{\r\n      var body={brandid:brandid}\r\n      var result=await postData('model/fetchmodels',body)\r\n           setModel(result)\r\n           \r\n     }\r\n\r\n     useEffect(function(){\r\n      fetchCategory()\r\n      fetchBrand()\r\n      fetchModel()\r\n       },[])\r\n       \r\n    \r\n       const categoryItems=()=>{\r\n        return(\r\n         \r\n                getCategory? getCategory.map((item,index)=>{\r\n                     return(\r\n                          <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                    )\r\n                 }):null\r\n            \r\n        )\r\n        }\r\n\r\n        const brandItems=()=>{\r\n          return(\r\n           \r\n                   getBrand.map((item,index)=>{\r\n                       return(\r\n                            <MenuItem value={item.brandid}>{item.brandname}</MenuItem>\r\n                      )\r\n                   })\r\n              \r\n          )\r\n          }\r\n\r\n          const modelItems=()=>{\r\n            return(\r\n             \r\n                     getModel.map((item,index)=>{\r\n                         return(\r\n                              <MenuItem value={item.modelid}>{item.modelname}</MenuItem>\r\n                        )\r\n                     })\r\n                \r\n            )\r\n            }\r\n  \r\n          const handlePicture=(event)=>{\r\n            setProductPicture({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n        \r\n            }\r\n            const handleAd=(event)=>{\r\n              setProductAd({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n          \r\n              }\r\n\r\n      const handleSubmit=async()=>{\r\n\r\n        var error=false\r\n        var ci=isEmpty(getCategoryId)\r\n        var bi=isEmpty(getBrandId)\r\n        var mi=isEmpty(getModelId)\r\n        var pn=isEmpty(getProductName)\r\n        var pd=isEmpty(getProductDescription)\r\n        var pp=isEmpty(getProductPrice)\r\n        var pic=isEmpty(getProductPicture.fileBytes)\r\n        var op=isEmpty(getOfferPrice)\r\n        var del=isEmpty(getDelivery)\r\n        var pr=isEmpty(getRatings)\r\n        var pc=isEmpty(getColor)\r\n        var pa=isEmpty(getProductAd.fileBytes)\r\n        var pas=isEmpty(getAdStatus)\r\n        var ot=isEmpty(getOfferType)\r\n        var ps=isEmpty(getStock)\r\n       \r\n        if(ci.err)\r\n        {\r\n           error=ci.err\r\n          \r\n        }\r\n        if(bi.err)\r\n        {\r\n           error=bi.err\r\n          \r\n        }\r\n        if(mi.err)\r\n        {\r\n           error=mi.err\r\n          \r\n        }\r\n        if(pn.err)\r\n        {\r\n           error=pn.err\r\n           \r\n        }\r\n        if(pd.err)\r\n        {\r\n           error=pd.err\r\n          \r\n        }\r\n        if(pp.err)\r\n        {\r\n           error=pp.err\r\n          \r\n        }\r\n        if(pic.err)\r\n        {\r\n           error=pic.err\r\n          \r\n        }\r\n        if(op.err)\r\n        {\r\n           error=op.err\r\n          \r\n        }\r\n        if(del.err)\r\n        {\r\n           error=del.err\r\n          \r\n        }\r\n        if(pr.err)\r\n        {\r\n           error=pr.err\r\n          \r\n        }\r\n        if(pc.err)\r\n        {\r\n           error=pc.err\r\n          \r\n        }\r\n       if(pa.err)\r\n        {\r\n           error=pa.err\r\n          \r\n        }\r\n        if(pas.err)\r\n        {\r\n           error=pas.err\r\n          \r\n        }\r\n        if(ot.err)\r\n        {\r\n           error=ot.err\r\n          \r\n        }\r\n        if(ps.err)\r\n        {\r\n           error=ps.err\r\n          \r\n        }\r\n      \r\n       setErrorPic({ci:ci.img,bi:bi.img,mi:mi.img,pn:pn.img,pd:pd.img,pp:pp.img,pic:pic.img,op:op.img,del:del.img,pr:pr.img,pc:pc.img,pa:pa.img,pas:pas.img,ot:ot.img,ps:ps.img})\r\n       \r\n        if(!error)\r\n        {\r\n             \r\n       \r\n        var formData=new FormData()\r\n        formData.append('categoryid',getCategoryId)\r\n        formData.append('brandid',getBrandId)\r\n        formData.append('modelid',getModelId)\r\n        formData.append('productname',getProductName)\r\n        formData.append('description',getProductDescription)\r\n        formData.append('price',getProductPrice)\r\n        formData.append('picture',getProductPicture.fileBytes)\r\n        formData.append('offerprice',getOfferPrice)\r\n        formData.append('delivery',getDelivery)\r\n        formData.append('ratings',getRatings)\r\n        formData.append('color',getColor)\r\n        formData.append('ad',getProductAd.fileBytes)\r\n        formData.append('adstatus',getAdStatus)\r\n        formData.append('offertype',getOfferType)\r\n        formData.append('stock',getStock)\r\n\r\n        const config={headers:{'content-type':'multipart/form-data'}}\r\n        var result= await postDataAndImage('product/productSubmit',formData,config)\r\n                \r\n        if(result){\r\n          setMessage(\"Record Submitted...\")\r\n        }\r\n        else{\r\n          setMessage(\"Record not submitted...\")\r\n        }\r\n      }\r\n      else{\r\n        alert(\"Please fill the blank entry..\")\r\n      }\r\n      }  \r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n          <div className={classes.maindiv}>\r\n             <div className={classes.headingdiv}>\r\n             <h3>Product Interface</h3>\r\n            </div>\r\n           <Grid container spacing={2}>\r\n           <Grid item xs={12} sm={4}>\r\n                   <img src={`/${getErrorPic.ci}`} />\r\n                   <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Category Id</InputLabel>\r\n                 <Select value={getCategoryId}  onChange={(event)=>handleCategory(event)}  \r\n                 label=\"Category Id\" >\r\n                           {categoryItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.bi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Brand Id</InputLabel>\r\n                 <Select value={getBrandId}  onChange={(event)=>handleBrand(event)}  \r\n                 label=\"Brand Id\" >\r\n                           {brandItems()}\r\n                  </Select>\r\n                </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.mi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Model Id</InputLabel>\r\n                 <Select value={getModelId}  onChange={(event)=>setModelId(event.target.value)}  \r\n                 label=\"Model Id\" >\r\n                            {modelItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pn}`} />\r\n                  <TextField  label=\"Product Name\" variant=\"outlined\" fullWidth onChange={(event)=>setProductName(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pd}`} />\r\n                  <TextField  label=\"Product Description\" variant=\"outlined\" fullWidth onChange={(event)=>setProductDescription(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pp}`} />\r\n                  <TextField  label=\"Product Price\" variant=\"outlined\" fullWidth onChange={(event)=>setProductPrice(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <img src={`/${getErrorPic.pic}`} />\r\n                  <input accept=\"image/*\" className={classes.input} multiple id=\"picture\" type=\"file\"  onChange={(event)=>handlePicture(event)} />\r\n                   <label htmlFor=\"picture\">\r\n                   <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload Picture\r\n                    </Button>\r\n                    </label>\r\n                </Grid>\r\n            \r\n                <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                  <img src={getProductPicture.fileUrl}  className={classes.large} />\r\n                  </Grid>\r\n                \r\n                  <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.op}`} />\r\n                  <TextField  label=\"Offer Price\" variant=\"outlined\" fullWidth onChange={(event)=>setOfferPrice(event.target.value)} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.del}`} />\r\n                  <TextField  label=\"Delivery\" variant=\"outlined\" fullWidth onChange={(event)=>setDelivery(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.pr}`} />\r\n                  <TextField  label=\"Product Ratings\" variant=\"outlined\" fullWidth onChange={(event)=>setRatings(event.target.value)} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pc}`} />\r\n                  <TextField  label=\"Product Color\" variant=\"outlined\" fullWidth onChange={(event)=>setColor(event.target.value)} />\r\n                </Grid>   \r\n                <Grid item xs={12} sm={6}>\r\n                 <img src={`/${getErrorPic.pa}`} />\r\n                  <input accept=\"image/*\" className={classes.input} multiple id=\"ad\" type=\"file\" onChange={(event)=>handleAd(event)} />\r\n                  <label htmlFor=\"ad\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload Ad\r\n                    </Button>\r\n                  </label>\r\n                 </Grid>\r\n            \r\n               <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                <img src={getProductAd.fileUrl} className={classes.large} />\r\n                  </Grid> \r\n\r\n                   <Grid item xs={12} sm={4}>\r\n            <img src={`/${getErrorPic.pas}`} />\r\n              <FormControl variant=\"outlined\" fullWidth >\r\n               <InputLabel>Ad Status</InputLabel>\r\n                 <Select value={getAdStatus}  onChange={(event)=>setAdStatus(event.target.value)}  \r\n                 label=\"Ad Status\" >\r\n         \r\n                  <MenuItem value={'No'}>No</MenuItem>\r\n                  <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         \r\n                  </Select>\r\n            </FormControl>\r\n           </Grid>   \r\n           \r\n           <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.ot}`} />\r\n                  <TextField  label=\"Offer Type\" variant=\"outlined\" fullWidth onChange={(event)=>setOfferType(event.target.value)} />\r\n                </Grid>\r\n\r\n                \r\n                  <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.ps}`} />\r\n                  <TextField  label=\"Product Stock\" variant=\"outlined\" fullWidth onChange={(event)=>setStock(event.target.value)} />\r\n                </Grid>           \r\n\r\n           \r\n           <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()} >\r\n               Submit\r\n                   </Button>\r\n                  </Grid>\r\n\r\n                  <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                   Reset\r\n                   </Button>\r\n                  </Grid>\r\n\r\n\r\n           </Grid>\r\n           <div style={{ width:600,padding:10,display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n         <b>{getMessage}</b>\r\n         </div>\r\n          </div>\r\n      \r\n        </div>\r\n    );\r\n}","D:\\ecom\\src\\components\\product\\DisplayProduct.js",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React,{useEffect, useState} from 'react';\r\nimport {ServerURL,getData, postData,postDataAndImage} from '../FetchNodeServices';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {isEmpty} from '../Checks'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display:'flex',\r\n      alignContent:'center',\r\n      justifyContent:'center',\r\n    },\r\n   subdiv:{\r\n     display:'flex',\r\n     alignContent:'center',\r\n     justifyContent:'center',\r\n     padding:20,\r\n     marginTop:30,\r\n     width:800,\r\n     \r\n    \r\n   },\r\n\r\n   input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: 70,\r\n    height: 70,\r\n    margin:5,\r\n  },\r\n  \r\n  }));\r\n\r\nexport default function ProductDisplay(props)\r\n{\r\n    const [data, setData] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const[getCategory,setCategory]=useState([]);\r\n    const[getBrand,setBrand]=useState([]);\r\n    const[getModel,setModel]=useState([]);\r\n    const[getProductId,setProductId]=useState('');\r\n    const[getCategoryId,setCategoryId]=useState('');\r\n    const[getBrandId,setBrandId]=useState('');\r\n    const[getModelId,setModelId]=useState('');\r\n    const[getProductName,setProductName]=useState('');\r\n    const[getProductDescription,setProductDescription]=useState('');\r\n    const[getProductPrice,setProductPrice]=useState('');\r\n    const[getProductPicture,setProductPicture]=useState({fileBytes:'',fileUrl:'/nm.jpg'});\r\n    const[getOfferPrice,setOfferPrice]=useState('');\r\n    const[getDelivery,setDelivery]=useState('');\r\n    const[getRatings,setRatings]=useState('');\r\n    const[getColor,setColor]=useState('');\r\n    const[getProductAd,setProductAd]=useState({fileBytes:'',fileUrl:'/nm.jpg'});\r\n    const[getAdStatus,setAdStatus]=useState('');\r\n    const[getOfferType,setOfferType]=useState('');\r\n    const[getStock,setStock]=useState('');\r\n    const[getBtnSavePicture,setBtnSavePicture]=useState(false);\r\n    const[getBtnSaveAd,setBtnSaveAd]=useState(false);\r\n    const[getErrorPic,setErrorPic]=useState({ci:'',bi:'',mi:'',pn:'',pd:'',pp:'',pic:'',op:'',del:'',pr:'',pc:'',pa:'',pas:'',ot:'',ps:''})\r\n    \r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = useStyles();\r\n\r\n    const [columns, setColumns] = useState([\r\n        // { title: 'Product Id', field: 'productid' },\r\n        // { title: 'Category Id', field: 'categoryid' },\r\n        // { title: 'Brand Id', field: 'brandid' },\r\n        // { title: 'Model Id', field: 'modelid' },\r\n        { title: 'Product Name', field: 'productname' },\r\n        { title: 'Description', field: 'description' },\r\n        { title: 'Price', field: 'price' },\r\n        { title: 'Picture', field: 'picture', render: rowData => <img src={`${ServerURL}/images/${rowData.picture}`} style={{width: 50, height:50, borderRadius: '5%'}}/> },\r\n        { title: 'Offer Price', field: 'offerprice' },\r\n        { title: 'Delivery/Ratings', render:rowData=><div><div>{rowData.delivery}</div> <div>{rowData.ratings}</div></div> },\r\n      \r\n      //  { title: 'Color', field: 'color' },\r\n        { title: 'Ad', field: 'ad',render: rowData => <img src={`${ServerURL}/images/${rowData.ad}`} style={{width: 50, height:50, borderRadius: '5%'}}/> },\r\n        { title: 'AdStatus', field: 'adstatus' },\r\n        { title: 'Offer Type', field: 'offertype' },\r\n      //  { title: 'Stock', field: 'stock' },\r\n      ]);\r\n\r\n   \r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    const fetchData=async()=>{\r\n        var result=await getData('product/displayAllProduct')\r\n        setData(result)\r\n    }\r\n\r\n    const handleCategory=(event)=>{\r\n        setCategoryId(event.target.value);\r\n        fetchBrand(event.target.value);\r\n       \r\n       }\r\n      \r\n       const handleBrand=(event)=>{\r\n        setBrandId(event.target.value);\r\n        fetchModel(event.target.value);\r\n       \r\n       }\r\n  \r\n      const fetchCategory=async()=>{\r\n        var result=await getData('category/fetchallcategory')\r\n        setCategory(result)\r\n       }\r\n  \r\n       const fetchBrand=async(data)=>{\r\n        var body={categoryid:data}\r\n        var result=await postData('brand/fetchbrands',body)\r\n             setBrand(result)\r\n             \r\n       }\r\n       \r\n       const fetchModel=async(brandid)=>{\r\n        var body={brandid:brandid}\r\n        var result=await postData('model/fetchmodels',body)\r\n             setModel(result)\r\n             \r\n       }\r\n\r\n     \r\n  \r\n       useEffect(function(){\r\n        fetchData()\r\n        fetchCategory()\r\n       // fetchBrand()\r\n       // fetchModel()\r\n         },[])\r\n         \r\n      \r\n         const categoryItems=()=>{\r\n          return(\r\n           \r\n                  getCategory? getCategory.map((item,index)=>{\r\n                       return(\r\n                            <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                      )\r\n                   }):null\r\n              \r\n          )\r\n          }\r\n  \r\n          const brandItems=()=>{\r\n            return(\r\n             \r\n                     getBrand.map((item,index)=>{\r\n                         return(\r\n                              <MenuItem value={item.brandid}>{item.brandname}</MenuItem>\r\n                        )\r\n                     })\r\n                \r\n            )\r\n            }\r\n  \r\n            const modelItems=()=>{\r\n              return(\r\n               \r\n                       getModel.map((item,index)=>{\r\n                           return(\r\n                                <MenuItem value={item.modelid}>{item.modelname}</MenuItem>\r\n                          )\r\n                       })\r\n                  \r\n              )\r\n              }\r\n\r\n    const handlePicture=(event)=>{\r\n        setProductPicture({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n        setBtnSavePicture(true)\r\n      }\r\n      const handleAd=(event)=>{\r\n        setProductAd({fileBytes:event.target.files[0],fileUrl:URL.createObjectURL(event.target.files[0])})\r\n        setBtnSaveAd(true)\r\n        }\r\n\r\n        const handleSavePicture=async()=>{\r\n          var formData=new FormData()\r\n       \r\n        formData.append('picture',getProductPicture.fileBytes)\r\n        formData.append('productid',getProductId)\r\n      \r\n\r\n        const config={headers:{'content-type':'multipart/form-data'}}\r\n        var result= await postDataAndImage('product/updatePicture',formData,config)\r\n        fetchData()\r\n        setOpen(false)\r\n        }\r\n\r\n        const handleSaveAd=async()=>{\r\n          var formData=new FormData()\r\n       \r\n        formData.append('ad',getProductAd.fileBytes)\r\n        formData.append('productid',getProductId)\r\n      \r\n\r\n        const config={headers:{'content-type':'multipart/form-data'}}\r\n        var result= await postDataAndImage('product/editad',formData,config)\r\n        fetchData()\r\n        setOpen(false)\r\n\r\n        }\r\n\r\n        const handleSubmit=async()=>{\r\n            var error=false\r\n        var ci=isEmpty(getCategoryId)\r\n        var bi=isEmpty(getBrandId)\r\n        var mi=isEmpty(getModelId)\r\n        var pn=isEmpty(getProductName)\r\n        var pd=isEmpty(getProductDescription)\r\n        var pp=isEmpty(getProductPrice)\r\n        var pic=isEmpty(getProductPicture.fileBytes)\r\n        var op=isEmpty(getOfferPrice)\r\n        var del=isEmpty(getDelivery)\r\n        var pr=isEmpty(getRatings)\r\n        var pc=isEmpty(getColor)\r\n        var pa=isEmpty(getProductAd.fileBytes)\r\n        var pas=isEmpty(getAdStatus)\r\n        var ot=isEmpty(getOfferType)\r\n        var ps=isEmpty(getStock)\r\n       \r\n        if(ci.err)\r\n        {\r\n           error=ci.err\r\n          \r\n        }\r\n        if(bi.err)\r\n        {\r\n           error=bi.err\r\n          \r\n        }\r\n        if(mi.err)\r\n        {\r\n           error=mi.err\r\n          \r\n        }\r\n        if(pn.err)\r\n        {\r\n           error=pn.err\r\n           \r\n        }\r\n        if(pd.err)\r\n        {\r\n           error=pd.err\r\n          \r\n        }\r\n        if(pp.err)\r\n        {\r\n           error=pp.err\r\n          \r\n        }\r\n        if(pic.err)\r\n        {\r\n           error=pic.err\r\n          \r\n        }\r\n        if(op.err)\r\n        {\r\n           error=op.err\r\n          \r\n        }\r\n        if(del.err)\r\n        {\r\n           error=del.err\r\n          \r\n        }\r\n        if(pr.err)\r\n        {\r\n           error=pr.err\r\n          \r\n        }\r\n        if(pc.err)\r\n        {\r\n           error=pc.err\r\n          \r\n        }\r\n       if(pa.err)\r\n        {\r\n           error=pa.err\r\n          \r\n        }\r\n        if(pas.err)\r\n        {\r\n           error=pas.err\r\n          \r\n        }\r\n        if(ot.err)\r\n        {\r\n           error=ot.err\r\n          \r\n        }\r\n        if(ps.err)\r\n        {\r\n           error=ps.err\r\n          \r\n        }\r\n      \r\n       setErrorPic({ci:ci.img,bi:bi.img,mi:mi.img,pn:pn.img,pd:pd.img,pp:pp.img,pic:'',op:op.img,del:del.img,pr:pr.img,pc:pc.img,pa:'',pas:pas.img,ot:ot.img,ps:ps.img})\r\n       \r\n             \r\n  \r\n        if(!error)\r\n        {\r\n          \r\n                var body={categoryid:getCategoryId,brandid:getBrandId,modelid:getModelId,productname:getProductName,description:getProductDescription,price:getProductPrice,offerprice:getOfferPrice,delivery:getDelivery,ratings:getRatings,color:getColor,adstatus:getAdStatus,offertype:getOfferType,stock:getStock}\r\n                 var result=await postData('product/updateProduct',body)\r\n                \r\n                 fetchData()\r\n                 setOpen(false)\r\n      }\r\n     else{alert(result)}\r\n      }  \r\n\r\n    const showEditContent=()=>{\r\n      return(\r\n        <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Edit Product\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n                   <img src={`/${getErrorPic.ci}`} />\r\n                   <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Category Id</InputLabel>\r\n                 <Select value={getCategoryId}  onChange={(event)=>handleCategory(event)}  \r\n                 label=\"Category Id\" >\r\n                           {categoryItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.bi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Brand Id</InputLabel>\r\n                 <Select value={getBrandId}  onChange={(event)=>handleBrand(event)}  \r\n                 label=\"Brand Id\" >\r\n                           {brandItems()}\r\n                  </Select>\r\n                </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.mi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Model Id</InputLabel>\r\n                 <Select value={getModelId}  onChange={(event)=>setModelId(event.target.value)}  \r\n                 label=\"Model Id\" >\r\n                            {modelItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pn}`} />\r\n                  <TextField value={getProductName}  label=\"Product Name\" variant=\"outlined\" fullWidth onChange={(event)=>setProductName(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pd}`} />\r\n                  <TextField value={getProductDescription}  label=\"Product Description\" variant=\"outlined\" fullWidth onChange={(event)=>setProductDescription(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}  sm={4}>\r\n                <img src={`/${getErrorPic.pp}`} />\r\n                  <TextField value={getProductPrice}  label=\"Product Price\" variant=\"outlined\" fullWidth onChange={(event)=>setProductPrice(event.target.value)} />\r\n                </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.op}`} />\r\n                  <TextField value={getOfferPrice}  label=\"Offer Price\" variant=\"outlined\" fullWidth onChange={(event)=>setOfferPrice(event.target.value)} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.del}`} />\r\n                  <TextField value={getDelivery}  label=\"Delivery\" variant=\"outlined\" fullWidth onChange={(event)=>setDelivery(event.target.value)} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.pr}`} />\r\n                  <TextField value={getRatings}  label=\"Product Ratings\" variant=\"outlined\" fullWidth onChange={(event)=>setRatings(event.target.value)} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={4}>\r\n                <img src={`/${getErrorPic.pc}`} />\r\n                  <TextField value={getColor}   label=\"Product Color\" variant=\"outlined\" fullWidth onChange={(event)=>setColor(event.target.value)} />\r\n                </Grid>   \r\n\r\n               <Grid item xs={12} sm={4}>\r\n                <img src={`/${getErrorPic.pas}`} />\r\n              <FormControl variant=\"outlined\" fullWidth >\r\n               <InputLabel>Ad Status</InputLabel>\r\n                 <Select value={getAdStatus}  onChange={(event)=>setAdStatus(event.target.value)}  \r\n                 label=\"Ad Status\" >\r\n         \r\n                  <MenuItem value={'No'}>No</MenuItem>\r\n                  <MenuItem value={'Yes'}>Yes</MenuItem>\r\n         \r\n                  </Select>\r\n            </FormControl>\r\n           </Grid>   \r\n           \r\n           <Grid item xs={12} sm={6}>\r\n                <img src={`/${getErrorPic.ot}`} />\r\n                  <TextField  value={getOfferType} label=\"Offer Type\" variant=\"outlined\" fullWidth onChange={(event)=>setOfferType(event.target.value)} />\r\n                </Grid>\r\n\r\n                \r\n                  <Grid item xs={12} sm={6}>\r\n                <img src={`/${getErrorPic.ps}`} />\r\n                  <TextField value={getStock}  label=\"Product Stock\" variant=\"outlined\" fullWidth onChange={(event)=>setStock(event.target.value)} />\r\n                </Grid>           \r\n\r\n\r\n\r\n           <Grid style={{ display:'flex'}} item xs={12}>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()} >\r\n              Edit Data\r\n                   </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider/>\r\n                    </Grid>\r\n             \r\n                  <Grid item xs={12} sm={6}>\r\n                  <img src={`/${getErrorPic.pic}`} />\r\n                  <input accept=\"image/*\" className={classes.input} multiple id=\"picture\" type=\"file\"  onChange={(event)=>handlePicture(event)} />\r\n                  <div style={{display:'flex',flexDirection:'row'}}>\r\n                    <div style={{padding:3}}>\r\n                    <label htmlFor=\"picture\">\r\n                   <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Change Picture\r\n                    </Button>\r\n                    </label>\r\n                    </div>\r\n                    <div style={{padding:3}}>\r\n                    {getBtnSavePicture?<Button onClick={handleSavePicture} color=\"primary\" variant=\"contained\" autoFocus>\r\n                        Save Picture </Button>:<div></div>}\r\n                    </div>\r\n                    </div>\r\n                </Grid>\r\n            \r\n                <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                  <img src={getProductPicture.fileUrl}  className={classes.large} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider/>\r\n                    </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                  <img src={`/${getErrorPic.pa}`} />\r\n                  <input accept=\"image/*\" className={classes.input} multiple id=\"ad\" type=\"file\" onChange={(event)=>handleAd(event)} />\r\n                  <div style={{display:'flex',flexDirection:'row'}}>\r\n                    <div style={{padding:3}}>\r\n                  <label htmlFor=\"ad\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Change Ad\r\n                    </Button>\r\n                  </label>\r\n                  </div>\r\n               \r\n                 <div style={{padding:3}}>\r\n                 {getBtnSaveAd?<Button onClick={handleSaveAd} color=\"primary\" variant=\"contained\" autoFocus>\r\n                        Save Ad </Button>:<div></div>}\r\n                    </div>\r\n                 </div>\r\n                 </Grid>\r\n\r\n               <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                <img src={getProductAd.fileUrl} className={classes.large} />\r\n                  </Grid>\r\n\r\n\r\n           </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      )\r\n    }\r\n\r\n    const handleEdit=async(rowData)=>{\r\n      \r\n\r\n      setProductId(rowData.productid)\r\n      setCategoryId(rowData.categoryid)\r\n      fetchBrand(rowData.categoryid)\r\n\r\n      setBrandId(rowData.brandid)\r\n      fetchModel(rowData.brandid)\r\n      setModelId(rowData.modelid)\r\n      setProductName(rowData.productname)\r\n      setProductDescription(rowData.description)\r\n      setProductPrice(rowData.price)\r\n      setOfferPrice(rowData.offerprice)\r\n      setDelivery(rowData.delivery)\r\n      setRatings(rowData.ratings)\r\n      setColor(rowData.color)\r\n      setAdStatus(rowData.adstatus)\r\n      setOfferType(rowData.offertype)\r\n      setStock(rowData.stock)\r\n      setProductPicture({fileBytes:'',fileUrl:`${ServerURL}/images/${rowData.picture}`})\r\n      setProductAd({fileBytes:'',fileUrl:`${ServerURL}/images/${rowData.ad}`})\r\n      setBtnSavePicture(false)\r\n      setBtnSaveAd(false)\r\n      setOpen(true)\r\n      \r\n      setErrorPic({ci:'tic.png',bi:'tic.png',mi:'tic.png',pn:'tic.png',pd:'tic.png',pp:'tic.png',pic:'tic.png',op:'tic.png',del:'tic.png',pr:'tic.png',pc:'tic.png',pa:'tic.png',pas:'tic.png',ot:'tic.png',ps:'tic.png'})\r\n    }\r\n\r\n    const handleDelete=async(oldData)=>{\r\n     \r\n      var body={productid:oldData.productid}\r\n      var result=await postData('product/deleteProduct',body)\r\n     \r\n    }\r\n\r\n    function Editable() {\r\n        \r\n\r\n        return (\r\n          <MaterialTable\r\n            title=\"Product Register\"\r\n            columns={columns}\r\n            data={data}\r\n           \r\n            actions={[\r\n              {\r\n                icon:'edit',\r\n                tooltip:'Edit',\r\n                onClick:(event,rowData)=>{\r\n                  handleEdit(rowData)\r\n                }\r\n              }\r\n\r\n            ]}\r\n\r\n            editable={{\r\n              onRowAdd: newData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    setData([...data, newData]);\r\n                    \r\n                    resolve();\r\n                  }, 1000)\r\n                }),\r\n            \r\n\r\n              onRowDelete: oldData =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataDelete = [...data];\r\n                    const index = oldData.tableData.id;\r\n                    dataDelete.splice(index, 1);\r\n                    setData([...dataDelete]);\r\n                    handleDelete(oldData);\r\n                    resolve()\r\n                  }, 1000)\r\n                }),\r\n            }}\r\n            options={{\r\n                rowStyle: {\r\n                  backgroundColor: '#EEE',\r\n                }\r\n              }}\r\n          />\r\n        )\r\n      }\r\n\r\nreturn(\r\n<div className={classes.root}>\r\n<div className={classes.subdiv}>\r\n{Editable()}\r\n{showEditContent()}\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\n}","D:\\ecom\\src\\components\\admin\\AdminLogin.js",[],"D:\\ecom\\src\\components\\admin\\Dashboard.js",["324","325","326"],"import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport DashboardList from './DashboardList';\r\nimport CategoryInterface from '../category/CategoryInterface'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [getView,setView] = useState(<CategoryInterface/>)\r\n\r\n  const handleView=(value)=>{\r\n  setView(value)\r\n  }\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n       <DashboardList handleView={handleView}/>\r\n        <Divider />\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n        {getView}\r\n\r\n          <Grid container spacing={3}>\r\n       \r\n            <Grid item xs={12} md={4} lg={3}>\r\n             \r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n         \r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","D:\\ecom\\src\\components\\admin\\DashboardList.js",["327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Label from '@material-ui/icons/ShoppingCart';\r\nimport Arrow from '@material-ui/icons/PlayArrowOutlined';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport PropTypes from 'prop-types';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport CategoryInterface from '../category/CategoryInterface'\r\nimport DispalyFormat from '../category/DisplayFormat'\r\nimport BrandInterface from '../brand/BrandInterface'\r\nimport DisplayBrand from '../brand/DisplayBrand'\r\nimport ModelInterface from '../model/ModelInterface'\r\nimport DisplayModel from '../model/DisplayModel'\r\nimport ProductInterface from '../product/ProductInterface'\r\nimport DisplayProduct from '../product/DisplayProduct'\r\nimport ProductPicture from '../productPicture/ProductPicture'\r\n\r\n\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary,\r\n    '&:hover > $content': {\r\n     // backgroundColor: theme.palette.action.hover,\r\n    },\r\n    '&:focus > $content, &$selected > $content': {\r\n   //   backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: 'var(--tree-view-color)',\r\n    },\r\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n     // backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '$expanded > &': {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    '& $content': {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  label: {\r\n    fontWeight: 'inherit',\r\n    color: 'inherit',\r\n  },\r\n  labelRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0.5, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: 'inherit',\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles();\r\n  const { labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ...other } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        '--tree-view-color': color,\r\n        '--tree-view-bg-color': bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelIcon: PropTypes.elementType.isRequired,\r\n  labelInfo: PropTypes.string,\r\n  labelText: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 264,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n});\r\n\r\nexport default function DashboardList(props){\r\nconst classes = useStyles();\r\nconst handleClick=(value)=>{\r\n  props.handleView(value)\r\n}\r\n\r\n  return(\r\n      \r\n    <TreeView\r\n      className={classes.root}\r\n      //defaultExpanded={['3']}\r\n      defaultCollapseIcon={<ArrowDropDownIcon />}\r\n      defaultExpandIcon={<ArrowRightIcon />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n    <StyledTreeItem nodeId=\"100\" labelText=\"Categories\" labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId=\"5\"\r\n          labelText=\"AddCategory\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<CategoryInterface/>)}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        <StyledTreeItem\r\n          nodeId=\"6\"\r\n          labelText=\"DisplayCategory\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<DispalyFormat/>)}\r\n          color=\"#e3742f\"\r\n          bgColor=\"#fcefe3\"\r\n        />\r\n      \r\n      </StyledTreeItem>\r\n     \r\n      <StyledTreeItem nodeId=\"200\" labelText=\"Brand\" labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId=\"7\"\r\n          labelText=\"Add Brand\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<BrandInterface/>)}\r\n                 \r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        <StyledTreeItem\r\n          nodeId=\"8\"\r\n          labelText=\"DisplayBrand\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<DisplayBrand/>)}\r\n          color=\"#e3742f\"\r\n          bgColor=\"#fcefe3\"\r\n        />\r\n      \r\n      </StyledTreeItem>\r\n\r\n      <StyledTreeItem nodeId=\"300\" labelText=\"Models\" labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId=\"9\"\r\n          labelText=\"AddModel\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<ModelInterface/>)}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        <StyledTreeItem\r\n          nodeId=\"10\"\r\n          labelText=\"DisplayModel\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<DisplayModel/>)}\r\n          color=\"#e3742f\"\r\n          bgColor=\"#fcefe3\"\r\n        />\r\n      \r\n      </StyledTreeItem>\r\n\r\n      <StyledTreeItem nodeId=\"400\" labelText=\"Product\" labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId=\"11\"\r\n          labelText=\"AddProduct\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<ProductInterface/>)}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n        <StyledTreeItem\r\n          nodeId=\"12\"\r\n          labelText=\"DisplayProduct\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<DisplayProduct/>)}\r\n          color=\"#e3742f\"\r\n          bgColor=\"#fcefe3\"\r\n        />\r\n      \r\n      </StyledTreeItem>\r\n\r\n      <StyledTreeItem nodeId=\"500\" labelText=\"Product Picture\" labelIcon={Label}>\r\n        <StyledTreeItem\r\n          nodeId=\"13\"\r\n          labelText=\"AddProductPicture\"\r\n          labelIcon={Arrow}\r\n          onClick={()=>handleClick(<ProductPicture/>)}\r\n          color=\"#1a73e8\"\r\n          bgColor=\"#e8f0fe\"\r\n        />\r\n      \r\n      \r\n      </StyledTreeItem>\r\n\r\n\r\n          </TreeView>\r\n\r\n    // <ListItem button>\r\n    //   <ListItemIcon>\r\n    //     <DashboardIcon />\r\n    //   </ListItemIcon>\r\n    //   <ListItemText primary=\"Dashboard\" />\r\n    // </ListItem>\r\n    // <ListItem button>\r\n    //   <ListItemIcon>\r\n    //     <ShoppingCartIcon />\r\n    //   </ListItemIcon>\r\n    //   <ListItemText primary=\"Orders\" />\r\n    // </ListItem>\r\n    // <ListItem button>\r\n    //   <ListItemIcon>\r\n    //     <PeopleIcon />\r\n    //   </ListItemIcon>\r\n    //   <ListItemText primary=\"Customers\" />\r\n    // </ListItem>\r\n    // <ListItem button>\r\n    //   <ListItemIcon>\r\n    //     <BarChartIcon />\r\n    //   </ListItemIcon>\r\n    //   <ListItemText primary=\"Reports\" />\r\n    // </ListItem>\r\n    // <ListItem button>\r\n    //   <ListItemIcon>\r\n    //     <LayersIcon />\r\n    //   </ListItemIcon>\r\n    //   <ListItemText primary=\"Integrations\" />\r\n    // </ListItem>\r\n\r\n);\r\n}\r\n\r\n","D:\\ecom\\src\\components\\productPicture\\ProductPicture.js",["341","342","343","344","345","346","347","348"],"import React,{useState,useEffect,createRef,useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {postData,ServerURL,getData,postDataAndImage} from '../FetchNodeServices';\r\nimport DropzoneComponent from 'react-dropzone-component';\r\nimport {isEmpty} from '../Checks'\r\nimport { createSecureContext } from 'tls';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:'flex',\r\n    alignContent:'center',\r\n    justifyContent:'center',\r\n  },\r\n maindiv:{\r\n   display:'flex',\r\n   flexDirection:'column',\r\n   alignContent:'center',\r\n   justifyContent:'center',\r\n   padding:20,\r\n   marginTop:30,\r\n   width:600,\r\n   backgroundColor:'#dfe4ea',\r\n   border:'2px solid #7f8c8d',\r\n   borderRadius:'2%',\r\n },\r\n headingdiv:{\r\n  display:'flex',\r\n  width:'auto',\r\n  padding:3,\r\n  border:'1 solid #000000',\r\n\r\n },\r\n input: {\r\n  display: 'none',\r\n},\r\nlarge: {\r\n  width: 70,\r\n  height: 70,\r\n  margin:5,\r\n},\r\n}));\r\n\r\nexport default function ProductInterface(props)\r\n{\r\n    const classes = useStyles();\r\n    const[getCategory,setCategory]=useState([]);\r\n    const[getBrand,setBrand]=useState([]);\r\n    const[getModel,setModel]=useState([]);\r\n    const[getProductList,setProductList]=useState([]);\r\n    const[getCategoryId,setCategoryId]=useState('');\r\n    const[getBrandId,setBrandId]=useState('');\r\n    const[getModelId,setModelId]=useState('');\r\n    const[getProductId,setProductId]=useState('');\r\n   \r\n    const[getProductDescription,setProductDescription]=useState('');\r\n    const[getMessage,setMessage]=useState();\r\n    const[getErrorPic,setErrorPic]=useState({ci:'tp.png',bi:'tp.png',mi:'tp.png',pi:'tp.png',pd:'tp.png'})\r\n   \r\n\r\n    var dref=createRef()\r\n\r\n    var componentConfig = {\r\n        iconFiletypes: ['.jpg', '.png', '.gif'],\r\n        showFiletypeIcon: true,\r\n        postUrl: `${ServerURL}/productpicture/dummy`\r\n    };\r\n\r\n    var djsConfig = {\r\n        addRemoveLinks: true,\r\n        acceptedFiles:\"image/jpg,image/png,image/gif\",\r\n        autoProcessQueue:false,\r\n        uploadMultiple:true,\r\n        // params: {\r\n        //     myParameter: \"I'm a parameter!\"\r\n        // }\r\n    };\r\n\r\n    const handleCategory=(event)=>{\r\n      setCategoryId(event.target.value);\r\n      fetchBrand(event.target.value);\r\n     \r\n     }\r\n    \r\n     const handleBrand=(event)=>{\r\n      setBrandId(event.target.value);\r\n      fetchModel(event.target.value);\r\n     \r\n     }\r\n\r\n     const handleModel=(event)=>{\r\n      setModelId(event.target.value);\r\n      fetchProduct(event.target.value);\r\n     \r\n     }\r\n\r\n\r\n    const fetchCategory=async()=>{\r\n      var result=await getData('category/fetchallcategory')\r\n      setCategory(result)\r\n     }\r\n\r\n     const fetchBrand=async(data)=>{\r\n      var body={categoryid:data}\r\n      var result=await postData('brand/fetchbrands',body)\r\n           setBrand(result)\r\n           \r\n     }\r\n     \r\n     const fetchModel=async(brandid)=>{\r\n      var body={brandid:brandid}\r\n      var result=await postData('model/fetchmodels',body)\r\n           setModel(result)\r\n           \r\n     }\r\n\r\n     const fetchProduct=async(modelid)=>{\r\n      var body={modelid:modelid}\r\n      var result=await postData('product/fetchproductid',body)\r\n           setProductList(result)\r\n           \r\n     }\r\n\r\n     useEffect(function(){\r\n      fetchCategory()\r\n      fetchBrand()\r\n      fetchModel()\r\n      fetchProduct()\r\n       },[])\r\n       \r\n    \r\n       const categoryItems=()=>{\r\n        return(\r\n         \r\n                getCategory? getCategory.map((item,index)=>{\r\n                     return(\r\n                          <MenuItem value={item.categoryid}>{item.categoryname}</MenuItem>\r\n                    )\r\n                 }):null\r\n            \r\n        )\r\n        }\r\n\r\n        const brandItems=()=>{\r\n          return(\r\n           \r\n                   getBrand.map((item,index)=>{\r\n                       return(\r\n                            <MenuItem value={item.brandid}>{item.brandname}</MenuItem>\r\n                      )\r\n                   })\r\n              \r\n          )\r\n          }\r\n\r\n          const modelItems=()=>{\r\n            return(\r\n             \r\n                     getModel.map((item,index)=>{\r\n                         return(\r\n                              <MenuItem value={item.modelid}>{item.modelname}</MenuItem>\r\n                        )\r\n                     })\r\n                \r\n            )\r\n            }\r\n\r\n            const productItems=()=>{\r\n              return(\r\n               \r\n                       getProductList.map((item,index)=>{\r\n                           return(\r\n                                <MenuItem value={item.productid}>{item.productname}</MenuItem>\r\n                          )\r\n                       })\r\n                  \r\n              )\r\n              }\r\n    \r\n  \r\n         \r\n\r\n      const handleSubmit=async()=>{\r\n\r\n        var error=false\r\n        var ci=isEmpty(getCategoryId)\r\n        var bi=isEmpty(getBrandId)\r\n        var mi=isEmpty(getModelId)\r\n        var pi=isEmpty(getProductId)\r\n        var pd=isEmpty(getProductDescription)\r\n        \r\n       \r\n        if(ci.err)\r\n        {\r\n           error=ci.err\r\n          \r\n        }\r\n        if(bi.err)\r\n        {\r\n           error=bi.err\r\n          \r\n        }\r\n        if(mi.err)\r\n        {\r\n           error=mi.err\r\n          \r\n        }\r\n        if(pi.err)\r\n        {\r\n           error=pi.err\r\n           \r\n        }\r\n        if(pd.err)\r\n        {\r\n           error=pd.err\r\n          \r\n        }\r\n       \r\n      \r\n       setErrorPic({ci:ci.img,bi:bi.img,mi:mi.img,pi:pi.img,pd:pd.img})\r\n        if(!error)\r\n        {\r\n             \r\n       \r\n        var formData=new FormData()\r\n        formData.append('categoryid',getCategoryId)\r\n        formData.append('brandid',getBrandId)\r\n        formData.append('modelid',getModelId)\r\n        formData.append('productid',getProductId)\r\n        formData.append('description',getProductDescription)\r\n        dref.current.state.files.map((file,index)=>{\r\n        formData.append('pictures'+index,file)\r\n        })\r\n\r\n        const config={headers:{'content-type':'multipart/form-data'}}\r\n        var result= await postDataAndImage('productpicture/addProductPicture',formData,config)\r\n                \r\n        if(result){\r\n          setMessage(\"Record Submitted...\")\r\n        }\r\n        else{\r\n          setMessage(\"Record not submitted...\")\r\n        }\r\n      }\r\n      else{\r\n        alert(\"Please fill the blank entry..\")\r\n      } \r\n      }  \r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n          <div className={classes.maindiv}>\r\n             <div className={classes.headingdiv}>\r\n             <h3>Product Interface</h3>\r\n            </div>\r\n           <Grid container spacing={2}>\r\n           <Grid item xs={12} sm={4}>\r\n                   <img src={`/${getErrorPic.ci}`} />\r\n                   <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Category Id</InputLabel>\r\n                 <Select value={getCategoryId}  onChange={(event)=>handleCategory(event)}  \r\n                 label=\"Category Id\" >\r\n                           {categoryItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.bi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Brand Id</InputLabel>\r\n                 <Select value={getBrandId}  onChange={(event)=>handleBrand(event)}  \r\n                 label=\"Brand Id\" >\r\n                           {brandItems()}\r\n                  </Select>\r\n                </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={4}>\r\n                  <img src={`/${getErrorPic.mi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Model Id</InputLabel>\r\n                 <Select value={getModelId}  onChange={(event)=>handleModel(event)}  \r\n                 label=\"Model Id\" >\r\n                            {modelItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n\r\n                   <Grid item xs={12} >\r\n                  <img src={`/${getErrorPic.pi}`} />\r\n                  <FormControl variant=\"outlined\" fullWidth >\r\n                  <InputLabel >Product Id</InputLabel>\r\n                 <Select value={getProductId}  onChange={(event)=>setProductId(event.target.value)}  \r\n                 label=\"Model Id\" >\r\n                            {productItems()}\r\n                  </Select>\r\n            </FormControl>\r\n                  </Grid>\r\n                \r\n               \r\n                <Grid item xs={12}>\r\n                <img src={`/${getErrorPic.pd}`} />\r\n                  <TextField  label=\"Product Description\" variant=\"outlined\" fullWidth onChange={(event)=>setProductDescription(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <DropzoneComponent ref={dref} config={componentConfig}\r\n                       \r\n                       djsConfig={djsConfig} />,\r\n                </Grid>\r\n           \r\n           <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()} >\r\n               Submit\r\n                   </Button>\r\n                  </Grid>\r\n\r\n                  <Grid style={{ display:'flex',justifyContent:'center'}} item xs={12} sm={6}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                   Reset\r\n                   </Button>\r\n                  </Grid>\r\n\r\n\r\n           </Grid>\r\n           <div style={{ width:600,padding:10,display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n         <b>{getMessage}</b>\r\n         </div>\r\n          </div>\r\n      \r\n        </div>\r\n    );\r\n}","D:\\ecom\\src\\components\\ClientView\\MainPage.js",["349","350","351","352","353","354","355"],"D:\\ecom\\src\\components\\ClientView\\Footer.js",["356","357","358","359","360","361","362","363","364","365"],"import React,{useEffect,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {getData}  from '../FetchNodeServices'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n     footerpaper: {\r\n      height:'400',\r\n      background:'#e67e22',\r\n          \r\n    },\r\n    footerpaper1: {\r\n        height:'auto',\r\n        background:'#7f8c8d',\r\n            \r\n      },\r\n    nykaa:{\r\n\r\n        marginBottom:1,\r\n        paddingTop:5,\r\n        fontSize:20,\r\n        color:'#fff'\r\n    },\r\n    line1:{\r\n    paddingBottom:5,\r\n    fontSize:12,\r\n   paddingTop:8,\r\n    color:'#fff'\r\n    },\r\n    line2:{\r\n        paddingTop:'0.5px',\r\n        fontSize:12,\r\n        color:'#fff'\r\n        \r\n        },\r\n        container1:{\r\n        background:'#fff',\r\n        height:150,\r\n        },\r\n        container2:{\r\n            background:'#f53b57',\r\n            height:'auto',\r\n            },\r\n            container3:{\r\n              background:'#353b48',\r\n              height:150,\r\n              },  \r\n        container3box:{\r\n        paddingTop:20,\r\n        fontSize:14,\r\n       \r\n        color:'#fff',\r\n        paddingLeft:500,\r\n                },          \r\n            termscondition1:{\r\n              fontSize:14,\r\n              fontStyle:'italic',\r\n              alignItems:'center',\r\n              alignSelf:'center',\r\n              justifyContent:'center',\r\n              paddingLeft:300,\r\n              paddingTop:15,\r\n              color:'#fff'\r\n            },\r\n            termscondition2:{\r\n              fontSize:14,\r\n              color:'#fff',\r\n              paddingLeft:450,\r\n              paddingBottom:20,\r\n              paddingTop:10,\r\n            },\r\n            termscondition3:{\r\n              fontSize:14,\r\n              alignItems:'center',\r\n              alignSelf:'center',\r\n              justifyContent:'center',\r\n              \r\n            },\r\n           logo:{\r\n            color:'red',\r\n            fontSize: 4,\r\n            background: '#f53b57',\r\n            height: 50,\r\n            width: 50,\r\n            borderRadius: 50,\r\n            position: 'absolute',\r\n            textalign: 'center',\r\n          //  position: 'absolute',\r\n          \r\n           },\r\n           brand:{\r\n             fontSize:14,\r\n             fontWeight:'bold',\r\n             paddingLeft:50\r\n           }\r\n}));\r\n\r\n\r\n\r\nexport default function Footer() {\r\n    const classes = useStyles();\r\n    const [getList,setList]=useState([])\r\n    const fetchData=async()=>{\r\n        var result=await getData('category/fetchallcategory')\r\n            setList(result)   \r\n      }\r\n    \r\n    useEffect(function(){\r\n    fetchData()\r\n\r\n    },[])\r\n    const displayAllCategoriesInFooter=()=>{\r\n        return(        \r\n              getList.map((item,key)=>{\r\n            return(\r\n              \r\n               <div className={classes.mainmenuitems}><font size='2'><p>{item.categoryname}</p></font></div>\r\n              \r\n            ) })\r\n         )   \r\n      }\r\n     \r\n     \r\n      const footer=()=>{\r\n            \r\n        return(\r\n          <div>\r\n          \r\n        <Paper className={classes.footerpaper} >\r\n\r\n\r\n        <div className={classes.container3}>\r\n        <div className={ classes.container3box}>\r\n           <img style={{paddingTop:10}}  src=\"apple1.jpg\" width=\"30\" height=\"30\"/> &nbsp; EXPERIENCE THE NYKAA MOBILE APP\r\n        <br/>\r\n        <img style={{paddingTop:10}} src=\"googleplaystore.png\" width=\"110\" height=\"40\"/> &nbsp; &nbsp;\r\n        <img style={{paddingTop:10}} src=\"apple.png\" width=\"110\" height=\"40\"/>\r\n          </div>\r\n          </div>\r\n\r\n\r\n\r\n        <div className={classes.footerpaper1}>\r\n         <Grid container cellspacing={1}>\r\n       \r\n\r\n            <Grid item xs={2} style={{paddingTop:'5px',paddingLeft:'70px',paddingBottom:5}}>\r\n           \r\n            <div className={classes.nykaa}>   <img src=\"nykaa.svg\" width=\"70\" height=\"70\" /></div>\r\n            <div className={classes.line2}>\r\n          <p >  WHO ARE WE </p>\r\n          <p> CAREERS</p>\r\n          <p>  AUNTHENTICITY</p>\r\n          <p>  PRESS</p>\r\n          <p>  TESTIMONIALS</p>\r\n          <p>  NYKAA CSR</p>\r\n          <p>  RESPONSIBLE DESCLOUSRE </p>  \r\n            </div>    \r\n           \r\n            </Grid>\r\n\r\n             <Grid item xs={2} style={{paddingTop:'10px',paddingLeft:'20px'}}>\r\n           \r\n           <h5 style={{paddingTop:8}}>HELP</h5> \r\n           {/* <font size='2'> */}\r\n           <div className={classes.line1}>\r\n         <p>  CONTACT US </p>\r\n         <p> FREQUENTLY ASKED QUESTIONS</p>\r\n         <p>  STORE LOCATOR</p>\r\n         <p>  CONCELLATION & RETURN</p>\r\n         <p>  SHIPPING & DELIVERY</p>\r\n          \r\n           {/* </font>     */}\r\n          </div>\r\n           </Grid>\r\n\r\n            <Grid item xs={2} style={{paddingTop:'10px',paddingLeft:'10px'}}>\r\n            <h5 style={{paddingTop:8}}>INSPIRE ME</h5>    \r\n            <div className={classes.line1}>\r\n          <p>  BEAUTY BOOK</p>\r\n          <p>  NYKAA TV</p>\r\n          <p>  NYKAA NETWORK</p>\r\n          <p>  ROUTINE FOUNDER</p>\r\n          <p>  BUYING GUIDES </p>  \r\n            </div>                 \r\n            </Grid>\r\n\r\n               <Grid item xs={2} style={{paddingTop:'10px',paddingLeft:'20px'}}>\r\n            <h5 style={{paddingTop:8}}>QUICK LINKS</h5>    \r\n            <div className={classes.line1}>\r\n            <p>   OFFER ZONE</p>\r\n            <p>  NEW LAUNCHES</p>\r\n            <p>  NYKAA MAN</p>\r\n            <p>  NYKAA FASHION</p>\r\n            <p>  NYKAA PRO</p>   \r\n            <p>  NYKAA FEMINA BEAUTY</p>\r\n            <p>  SITEMAP</p>\r\n            </div>                 \r\n            </Grid>\r\n\r\n             <Grid item xs={2} style={{paddingTop:'10px',paddingLeft:'20px'}}>\r\n           \r\n           <h5 style={{paddingTop:8}}>TOP CATEGORIES</h5> \r\n           <div className={classes.line1}>\r\n\r\n          {displayAllCategoriesInFooter()}\r\n                 \r\n           </div>    \r\n      \r\n           </Grid>\r\n        \r\n         </Grid>\r\n\r\n\r\n          <div className={classes.container1}>\r\n        <div className={classes.logo}>\r\n           <img  src=\"deliverysign.jpg\" width=\"30\" height=\"30\"/>\r\n       \r\n          </div>\r\n          <div className={classes.brand} >1500+BRANDS<br/>\r\n          </div>\r\n          Well Curated 3Lakh + Products\r\n          </div>\r\n\r\n    \r\n    <div className={classes.container2}>\r\n\r\n   \r\n     <div className={classes.termscondition1}>\r\n     {/* <a href=\"/terms-conditions\" target=\"_blank\">Terms &amp; Conditions</a> */}\r\n     TERMS & CONDITIONS &nbsp; &nbsp; &nbsp;  SHIPPING POLICY &nbsp; &nbsp; &nbsp; CANCELLATION POLICY &nbsp; &nbsp; &nbsp; PRIVACY POLICY\r\n     </div>\r\n     <div className={classes.termscondition2}>\r\n     © 2021 Nykaa E-Retail Pvt. Ltd. All Rights Reserved\r\n     </div>\r\n    \r\n         {/* <Grid item xs={12} style={{paddingTop:'10px'}}>\r\n       <div className={classes.termscondition1}> TERMS & CONDITIONS </div>\r\n         </Grid>\r\n\r\n         <Grid item xs={12} style={{paddingTop:'10px',paddingLeft:300}}>\r\n       <div className={classes.termscondition2}>\r\n         SHIPPING POLICY\r\n         </div>\r\n         </Grid>\r\n\r\n             <Grid item xs={12} style={{paddingTop:'10px',paddingLeft:400}}>\r\n       <div className={classes.termscondition3}>\r\n     <h3>  CANCELLATION POLICY</h3>\r\n         </div>\r\n         </Grid> */}\r\n\r\n           </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n            </Paper>\r\n\r\n           </div>            \r\n        )\r\n        }\r\n    \r\n\r\n        return(\r\n         <div>\r\n             {footer()}\r\n         </div>\r\n\r\n        )\r\n\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\Footers.js",["366","367","368"],"import React,{useEffect,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {getData}  from '../FetchNodeServices'\r\n\r\nvar settings = {\r\n  infinite: true,\r\n  speed: 500,\r\n  slidesToShow: 6,\r\n  slidesToScroll: 1\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n     footerpaper: {\r\n      height:'520px',\r\n      background:'#d2dae2',\r\n          \r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Footers() {\r\n    const classes = useStyles();\r\n    const [getList,setList]=useState([])\r\n    const fetchData=async()=>{\r\n        let list=await getData('category/fetchallcategory')\r\n            setList(list)   \r\n      }\r\n    \r\n    useEffect(function(){\r\n    fetchData()\r\n\r\n    },[])\r\n    const displayAllCategoriesInFooter=()=>{\r\n        return(        \r\n              getList.map((item,key)=>{\r\n            return(\r\n              \r\n               <div className={classes.mainmenuitems}><font size='2'>{item.categoryname}</font></div>\r\n              \r\n            ) })\r\n         )   \r\n      }\r\n     \r\n     \r\n      const footer=()=>{\r\n            \r\n        return(\r\n          <div>\r\n          \r\n        <Paper className={classes.footerpaper} >\r\n         <Grid container spacing={0}>\r\n\r\n            <Grid item xs={3} style={{paddingTop:'32px',paddingLeft:'190px'}}>\r\n            <h5>MOST POPULAR CATEGORIES</h5>\r\n            {displayAllCategoriesInFooter()}            \r\n            </Grid>\r\n\r\n            <Grid item xs={3} style={{paddingTop:'32px',paddingLeft:'230px'}}>\r\n            <h5>CUSTOMER SERVICES</h5>    \r\n            <font size='2'>\r\n            About Us<br/>\r\n            FAQ<br/>\r\n            Terms And Conditions<br/>\r\n            Privacy Policy<br/>\r\n            E-Waste Policy    \r\n            </font>                 \r\n            </Grid>\r\n            \r\n            <Grid item xs={3} style={{paddingTop:'55px',paddingLeft:'270px'}}>\r\n            <Divider orientation=\"vertical\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={3} style={{paddingTop:'32px',paddingLeft:'1px'}}>\r\n            <h5>CONTACT US</h5>  \r\n            <font size='2'>\r\n            WhatsApp us :</font><font size='2' color='blue'><b> 900 0293 798</b></font><br/>\r\n            <font size='2'>Call Us :</font><font size='2' color='blue'><b> 1800 890 1222</b></font><br/><br/>\r\n            <font size='2'>8:00 AM to 8:00 PM, 365 days<br/><br/>\r\n            Please note that you are accessing the BETA <br/>Version of</font>\r\n            <font size='2' color='blue'>www.jiomart.com</font><br/><br/>\r\n            <font size='2'>Should you encounter any bugs,glitches lack<br/> of functionality\r\n           delayed deliveries, billing errors<br/> or other problems on the beta\r\n           website, please<br/> email us on</font><font size='2' color='blue'> cs@jiomart.com</font><br/>\r\n           \r\n           <h5>DOWNLOAD APP</h5> \r\n           < img src='/images/play_store.png'/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n           < img src='/images/ios_store.png'/>\r\n            </Grid>\r\n\r\n           <Grid item xs={12}><br/>\r\n            <Divider /> \r\n           </Grid>\r\n\r\n           <Grid item xs={12}>\r\n           <font size='2'>  \r\n           <p style={{paddingLeft:'250px'}}>Best viewed on Microsoft Edge 81+, Mozilla Firefox 75+, Safari 5.1.5+, Google Chrome 80+\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          Â© 2020 All rights reserved. Reliance Retail Ltd.</p> \r\n           </font>\r\n           </Grid>\r\n\r\n\r\n          </Grid>\r\n            </Paper>\r\n\r\n           </div>            \r\n        )\r\n        }\r\n    \r\n\r\n        return(\r\n         <div>\r\n             {footer()}\r\n         </div>\r\n\r\n        )\r\n\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\Home.js",["369","370","371","372","373","374","375","376","377","378","379","380"],"import React, { useEffect, useState } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ServerURL, getData, postData } from \"../FetchNodeServices\";\r\nimport { width } from \"@material-ui/system\";\r\nimport MainPage from \"./MainPage\";\r\nimport QtyCtrl from \"./QtyCtrl\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: \"88%\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n  const [getBrandList, setBrandList] = useState([]);\r\n  const [getTopBrandList, setTopBrandList] = useState([]);\r\n  const [getNewBrandList, setNewBrandList] = useState([]);\r\n  const [getDiscountProduct, setDiscountProduct] = useState([]);\r\n  const [cartRender, setCartRender] = useState(false);\r\n  var dispatch = useDispatch();\r\n\r\n  const fetchBrand = async () => {\r\n    var result = await getData(\"brand/fetchbrandsads\");\r\n    setBrandList(result);\r\n  };\r\n  const fetchTopBrand = async () => {\r\n    var result = await getData(\"brand/fetchTopBrand\");\r\n    setTopBrandList(result);\r\n  };\r\n  const fetchNewBrand = async () => {\r\n    var result = await getData(\"brand/fetchNewBrand\");\r\n    setNewBrandList(result);\r\n  };\r\n  const fetchDiscontedProduct = async () => {\r\n    var result = await getData(\"product/fetchProductByDiscount\");\r\n    setDiscountProduct(result);\r\n  };\r\n  useEffect(function () {\r\n    fetchBrand();\r\n    fetchTopBrand();\r\n    fetchNewBrand();\r\n    fetchDiscontedProduct();\r\n  }, []);\r\n\r\n  const handleChangeQty = (item, value) => {\r\n    item[\"qtydemand\"] = value;\r\n    dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n    setCartRender(!cartRender);\r\n  };\r\n\r\n  const showBrand = () => {\r\n    return getBrandList.map((item, index) => {\r\n      return (\r\n        <div>\r\n          <img\r\n            src={ServerURL + \"/images/\" + item.ad}\r\n            width=\"100%\"\r\n            height=\"30%\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const TopProducts = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList cellHeight={350} spacing={20} className={classes.gridList}>\r\n          {getTopBrandList.map((tile) => (\r\n            <GridListTile key={tile.brandid}>\r\n              <img\r\n                src={ServerURL + \"/images/\" + tile.ad}\r\n                onClick={() => {\r\n                  props.history.push({\r\n                    pathname: \"/ListProducts\",\r\n                    state: { brandid: tile.brandid },\r\n                  });\r\n                }}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                style={{ borderRadius: \"2%\", elevation: 20 }}\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const NewProducts = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList cellHeight={350} spacing={20} className={classes.gridList}>\r\n          {getNewBrandList.map((tile) => (\r\n            <GridListTile key={tile.brandid}>\r\n              <img\r\n                src={ServerURL + \"/images/\" + tile.ad}\r\n                width=\"100%\"\r\n                onClick={() => {\r\n                  props.history.push({\r\n                    pathname: \"/ListProducts\",\r\n                    state: { brandid: tile.brandid },\r\n                  });\r\n                }}\r\n                style={{ borderRadius: \"2%\", elevation: 20 }}\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  };\r\n  const showDiscountProducts = () => {\r\n    return (\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", padding: 5 }}>\r\n        {getDiscountProduct.map((item) => (\r\n          <div\r\n            style={{\r\n              width: 200,\r\n              padding: 10,\r\n              margin: 5,\r\n              border: \"1px solid #ecf0f1\",\r\n            }}\r\n          >\r\n            <img\r\n              src={ServerURL + \"/images/\" + item.picture}\r\n              width=\"100%\"\r\n              style={{ borderRadius: \"2%\", elevation: 20 }}\r\n              onClick={() =>\r\n                props.history.push({\r\n                  pathname: `/SproductView/${item.productid}`,\r\n                })\r\n              }\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                lineHeight: 1.5,\r\n                color: \"#3f414d\",\r\n              }}\r\n            >\r\n              {item.productname.length > 45 ? (\r\n                <div>{item.productname.substring(0, 45) + \"...\"}</div>\r\n              ) : (\r\n                <div>\r\n                  <div>{item.productname}</div>\r\n                  <div>&nbsp;</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"normal\",\r\n                lineHeight: 1.5,\r\n                color: \"#3f414d\",\r\n              }}\r\n            >\r\n              {item.offerprice == 0 ? (\r\n                <div> &#8377;{item.price}</div>\r\n              ) : (\r\n                <div>\r\n                  {\" \"}\r\n                  <span style={{ textDecorationLine: \"line-through\" }}>\r\n                    {\" \"}\r\n                    &#8377;{item.price}\r\n                  </span>{\" \"}\r\n                  &#8377; {item.offerprice}{\" \"}\r\n                  <span style={{ color: \"#fc2779\", fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    &nbsp;Save &#8377;{item.offerprice}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <QtyCtrl\r\n                value={0}\r\n                onChange={(value) => handleChangeQty(item, value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <MainPage props={props} />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"96%\" }}>\r\n          <Slider {...settings}>{showBrand()}</Slider>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontSize: 30,\r\n          color: \"#636e72\",\r\n          fontWeight: \"normal\",\r\n          display: \"flex\",\r\n          letterSpacing: \"3.9px\",\r\n          fontFamily: 'Georgia,Times,\"Times New Roman\",serif',\r\n          justifyContent: \"center\",\r\n          padding: 10,\r\n          paddingTop: 30,\r\n        }}\r\n      >\r\n        IN THE SPOTLIGHT\r\n      </div>\r\n\r\n      {TopProducts()}\r\n\r\n      <div\r\n        style={{\r\n          fontSize: 30,\r\n          color: \"#636e72\",\r\n          fontWeight: \"normal\",\r\n          display: \"flex\",\r\n          letterSpacing: \"3.9px\",\r\n          fontFamily: 'Georgia,Times,\"Times New Roman\",serif',\r\n          justifyContent: \"center\",\r\n          padding: 10,\r\n          paddingTop: 30,\r\n        }}\r\n      >\r\n        SPECIAL SELECTION FOR YOU\r\n      </div>\r\n\r\n      {NewProducts()}\r\n\r\n      <div\r\n        style={{\r\n          fontSize: 30,\r\n          color: \"#636e72\",\r\n          fontWeight: \"normal\",\r\n          display: \"flex\",\r\n          letterSpacing: \"3.9px\",\r\n          fontFamily: 'Georgia,Times,\"Times New Roman\",serif',\r\n          justifyContent: \"center\",\r\n          padding: 10,\r\n          paddingTop: 30,\r\n        }}\r\n      >\r\n        FEATURE BRANDS\r\n      </div>\r\n\r\n      {showDiscountProducts()}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\QtyCtrl.js",["381","382","383"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {pink} from '@material-ui/core/colors'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  \r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n     color: theme.palette.getContrastText(\"#fc2779\"),\r\n     backgroundColor:\"#fc2779\"\r\n    },\r\n}))\r\nfunction QtyCtrl(props){\r\n    const classes = useStyles();\r\n\r\n    const [value,setValue]=useState(props.value)\r\n    const handleDecreament=()=>{\r\n      if(value>0){\r\n      var qty=value-1     \r\n       \r\n     setValue(qty)\r\n     props.onChange(value)\r\n      }\r\n    \r\n      }\r\n const handleIncreament=()=>{\r\n var qty=value+1  \r\n setValue(qty)\r\n props.onChange(value)\r\n }\r\n const handleClick=()=>{\r\n   setValue(1)\r\n   props.onChange(1)\r\n }\r\n    \r\n    return(\r\n      \r\n        <div style={{display:'flex', flexDirection:'row',}}>\r\n      {value==0?(\r\n        <Button variant='contained' \r\n        onClick={()=>handleClick()}\r\n        style={{display:'flex',justifyContent:'center',alignItems:'center',color:'#fff', width:180, backgroundColor:'#fc2779'}}>\r\n          Add to Cart\r\n        </Button>):(\r\n          <>\r\n         <Avatar  style={{margin:10, }}  onClick={handleIncreament} className={classes.small} > + </Avatar> \r\n        <div style={{fontWeight:'bold',marginLeft:10,marginRight:10,marginTop:5}}> {value}</div>\r\n        \r\n    <Avatar  style={{margin:10}}   className={classes.small} onClick={handleDecreament} > - </Avatar> \r\n       </> \r\n      )}\r\n       </div>\r\n                 \r\n               \r\n    )\r\n}\r\n\r\nexport default QtyCtrl;\r\n","D:\\ecom\\src\\components\\RootReducer.js",[],"D:\\ecom\\src\\components\\ClientView\\Register.js",["384","385","386"],"import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n//import './index.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n    main_div: {\r\n      width:'100%',\r\n      height:'100vh',\r\n      display:'flex',\r\n      flexDirection:'row',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n  \r\n      background: \"#c8d6e5\",\r\n    },\r\n    center_div:{\r\n \r\n      width:'22%',\r\n      height:'100%',\r\n      borderRadius:'15px',\r\n       backgroundColor:'#fff',\r\n      marginTop:'20px',\r\n      marginRight: '-30px',\r\n      marginLeft: '-30px',\r\n      padding: '0 32px',\r\n    },\r\n    \r\n    button_hover:{\r\n      backgroundColor:\"#20bf6b\"\r\n    },\r\n\r\n    ol:{\r\n      marginTop:10\r\n    },\r\n    ol_li:{\r\n    textAlign:'left',\r\n    fontSize:'20px',\r\n    fontWeight:500,\r\n    minHeight:'20px',\r\n    display:'flex',\r\n    alignItems:'center',\r\n    textTransform:'capitalize',\r\n    color:'#8566aa'\r\n\r\n    }\r\n\r\n\r\n  }));\r\n\r\nfunction Register(props) {\r\n    const classes = useStyles()\r\n\r\n\r\n    const handleChange=()=>{\r\n     // alert('hello')\r\n     props.history.push({pathname:'/Login'})\r\n    }\r\n   \r\n    \r\n    return (\r\n        <>\r\n        <div className={classes.main_div}>\r\n          <div className={classes.center_div}>\r\n          <button type=\"button\" style={{ background: 'none', border: 0,\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    lineHeight: 'normal',\r\n    padding: '2px',\r\n    left: '20px',\r\n    marginTop:'20px',\r\n    width: '24px',\r\n     height: '24px',}}>\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>back/close</title><path fill=\"#3F414D\" d=\"M1.319 0L0 1.319 6.681 8 0 14.681 1.319 16 8 9.319 14.681 16 16 14.681 9.319 8 16 1.319 14.681 0 8 6.681z\"></path></svg></button>\r\n\r\n          <h2 style={{fontSize:'36px',fontWeight:700,marginop:'56px',marginBottom:'9px',texAtlign:'left',textTransform: 'none',  color: '#000f1d', opacity:.92}}>  Sign in</h2>  \r\n          <p style={{fontSize:'17px',\r\n    lineHeight:'20px',\r\n    letterSpacing: '.28px',\r\n    color: '#001325',\r\n    opacity: .92,\r\n    paddingBottom:'15px',\r\n    borderBottom: \"1px solid '#8566aa' \",\r\n    marginBottom: '15px',}}>\r\n        To quickly find your favourites items, saved addresses and payments.</p>\r\n        <Divider/>\r\n    \r\n        <p style={{    fontSize:'17px',\r\n    lineHeight: '20px',\r\n    letterSpacing: '.28px',\r\n    color: '#001325',\r\n    opacity: .92,\r\n    paddingBottom:'15px',\r\n    marginBottom: '15px'}}>\r\n        Register and earn 2000 reward points</p>\r\n\r\n  <div class=\"login-giftBox\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"296\" height=\"160\"><title>gift box</title><g fill=\"none\" fill-rule=\"evenodd\"><ellipse cx=\"148\" cy=\"155.5\" fill=\"#FFF6FA\" fill-rule=\"nonzero\" rx=\"148\" ry=\"4\"></ellipse><rect width=\"133\" height=\"133\" x=\"82\" y=\"23\" fill=\"#FFF6FA\" fill-rule=\"nonzero\" rx=\"66.5\"></rect><path fill=\"#FF4A90\" fill-rule=\"nonzero\" d=\"M112 82h73v74h-73z\"></path><path d=\"M112 82h73v74h-73z\"></path><path stroke=\"#C50060\" stroke-width=\"3.83\" d=\"M148.2 155.5V82.57s-29.33-22.33-23.41-31.26c10.65-16 23.4 31.26 23.4 31.26s15.18-32.62 20.87-34.12c14.13-3.75 4.57 20.57-20.56 33.55\"></path><path fill=\"#E80071\" fill-rule=\"nonzero\" d=\"M163 91h13v6h-13z\"></path><path stroke=\"#C50060\" stroke-linecap=\"square\" stroke-width=\"3.5\" d=\"M114.17 115.78h68.6\"></path><circle cx=\"63\" cy=\"31.71\" r=\"7\" fill=\"#E80071\" fill-rule=\"nonzero\"></circle><circle cx=\"232\" cy=\"14.71\" r=\"7\" fill=\"#92E7E0\" fill-rule=\"nonzero\"></circle><path fill=\"#194476\" fill-rule=\"nonzero\" d=\"M149.92.71l7.79 7.81-7.79 7.81-7.78-7.8z\"></path><g fill-rule=\"nonzero\"><path fill=\"#E80071\" d=\"M205 100v22h9v-17.34z\"></path><path fill=\"#001325\" d=\"M203 120h13v29.5a6.5 6.5 0 11-13 0 NaNvNaNz\"></path></g><circle cx=\"218\" cy=\"68.72\" r=\"5\" stroke=\"#001325\"></circle><circle cx=\"12\" cy=\"58.72\" r=\"5\" stroke=\"#001325\"></circle><path fill=\"#3063A0\" fill-rule=\"nonzero\" d=\"M24 112h59v44H24z\"></path><path stroke=\"#194476\" stroke-width=\"3\" d=\"M41.67 156v-44.03S19.9 97.32 29.4 97.32c9.5 0 12.27 10.21 12.27 10.21s6.67-15.56 12.44-13.3c5.78 2.25-18.56 24.14-18.56 24.14\"></path><path stroke=\"#194476\" stroke-linecap=\"square\" stroke-width=\"3\" d=\"M25.61 141.78H81.6\"></path><path fill=\"#194476\" fill-rule=\"nonzero\" d=\"M55 120h13v6H55z\"></path><g><path fill=\"#92E7E0\" fill-rule=\"nonzero\" d=\"M230 115h59v41h-59z\"></path><path stroke=\"#59B7B7\" stroke-linecap=\"square\" stroke-width=\"3\" d=\"M231.5 141.78h56.02\"></path><path stroke=\"#59B7B7\" stroke-width=\"3\" d=\"M259.68 156v-43.3S237.9 98.28 247.4 98.28s12.28 10.04 12.28 10.04 6.66-15.32 12.43-13.1c5.78 2.22-18.55 23.74-18.55 23.74\"></path><path fill=\"#59B7B7\" fill-rule=\"nonzero\" d=\"M268 120h13v6h-13z\"></path></g></g></svg></div>\r\n\r\n <div style={{ position: 'relative',borderColor:'#fff'}}>\r\n <input type=\"email\"\r\n  style={{ borderRadius: '4px',\r\n    background: '#fc2779',\r\n    fontSize: '18px',\r\n    lineHeight: '24px',\r\n    letterSpacing: '.28px',\r\n    padding: '8px 16px',\r\n    textAlign: 'center',\r\n    width:'94%',\r\n    font:'inherit',\r\n    fontWeight:'inherit',\r\n    fontFamily: 'inherit',\r\n    touchAction:'manipulation',\r\n    boxSizing:'border-box',\r\n    color:'#fff',\r\n    border:'1px solid #fc2799',\r\n    borderRadius:'2px',\r\n}}\r\n     onClick={()=>handleChange()}\r\n     placeholder=\"Enter Phone Number or Email\"/>\r\n </div>\r\n\r\n <div style={{    margin:'0 0 23px',\r\n    marginTop:'15px',\r\n    display: 'flex',\r\n    boxSizing:'border-box',color: '#3f414d',}}><div style={{    marginRight: 0,\r\n        width: '100%',\r\n        margin: '0 16px 0 0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        border: \"1px solid #ebebeb \",}}>\r\n          <a href = 'http://www.accounts.google.com'> <span> <img style={{marginTop:5,fontWeight:'bold',marginLeft:-10}} src=\"/googleicon.jpg\" width=\"40\" height=\"40\" /></span></a>\r\n        <span style={{fontSize: '18px',\r\n    letterSpacing:'.28px' ,\r\n    color: '#8c8d94',\r\n    textTransform: 'none',\r\n    fontWeight: 700,\r\n    marginRight:-20,\r\n    padding: '8px 8px 8px 34px',\r\n    background:'none',\r\n    boxShadow: 'none',\r\n    marginTop:5,\r\n    cursor: 'pointer',\r\n    textAlign: 'left'}}> Google</span></div> \r\n    </div>\r\n     <p style={{marginTop: '23px',\r\n    letterSpacing: '.50px',\r\n    fontSize:'14px',\r\n    color: '#001325',\r\n    opacity: '.64',}}>By continuing, you agree that you have read and accept our&nbsp;<a href=\"./terms-conditions\" target=\"_blank\" title=\"Terms &amp; Conditions\">T&amp;Cs</a>&nbsp;and&nbsp;<a href=\"./privacy-policy\" target=\"_blank\" title=\"Privacy Policy\">Privacy Policy</a></p>\r\n\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register \r\n\r\n\r\n\r\n","D:\\ecom\\src\\components\\ClientView\\Login.js",["387","388","389","390","391","392","393","394","395","396","397"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { ServerURL, getData, postData } from \"../FetchNodeServices\";\r\nimport { checkMobile, checkRequire } from \"../Checks\";\r\n\r\n//import './index.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  main_div: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    background: \"#ebebeb\",\r\n  },\r\n  center_div: {\r\n    width: \"22%\",\r\n    height: \"100%\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"#fff\",\r\n    marginTop: \"20px\",\r\n    marginRight: \"-30px\",\r\n    marginLeft: \"-30px\",\r\n    padding: \"0 32px\",\r\n  },\r\n\r\n  button_hover: {\r\n    backgroundColor: \"#20bf6b\",\r\n  },\r\n\r\n  ol: {\r\n    marginTop: 10,\r\n  },\r\n  ol_li: {\r\n    textAlign: \"left\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 500,\r\n    minHeight: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textTransform: \"capitalize\",\r\n    color: \"#8566aa\",\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const [getPhoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [getMessage, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n\r\n    if (getPhoneNumber.length == 0) {\r\n      err = true;\r\n      setMessage(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your mobile no!</i>\r\n        </font>\r\n      );\r\n    } else if (!checkMobile(getPhoneNumber)) {\r\n      err = true;\r\n      setMessage(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter valid mobile no!</i>\r\n        </font>\r\n      );\r\n    } else if (checkMobile(getPhoneNumber)) {\r\n      setMessage(\"\");\r\n    }\r\n\r\n    if (!err) {\r\n      // alert('deepti'+getPhoneNumber)\r\n      var body = { phonenumber: getPhoneNumber };\r\n      var result = await postData(\"userdetail/chkUserRecord\", body);\r\n      console.log(result.RESULT);\r\n      if (result.RESULT == \"FOUND\") {\r\n        setMessage(result.message);\r\n        props.history.push({ pathname: \"/Home\" });\r\n      } else {\r\n        props.history.push({ pathname: \"/SignIn\", getPhoneNumber });\r\n      }\r\n    } else {\r\n      alert(\"SERVER ERROR\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.main_div}>\r\n        <div className={classes.center_div}>\r\n          {/* <section class=\"screen-with-header\"><header class=\"common-header\"><button class=\"close-btn\" type=\"button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>back/close</title><path fill=\"currentColor\" d=\"M1.319 0L0 1.319 6.681 8 0 14.681 1.319 16 8 9.319 14.681 16 16 14.681 9.319 8 16 1.319 14.681 0 8 6.681z\"></path></svg></button><!-- react-text: 409 -->login / register<!-- /react-text --></header><div class=\"container\"><form><div class=\"form-field-plain error\"><input name=\"emailMobile\" value=\"\" placeholder=\"Enter Email ID or Phone Number\" class=\"input text-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"success-input-icon\" width=\"16\" height=\"13\" viewBox=\"0 0 16 13\"><title>success checkmark</title><path fill=\"#5cd285\" d=\"M14.563.247l-9.51 9.51L1.437 6.14.247 7.332l4.806 4.806 10.7-10.7z\"></path></svg><span class=\"help-msg\">Required</span></div><inputfield name=\"customerId\" value=\"\" hidden=\"\" label=\"Hidden Id for Masked Email\"></inputfield><div class=\"button-separator\"><button type=\"submit\" class=\"button big fill full \"><!-- react-text: 421 -->proceed<!-- /react-text --></button></div></form></div></section> */}\r\n\r\n          <header\r\n            style={{\r\n              borderBottom: \"1px solid #ebebeb\",\r\n              fontSize: \"16px\",\r\n              fonWeight: 800,\r\n              marginRight: \"10px\",\r\n              marginBottom: \"7px\",\r\n              marginLeft: \"10px\",\r\n              padding: \"25px 10px 15px\",\r\n              position: \"relative\",\r\n              textAlign: \"center\",\r\n              color: \"#3f414d\",\r\n              textTransform: \"uppercase\",\r\n            }}\r\n          >\r\n            <button\r\n              style={{\r\n                background: \"none\",\r\n                border: 0,\r\n                cursor: \"pointer\",\r\n                lineHeight: \".8\",\r\n                padding: \"2px\",\r\n                position: \"absolute\",\r\n                bottom: \"15px\",\r\n                left: \"5px\",\r\n              }}\r\n              type=\"button\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <title>back/close</title>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M1.319 0L0 1.319 6.681 8 0 14.681 1.319 16 8 9.319 14.681 16 16 14.681 9.319 8 16 1.319 14.681 0 8 6.681z\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n            login / register\r\n          </header>\r\n\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              boxSizing: \"border-box\",\r\n              display: \"block\",\r\n            }}\r\n          >\r\n            <input\r\n              name=\"emailMobile\"\r\n              onChange={(event) => setPhoneNumber(event.target.value)}\r\n              placeholder=\"Enter Email ID or Phone Number\"\r\n              value={getPhoneNumber}\r\n              style={{\r\n                border: \"1px solid red\",\r\n                backgroundColor: \"#f3f3f3\",\r\n                borderRadius: \"2px\",\r\n                color: \"#3f414d\",\r\n                marginBottom: \"16px\",\r\n                padding: \"10px 25px 10px 5px\",\r\n                width: \"100%\",\r\n                fontSize: \"14px\",\r\n                textAlign: \"center\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            />\r\n\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              style={{\r\n                top: \"13px\",\r\n                right: \"10px\",\r\n                display: \"none\",\r\n                position: \"absolute\",\r\n                overflow: \"hidden\",\r\n              }}\r\n              width=\"16\"\r\n              height=\"13\"\r\n              viewBox=\"0 0 16 13\"\r\n            >\r\n              <title>success checkmark</title>\r\n              <path\r\n                fill=\"#5cd285\"\r\n                d=\"M14.563.247l-9.51 9.51L1.437 6.14.247 7.332l4.806 4.806 10.7-10.7z\"\r\n              ></path>\r\n            </svg>\r\n            <span\r\n              style={{\r\n                textAlign: \"right\",\r\n                color: \"#3f414d\",\r\n                position: \"absolute\",\r\n                fontSize: \"10px\",\r\n                fontWeight: 600,\r\n                right: \"5px\",\r\n                bottom: 0,\r\n                textAlign: \"right\",\r\n                boxSizing: \"border-box\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {getMessage}\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"160px\", boxSizing: \"border-box\" }}>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => handleSubmit()}\r\n              style={{\r\n                height: \"50px\",\r\n                width: \"100%\",\r\n                fontWeight: 700,\r\n                backgroundColor: \"#fc2779\",\r\n                backgroundColor: \"#fc2779\",\r\n                color: \"#fff\",\r\n                border: \"1px solid #fc2799\",\r\n                borderRadius: \"2px\",\r\n                color: \"#fff\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\ecom\\src\\components\\ClientView\\SignIn.js",["398","399","400","401","402","403"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { getDefaultNormalizer } from '@testing-library/react';\r\nimport { ServerURL, getData, postData } from \"../FetchNodeServices\";\r\n\r\n//import './index.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n    main_div: {\r\n      width:'100%',\r\n      height:'100vh',\r\n      display:'flex',\r\n      flexDirection:'row',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n  \r\n      background: \"#ebebeb\",\r\n    },\r\n    center_div:{\r\n \r\n      width:'22%',\r\n      height:'100%',\r\n      borderRadius:'15px',\r\n       backgroundColor:'#fff',\r\n      marginTop:'20px',\r\n      marginRight: '-30px',\r\n      marginLeft: '-30px',\r\n      padding: '0 32px',\r\n    },\r\n\r\n    form_field_password:{\r\n   position:'relative',\r\n   padding: '15px 0 0',\r\n   marginBottom: '10px',\r\n   flex:1,\r\n   marginTop:'10px',\r\n   color: '#3f414d',\r\n   boxSizing:'border-box',\r\n   display:'block',\r\n   font: '14px/1.42857 Source Sans Pro,sans-serif'\r\n    },\r\n    input_field_password:{\r\n    paddingRight:'45px',  \r\n    borderBottomColor:'red',\r\n    fontFamily: 'text-security-disc,sans-serif', \r\n    touchAction:'manipulation',\r\n    background: 'transparent',\r\n    border: 0,\r\n    borderBottom: '1px solid #e1e1e1',\r\n    color: '#3f414d',\r\n    fontWeight: 400,\r\n    outline: 0,\r\n    padding: '5px 0 5px 5px',\r\n    width: '85%',\r\n    transition: 'border-color .2s',\r\n    fontSize:'inherit',\r\n    lineHeight:'inherit', \r\n    },\r\n    label_password:{\r\n     cursor: 'text',\r\n    fontSize: '14px',\r\n    fontWeight: '400',\r\n    top: '24px',\r\n    left:'4px',\r\n    color: '#8c8d94',\r\n    pointerEvents: 'none',\r\n    position:'absolute',\r\n    textTransform:'capitalize',\r\n    transition:'.2s',\r\n    maxWidth:' 95%',\r\n    marginBottom: '5px',\r\n    boxSizing:'border-box',\r\n},\r\n show_password:{\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n    fontSize: '11px',\r\n    fontWeight: 600,\r\n    position: 'absolute',\r\n    top: '22px',\r\n    right: '5px',\r\n    textTransform: 'uppercase',\r\n    zIndex: 2,\r\n    color:'#3f414d'\r\n },\r\n error_section:{\r\n display:'block', \r\n color: '#3f414d',\r\n font: '14px/1.42857 Source Sans Pro,sans-serif',   \r\n },\r\n\r\n filed_error:{\r\n    color: 'red',\r\n    display: 'block',\r\n    fontSize: '10px',\r\n    fontWeight: 600,\r\n    textTransform: 'uppercase',\r\n    position: 'absolute',\r\n    bottom: '-15px',\r\n    right: '5px',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',\r\n },\r\n    \r\n    \r\n   \r\n  }));\r\n\r\nfunction SignIn(props) {\r\n    const classes = useStyles()\r\n    const[getUserName,setUserName]=useState('')\r\n    const[getPhoneNumber,setPhoneNumber]=useState('')\r\n    const[getEmail,setEmail]=useState('')\r\n    const[getPassword,setPassword]=useState('')\r\n    const[getMessage,setMessage]=useState('')\r\n    const handleSubmit=async()=>{\r\n       var body={username:getUserName,phonenumber:getPhoneNumber,email:getEmail,password:getPassword}\r\n       var result=await postData('userdetail/userRecord',body)\r\n       if(result){\r\n           setMessage('Record Submitted')\r\n           props.history.replace({pathname:'/Home'})\r\n       }\r\n       else{\r\n           setMessage('Record Not Submitted')\r\n       }\r\n    }\r\n   \r\n    useEffect(function(){\r\n    // console.log(props.history.location.getPhoneNumber)\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.main_div}>\r\n          <div className={classes.center_div}>\r\n\r\n\r\n          {/* <section class=\"screen-with-header\"><header class=\"common-header\"><button class=\"close-btn\" type=\"button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>back/close</title><path fill=\"currentColor\" d=\"M1.319 0L0 1.319 6.681 8 0 14.681 1.319 16 8 9.319 14.681 16 16 14.681 9.319 8 16 1.319 14.681 0 8 6.681z\"></path></svg></button><!-- react-text: 409 -->login / register<!-- /react-text --></header><div class=\"container\"><form><div class=\"form-field-plain error\"><input name=\"emailMobile\" value=\"\" placeholder=\"Enter Email ID or Phone Number\" class=\"input text-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"success-input-icon\" width=\"16\" height=\"13\" viewBox=\"0 0 16 13\"><title>success checkmark</title><path fill=\"#5cd285\" d=\"M14.563.247l-9.51 9.51L1.437 6.14.247 7.332l4.806 4.806 10.7-10.7z\"></path></svg><span class=\"help-msg\">Required</span></div><inputfield name=\"customerId\" value=\"\" hidden=\"\" label=\"Hidden Id for Masked Email\"></inputfield><div class=\"button-separator\"><button type=\"submit\" class=\"button big fill full \"><!-- react-text: 421 -->proceed<!-- /react-text --></button></div></form></div></section> */}\r\n\r\n          \r\n         <header style={{borderBottom:'1px solid #ebebeb',\r\n    fontSize: '16px',\r\n    fonWeight: 800,\r\n    marginRight: '10px',\r\n    marginBottom: '7px',\r\n    marginLeft: '10px',\r\n    padding: '25px 10px 15px',\r\n    position: 'relative',\r\n    textAlign: 'center',\r\n    color: '#3f414d',\r\n    textTransform: 'uppercase',}}>\r\n      <button style={{background: 'none',\r\n      border: 0,\r\n      cursor: 'pointer',\r\n      lineHeight: '.8',\r\n      padding: '2px',\r\n      position: 'absolute',\r\n      bottom: '15px',\r\n      left: '5px',}} type=\"button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>back/close</title><path fill=\"currentColor\" d=\"M1.319 0L0 1.319 6.681 8 0 14.681 1.319 16 8 9.319 14.681 16 16 14.681 9.319 8 16 1.319 14.681 0 8 6.681z\"></path></svg></button> Register</header>\r\n\r\n<div style={{    textAlign: 'center',\r\n    paddingBottom: '30px',\r\n    marginTop: '20px',\r\n    boxSizing: 'border-box',\r\n    color: '#3f414d',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',}}>\r\n    Register to Earn\r\n    <span style={{color: '#fc2779',\r\n    paddingLeft: '5px',\r\n    textAlign:'center',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',\r\n    boxSizing:'border-box'\r\n    }}>\r\n        2000&nbsp; Reward Points!\r\n        </span>\r\n        </div>\r\n\r\n        <div style={{ position: 'relative',\r\n    padding: '15px 0 0',\r\n    marginBottom: '10px',\r\n    flex:1,\r\n    marginTop:'10px',\r\n    color: '#3f414d',\r\n    boxSizing:'border-box',\r\n    display:'block',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',}}>\r\n        <input type=\"text\" name=\"userName\"  \r\n        style={{touchAction:'manipulation',\r\n        background: 'transparent',\r\n        border: 0,\r\n        borderBottom: '1px solid #e1e1e1',\r\n        color: '#3f414d',\r\n        fontWeight: 400,\r\n        outline: 0,\r\n        padding: '5px 0 5px 5px',\r\n        width: '100%',\r\n        transition: 'border-color .2s',\r\n        fontFamily: 'inherit',\r\n    fontSize: 'inherit',\r\n    lineHeight: 'inherit',\r\n    boxSizing:'border-box',\r\n    font:'inherit',\r\n    margin:0,\r\n\r\n        }}\r\n         placeholder=\"Name\" id=\"userName\" \r\n         onChange={(event)=>setUserName(event.target.value)}\r\n         autocomplete=\"new-text\"/>\r\n    </div>\r\n   \r\n    \r\n \r\n        <div style={{     position: 'relative',\r\n    padding: '15px 0 0',\r\n    marginBottom: '10px',\r\n    flex:1,\r\n    marginTop:'10px',\r\n    color: '#3f414d',\r\n    display:'block',\r\n    boxSizing:'border-box',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif'}}>\r\n        <input type=\"number\"\r\n         name=\"phoneNumber\" \r\n         style={{\r\n    cursor: 'default',\r\n    touchAction: 'manipulation',\r\n    boxShadow: 'none !important',\r\n    background: 'transparent',\r\n    border: 0,\r\n    borderBottom: '1px solid #e1e1e1',\r\n    color: '#3f414d',\r\n    fontWeight: 400,\r\n    outline: 0,\r\n    padding: '5px 0 5px 5px',\r\n    width: '100%',\r\n    transition:'border-color .2s' ,\r\n    fontFamily: 'inherit',\r\n    fontSize: 'inherit',\r\n    lineHeight: 'inherit',\r\n    font: 'inherit',\r\n    margin: 0,\r\n    boxSizing:'border-box',\r\n         }}\r\n         placeholder=\"Phone Number \" id=\"\" disabled=\"\" autocomplete=\"new-number\"\r\n         onChange={(event)=>setPhoneNumber(event.target.value)}\r\n          value={props.history.location.getPhoneNumber}/>\r\n         \r\n         {/* <label for=\"\" style={{color:'#8c8d94',display:'block',fontSize:'12px',fontWeight:400,top:'3px',left:'5px',position:'absolute',textTransform:'capitalize',transition:'.2s',touchAction:'manipulation',maxWidth:'100%',marginBottom:'5px',boxSizing:'border-box',font:'14px/1.42857 Source Sans Pro,sans-serif',}}>Phone Number </label>*/}\r\n         </div> \r\n       \r\n         <div style={{ position: 'relative',\r\n    padding: '15px 0 0',\r\n    marginBottom: '10px',\r\n    flex:1,\r\n    marginTop:'10px',\r\n    color: '#3f414d',\r\n    boxSizing:'border-box',\r\n    display:'block',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',}}>\r\n        <input type=\"text\" name=\"customerEmail\"  \r\n        style={{touchAction:'manipulation',\r\n        background: 'transparent',\r\n        border: 0,\r\n        borderBottom: '1px solid #e1e1e1',\r\n        color: '#3f414d',\r\n        fontWeight: 400,\r\n        outline: 0,\r\n        padding: '5px 0 5px 5px',\r\n        width: '100%',\r\n        transition: 'border-color .2s',\r\n        fontFamily: 'inherit',\r\n    fontSize: 'inherit',\r\n    lineHeight: 'inherit',\r\n    boxSizing:'border-box',\r\n    font:'inherit',\r\n    margin:0,\r\n\r\n        }}\r\n         placeholder=\"Email Address (Optional)\"\r\n          id=\"customerEmail\" \r\n          onChange={(event)=>setEmail(event.target.value)}\r\n         autocomplete=\"new-text\"/>\r\n    </div>\r\n\r\n    <div className={classes.form_field_password}>\r\n        <input type=\"text\" name=\"password\"  onChange={(event)=>setPassword(event.target.value)} className={classes.input_field_password} id=\"secure-input\" placeholder=\"Create Password\" autoComplete='current-password'/>\r\n            {/* <label for=\"password\" className={classes.label_password}>Create Password</label> */}\r\n            <span className={classes.show_password}>show</span>\r\n            <div className={classes.error_section}>\r\n                <span className={classes.filed_error}>Please Enter the passwod</span>\r\n                </div>\r\n                </div>\r\n\r\n\r\n\r\n    <div style={{position: 'relative',\r\n    padding: '15px 0 0',\r\n    marginBottom: '10px',\r\n    flex:1,\r\n    marginTop:'10px',\r\n    color: '#3f414d',\r\n    boxSizing:'border-box',\r\n    display:'block',\r\n    font: '14px/1.42857 Source Sans Pro,sans-serif',}}>\r\n        <button type=\"button\" onClick={()=>handleSubmit()} style={{boxSizing:'border-box',backgroundColor:'#fc2779',color:'#fff',height:'50px',width:'100%',marginTop:'60px',borderRadius:'2px',border:'1px solid #fc2799',fontWeight:700,letterSpacing:'1.5',padding:'8px 20px', textAlign:'center',textTransform:'uppercase',touchAction:'manipulation',fontFamily:'inherit',fontSize:'inherit'}}>register</button></div>\r\n\r\n                </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn;\r\n\r\n\r\n\r\n","D:\\ecom\\src\\components\\ClientView\\ListProducts.js",["404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ServerURL, getData, postData } from \"../FetchNodeServices\";\r\nimport { width } from \"@material-ui/system\";\r\nimport MainPage from \"./MainPage\";\r\nimport QtyCtrl from \"./QtyCtrl\";\r\nimport Footer from \"./Footer\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Height } from \"@material-ui/icons\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  main_div: {\r\n    // width:'100%',\r\n    // height:'100%',\r\n\r\n    // flexDirection:'row',\r\n    // justifyContent:'center',\r\n    // alignItems:'center',\r\n    display: \"flex\",\r\n    background: \"#ebebeb\",\r\n  },\r\n  gridList: {\r\n    width: \"88%\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n  filter: {\r\n    marginBottom: \"20%\",\r\n    marginTop: \"1px\",\r\n    marginRight: \"60%\",\r\n    paddingBottom: \"2px\",\r\n    marginLeft: \"150px\",\r\n    paddingLeft: \"20px\",\r\n    backgroundColor: \"ebebeb\",\r\n    boxShadow: \"2px 2px 8px #0000001f\",\r\n    fontSize: \"12px\",\r\n    paddingTop: \"5px\",\r\n    position: \"absolute\",\r\n    width: \"200px\",\r\n    top: \"200px\",\r\n  },\r\n  root1: {\r\n    width: \"50%\",\r\n\r\n    // marginTop:'20px',\r\n    // marginLeft:'20px',\r\n    // fontSize:'12px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  paper: {\r\n    background: \"white\", //#fc2779\r\n    height: \"auto\",\r\n    maxWidth: 400,\r\n    marginRight: 50,\r\n    elevation: 60,\r\n  },\r\n}));\r\n// ((props) => <Radio color=\"default\" {...props} />);\r\n\r\nfunction ListProducts(props) {\r\n  const classes = useStyles();\r\n\r\n  const [getProduct, setProduct] = useState([]);\r\n  const [cartRender, setCartRender] = useState(false);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [error, setError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState(\"Choose wisely\");\r\n  const [Range, setRange] = React.useState([100, 10000]);\r\n  const [getFisrtValue, setFisrtValue] = React.useState(\"100\");\r\n  const [getSecondValue, setSecondValue] = React.useState(\"10000\");\r\n\r\n  const handlePrice = (event, newValue) => {\r\n    setRange(newValue);\r\n    setFisrtValue(newValue[0]);\r\n    setSecondValue(newValue[1]);\r\n  };\r\n\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n    setHelperText(\" \");\r\n    setError(false);\r\n  };\r\n  var dispatch = useDispatch();\r\n  // console.log('data',props.history.location.state.brandid)\r\n  //console.log('props',props.location)\r\n  const fetchByBrand = async () => {\r\n    // console.log(\"sakdkhb\",props)\r\n    var body = { brandid: props.location.state.brandid };\r\n\r\n    var result = await postData(\"product/fetchbrandbyid\", body);\r\n    setProduct(result);\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      fetchByBrand();\r\n    },\r\n    [props]\r\n  );\r\n\r\n  const handleChangeQty = (item, value) => {\r\n    item[\"qtydemand\"] = value;\r\n    dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n    setCartRender(!cartRender);\r\n  };\r\n\r\n  const showAllProducts = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          padding: 5,\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {getProduct.map((item) => (\r\n          <div\r\n            style={{\r\n              width: 250,\r\n              padding: 10,\r\n              margin: 10,\r\n              border: \"1px solid #ecf0f1\",\r\n              backgroundColor: \"#FFF\",\r\n            }}\r\n          >\r\n            <img\r\n              src={ServerURL + \"/images/\" + item.picture}\r\n              width=\"100%\"\r\n              style={{ borderRadius: \"2%\", elevation: 20 }}\r\n              onClick={() =>\r\n                props.history.push({\r\n                  pathname: `/ProductView/${item.productid}`,\r\n                })\r\n              }\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: 5,\r\n                textAlign: \"center\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                lineHeight: 1.5,\r\n                color: \"#3f414d\",\r\n              }}\r\n            >\r\n              {item.productname.length > 45 ? (\r\n                <div>{item.productname.substring(0, 45) + \"....\"}</div>\r\n              ) : (\r\n                <div>\r\n                  <div>{item.productname}</div>\r\n                  <div>&nbsp;</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: 5,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                lineHeight: 1.5,\r\n                color: \"#3f414d\",\r\n              }}\r\n            >\r\n              {item.offerprice == 0 ? (\r\n                <div> &#8377;{item.price}</div>\r\n              ) : (\r\n                <div>\r\n                  {\" \"}\r\n                  <span style={{ textDecorationLine: \"line-through\" }}>\r\n                    {\" \"}\r\n                    &#8377;{item.price}\r\n                  </span>{\" \"}\r\n                  &#8377; {item.offerprice}{\" \"}\r\n                  <span style={{ color: \"#fc2779\", fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    &nbsp;Save &#8377;{item.offerprice}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <QtyCtrl\r\n                value={0}\r\n                onChange={(value) => handleChangeQty(item, value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function valuetext(value) {\r\n    return `${value}°C`;\r\n  }\r\n\r\n  const showFilter = () => {\r\n    return (\r\n      <div\r\n        className={classes.root1}\r\n        style={{ background: \"#fff\", border: \"1px solid #d1ccc0\" }}\r\n      >\r\n        <div style={{ fontSize: \"16px\", fontWeight: \"bold\", height: 35 }}>\r\n          {\" \"}\r\n          Filter\r\n        </div>\r\n        <div style={{ marginTop: \"2px\" }}>\r\n          <Typography\r\n            id=\"range-slider\"\r\n            gutterBottom\r\n            style={{ fontSize: \"14px\" }}\r\n          >\r\n            Price\r\n          </Typography>\r\n          <Slider\r\n            value={Range}\r\n            onChange={handlePrice}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"range-slider\"\r\n            getAriaValueText={valuetext}\r\n            style={{ color: \"#fc2779\" }}\r\n          />\r\n          <Grid container spacing={1}>\r\n            <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n              Min\r\n            </Grid>\r\n            <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n              Max\r\n            </Grid>\r\n            <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n              {getFisrtValue}\r\n            </Grid>\r\n            <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n              {getSecondValue}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <div style={{ marginTop: \"2px\" }}>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Sort By</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <FormControl\r\n                component=\"fieldset\"\r\n                error={error}\r\n                className={classes.formControl}\r\n              >\r\n                {/* <FormLabel component=\"legend\">Pop quiz: Material-UI is...</FormLabel> */}\r\n                <RadioGroup\r\n                  aria-label=\"quiz\"\r\n                  name=\"quiz\"\r\n                  value={value}\r\n                  onChange={handleRadioChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Law to High\"\r\n                    control={<Radio />}\r\n                    label=\"Law to High\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"High to Law\"\r\n                    control={<Radio />}\r\n                    label=\"High to Law\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Oldest to Newest\"\r\n                    control={<Radio />}\r\n                    label=\"Oldest to Newest\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Newest to Oldest\"\r\n                    control={<Radio />}\r\n                    label=\"Newest to Oldest\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        <div style={{ marginTop: \"1px\" }}>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Discount</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {/* <FormControl component=\"fieldset\" error={error} className={classes.formControl}> */}\r\n              {/* <FormLabel component=\"legend\">Pop quiz: Material-UI is...</FormLabel> */}\r\n              {/* <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={handleRadioChange}> */}\r\n\r\n              <div>\r\n                <div style={{ marginTop: 5 }}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"40% or more\"\r\n                    style={{ fontSize: \"16px\", color: \"#fc2779\" }}\r\n                  />\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"initial\",\r\n                      textAlign: \"center\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    40% or more\r\n                  </span>\r\n                </div>\r\n                <div style={{ marginTop: 5 }}>\r\n                  <input type=\"radio\" value=\"30% or more\" />\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"initial\",\r\n                      textAlign: \"center\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    30% or more\r\n                  </span>\r\n                </div>\r\n                <div style={{ marginTop: 5 }}>\r\n                  <input type=\"radio\" value=\"20% or more\" />\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"initial\",\r\n                      textAlign: \"center\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    20% or more\r\n                  </span>\r\n                </div>\r\n                <div style={{ marginTop: 5 }}>\r\n                  <input type=\"radio\" value=\"10% or more\" />\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"initial\",\r\n                      textAlign: \"center\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    10% or more\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <div style={{ fontSize: \"16px\", fontWeight: \"bold\", height: 35 }}>\r\n            Availability\r\n          </div>\r\n          <div style={{ marginRight: 122, width: \"100%\" }}>\r\n            <Checkbox\r\n              inputProps={{ \"aria-label\": \"uncontrolled-checkbox\" }}\r\n              style={{ color: \"red\" }}\r\n            />\r\n            in Stock\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainPage props={props} />\r\n\r\n      <Grid container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={4}\r\n          // style={{ background: \"#ebebeb\", height: \"200%\" }}\r\n        >\r\n          <Filter />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          // style={{ background: \"#ebebeb\", height: \"100%\" }}\r\n        >\r\n          {showAllProducts()}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Footer />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* <div style={{display:'flex',justifyContent:'flex-end',position:'fixed'}}>\r\n    <Footer/>\r\n    </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListProducts;\r\n","D:\\ecom\\src\\components\\ClientView\\ProductView.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React, { useEffect, useState, createRef } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { getData, postData, ServerURL } from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport QtyCtrl from \"./QtyCtrl\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { useParams } from \"react-router-dom\";\r\n//import Footer from \"../Footer/index\";\r\nimport MainPage from \"./MainPage\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport Place from \"@material-ui/icons/Place\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport renderHTML from \"react-render-html\";\r\nimport Image from \"react-image-resizer\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    //flexGrow: 1,\r\n    backgroundColor: \"#ffffff\",\r\n    padding: 0,\r\n  },\r\n  scardview: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  gridRoot: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    outline: \"none\",\r\n  },\r\n  productpictureMedia: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  mainGrid: {\r\n    // margin: 10,\r\n    // padding: 10\r\n  },\r\n  subGrid: {\r\n    padding: 2,\r\n    justifyContent: \"left\",\r\n    display: \"flex\",\r\n  },\r\n  mainDiv: {\r\n    width: window.innerWidth * 0.9,\r\n    margin: 20,\r\n    padding: 10,\r\n  },\r\n  productdiv: {\r\n    padding: 5,\r\n    fontSize: 15,\r\n  },\r\n}));\r\n\r\nexport default function ProductView(props) {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getProductPictureList, setProductPictureList] = useState([]);\r\n  const [getCount, setCount] = useState(false);\r\n  const [getStatus, setStatus] = useState(false);\r\n  const [getImage, setImage] = useState(\"\");\r\n  const [getPincode, setPincode] = useState(\"\");\r\n  const [getPinStatus, setPinStatus] = useState(false);\r\n  const [getmsgStatus, setmsgStatus] = useState(\"\");\r\n  const [getcolorpin, setcolorpin] = useState(\"red\");\r\n  const [getPincodeData, setPincodeData] = useState([]);\r\n  const [getOpacity, setOpacity] = useState(1);\r\n  const [getColor, setColor] = useState(\"green\");\r\n  const [getProductColor, setProductColor] = useState([]);\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const numberFormat = (value) =>\r\n    new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n    }).format(value);\r\n\r\n  useEffect(function () {\r\n    fetchProduct();\r\n    fetchProductPictures(params.pid);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  var sliderRef = createRef();\r\n  var settings = {\r\n    arrows: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 750,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n    // vertical: true,\r\n    // verticalSwiping: true,\r\n  };\r\n\r\n  const gotoNext = () => {\r\n    sliderRef.current.slickNext();\r\n  };\r\n  const gotoPrev = () => {\r\n    sliderRef.current.slickPrev();\r\n  };\r\n  const fetchProduct = async () => {\r\n    var list = await getData(\"product/fetchproductbyid/\" + params.pid);\r\n    setImage(list[0].picture);\r\n    setList(list[0]);\r\n  };\r\n\r\n  const fetchProductPictures = async (pid) => {\r\n    let body = { productid: pid };\r\n    var list = await postData(\"productpicture/productpicturedisplaybyid\", body);\r\n    if (list) {\r\n      if (list.length > 4) {\r\n        setStatus(true);\r\n      } else {\r\n        setStatus(false);\r\n      }\r\n      setProductPictureList(list);\r\n    }\r\n  };\r\n\r\n  const fetchProductColor = async (categoryid, modelid, brandid) => {\r\n    var list = await postData(\"product1/productitemsbycolor\", {\r\n      categoryid: categoryid,\r\n      modelid: modelid,\r\n      brandid: brandid,\r\n    });\r\n    setProductColor(list);\r\n  };\r\n\r\n  const CheckSession = async () => {\r\n    if (!localStorage.getItem(\"user\")) {\r\n      props.history.replace({ pathname: `/UserLogin` });\r\n    }\r\n  };\r\n  const Prebook = async () => {\r\n    CheckSession();\r\n    var user = JSON.parse(localStorage.getItem(\"user\"));\r\n    let cd = new Date();\r\n    const data = {\r\n      mobile: user.mobileno,\r\n      productid: getList.productid,\r\n      prebookdate:\r\n        cd.getFullYear() + \"/\" + (cd.getMonth() + 1) + \"/\" + cd.getDate(),\r\n      prebooktime: cd.getHours() + \":\" + cd.getMinutes(),\r\n    };\r\n    let result = await postData(\"prebook/add\", data);\r\n    if (result.status) {\r\n      alert(\"Order Submitted Successfully...\");\r\n    } else {\r\n      alert(\"Server Error!\");\r\n    }\r\n  };\r\n\r\n  //Count Cart Items//\r\n  const handleQtyChange = (value, item) => {\r\n    if (value >= 1 && value <= item.stock) {\r\n      item[\"qtydemand\"] = value;\r\n      dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n      setCount(!getCount);\r\n    } else if (value == 0) {\r\n      item[\"qtydemand\"] = value;\r\n      var list = getList;\r\n      list[\"cartstatus\"] = 0;\r\n      setList(list);\r\n      dispatch({ type: \"REMOVE_CART\", payload: [item.productid, item] });\r\n      setCount(!getCount);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  //ADD To Cart//\r\n  const AddToCart = (item) => {\r\n    item[\"qtydemand\"] = 1;\r\n    var list = getList;\r\n    list[\"cartstatus\"] = 1;\r\n    setList(list);\r\n    dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n    setCount(!getCount);\r\n  };\r\n\r\n  // Show Product Picture//\r\n  const showProductPicture = () => {\r\n    return getProductPictureList.map(function (item, key) {\r\n      return (\r\n        <div className={classes.gridRoot}>\r\n          <div\r\n            className={classes.gridRoot}\r\n            style={{\r\n              width: 70,\r\n              height: 70,\r\n              border: \"2px solid #dcdde1\",\r\n              borderRadius: 5,\r\n              margin: 2,\r\n              cursor: \"pointer\",\r\n            }}\r\n            onMouseEnter={() => setImage(item.productpicture)}\r\n          >\r\n            <Image\r\n              width={65}\r\n              height={65}\r\n              src={`${ServerURL}/images/${item.productpicture}`}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleProductColor = async (product, item) => {\r\n    let body = {\r\n      brandid: product.brandid,\r\n      modelid: product.modelid,\r\n      categoryid: product.categoryid,\r\n      color: item.color,\r\n    };\r\n    var list = await postData(\"product1/listdetailsbyproductcolor\", body);\r\n    setImage(list[0].picture);\r\n    setList(list[0]);\r\n    if (list[0].status == \"Coming Soon\" || list[0].status == \"Pre Booking\") {\r\n      setOpacity(0.3);\r\n    }\r\n    fetchProductPictures(item.productid);\r\n  };\r\n\r\n  const colorProduct = (product) => {\r\n    return getProductColor.map((item) => {\r\n      return (\r\n        <div\r\n          onClick={() => handleProductColor(product, item)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            margin: 10,\r\n            cursor: \"pointer\",\r\n            border: \"1px solid #ecf0f1\",\r\n            borderRadius: 5,\r\n            padding: 5,\r\n          }}\r\n        >\r\n          <div>\r\n            <Image\r\n              width={50}\r\n              height={50}\r\n              src={`${ServerURL}/images/${item.picture}`}\r\n            />\r\n          </div>\r\n          <div className={classes.productdiv}>\r\n            <b>{item.color}</b>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const showProductDetails = (item) => {\r\n    console.log(\"PRIIIIIIIIIIIIIII\", item);\r\n    if (item != null) {\r\n      var save = item.price - item.offerprice;\r\n\r\n      var discount = Math.ceil((save / item.price) * 100);\r\n      var status = true;\r\n      if (item.stock == 0) {\r\n        status = false;\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <Grid conatiner spacing={0}>\r\n            <Grid item xs={12} sm={12} style={{ fontSize: 20, padding: 5 }}>\r\n              <b>{item.productname}</b>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              M.R.P :{\" \"}\r\n              <s>\r\n                <b> {numberFormat(item.price)}</b>\r\n              </s>{\" \"}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              Price :{\" \"}\r\n              <big>\r\n                <b> {numberFormat(item.offerprice)}</b>\r\n              </big>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              You Save :{\" \"}\r\n              <b>\r\n                <font color=\"green\">{numberFormat(save)}</font>\r\n              </b>{\" \"}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              Inclusive of all taxes\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {status && getList.status != \"Coming Soon\" ? (\r\n                <>\r\n                  <div\r\n                    className={classes.productdiv}\r\n                    style={{ fontSize: 17, color: \"black\" }}\r\n                  >\r\n                    <b>Delivery</b>\r\n                  </div>\r\n                  <div className={classes.productdiv}>\r\n                    <FormControl>\r\n                      <Input\r\n                        id=\"input-with-icon-adornment\"\r\n                        startAdornment={\r\n                          <InputAdornment position=\"start\">\r\n                            <Place />\r\n                          </InputAdornment>\r\n                        }\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <div style={{ cursor: \"pointer\" }}>\r\n                              <font\r\n                                color=\"red\"\r\n                                size=\"2\"\r\n                                onClick={() => checkpincode(getPincode)}\r\n                              >\r\n                                <b>CHECK</b>\r\n                              </font>\r\n                            </div>\r\n                          </InputAdornment>\r\n                        }\r\n                        onChange={(event) => setPincode(event.target.value)}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div\r\n                    className={classes.productdiv}\r\n                    style={{ color: getcolorpin, fontSize: 13 }}\r\n                  >\r\n                    {getmsgStatus}\r\n                  </div>\r\n                  <div className={classes.productdiv} style={{ fontSize: 14 }}>\r\n                    <b>Usually delivered in 2-3 days</b>\r\n                    <br />\r\n                    Enter pincode for exact delivery dates\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              {item.stock == 0 ? (\r\n                <big>\r\n                  <b>\r\n                    <font color=\"red\">Not Available</font>\r\n                  </b>\r\n                </big>\r\n              ) : item.stock >= 1 && item.stock <= 3 ? (\r\n                <big>\r\n                  <b>\r\n                    <font color=\"green\">\r\n                      Limited Stock {item.stock} item Avaliable\r\n                    </font>\r\n                  </b>\r\n                </big>\r\n              ) : (\r\n                <big>\r\n                  <b>\r\n                    <font color=\"green\">In Stock</font>\r\n                  </b>\r\n                </big>\r\n              )}\r\n            </Grid>\r\n            {item.status == \"Coming Soon\" ? (\r\n              <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n                <big>\r\n                  <b>\r\n                    <font color=\"red\">Coming Soon</font>\r\n                  </b>\r\n                </big>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Grid item xs={12} sm={12} className={classes.productdiv}>\r\n              Inaugural Offer <b>Free Shipping</b>\r\n            </Grid>\r\n\r\n            <QtyCtrl\r\n              value={0}\r\n              onChange={(value) => handleQtyChange(value, item)}\r\n            />\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkpincode = async (locality) => {\r\n    setPincode(locality);\r\n    if (locality.length == 6) {\r\n      let body = { pincode: locality };\r\n      var list = await postData(\"statecityarea/checkpincode\", body);\r\n      setPincodeData(list);\r\n      //console.log('STATE CITY DATA = ', list);\r\n      if (list.length == 0) {\r\n        setmsgStatus(\"We are not deliver this product in your area\");\r\n        setcolorpin(\"red\");\r\n        //alert(\"We are not deliver this product in your area\")\r\n        await setPinStatus(false);\r\n      } else {\r\n        await setPinStatus(true);\r\n        setcolorpin(\"green\");\r\n        setmsgStatus(\"Delivery Available in Your Area\");\r\n      }\r\n    } else {\r\n      //if(locality.length==6)\r\n      //alert(\"Invalid Pin Code\")\r\n      setmsgStatus(\"Invalid Pin Code\");\r\n      setcolorpin(\"red\");\r\n      await setPinStatus(false);\r\n    }\r\n  };\r\n\r\n  const showDescription = (item) => {\r\n    var desc = item.description;\r\n    try {\r\n      if (item.description.length > 0) desc = item.description;\r\n    } catch (error) {\r\n      desc = \"\";\r\n    }\r\n\r\n    if (item != null) {\r\n      return (\r\n        <div>\r\n          <Divider style={{ padding: 0.5 }} />\r\n          <div style={{ fontSize: 20, padding: 10 }}>\r\n            <b>Description</b>\r\n          </div>\r\n          <div style={{ padding: \"20px 50px\", fontSize: 17 }}>\r\n            <b>{item.productname}</b>\r\n          </div>\r\n          <div style={{ padding: \"20px 50px\" }}>\r\n            <div style={{ pointerEvents: \"none\" }}>{renderHTML(desc)}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  var o = 1;\r\n  return (\r\n    <div className={classes.grow}>\r\n      {/* <MainPage history={props.history} /> */}\r\n      <MainPage props={props} />\r\n      <div className={classes.gridRoot}>\r\n        <div className={classes.mainDiv}>\r\n          <Grid container spacing={2} className={classes.mainGrid}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                <div\r\n                  className={classes.gridRoot}\r\n                  style={{\r\n                    width: 300,\r\n                    height: 300,\r\n                    margin: \"10px 5px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <Image\r\n                    width={260}\r\n                    height={260}\r\n                    src={`${ServerURL}/images/${getImage}`}\r\n                  />\r\n                </div>\r\n                {getStatus ? (\r\n                  <div className={classes.gridRoot}>\r\n                    <div style={{ marginLeft: 20 }}>\r\n                      <KeyboardArrowLeftIcon onClick={() => gotoPrev()} />\r\n                    </div>\r\n                    <div className={classes.gridRoot}>\r\n                      <div style={{ width: 325 }}>\r\n                        <Slider {...settings} ref={sliderRef}>\r\n                          {showProductPicture()}\r\n                        </Slider>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginRight: 20 }}>\r\n                      <KeyboardArrowRightIcon onClick={() => gotoNext()} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      padding: \"30px 10px\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {showProductPicture()}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              style={{\r\n                padding: \"20px 30px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              {showProductDetails(getList)}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} style={{ padding: 20 }}>\r\n              {showDescription(getList)}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      {/* <Footer history={props.history} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React from 'react'\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\n// //import './index.css'\r\n// const useStyles = makeStyles((theme) => ({\r\n//     main_div: {\r\n//       width:'100%',\r\n//       height:'100vh',\r\n//       display:'flex',\r\n//       flexDirection:'row',\r\n\r\n//       background: \"#ebebeb\",\r\n//     },\r\n\r\n//     center_div:{\r\n\r\n//       width:'25%',\r\n//       height:'65%',\r\n//       borderRadius:'10px',\r\n//       backgroundColor:'#fff',\r\n//       boxShadow:''\r\n//     },\r\n//     footerpaper: {\r\n//         height:'50%',\r\n//         width:'100%',\r\n//         background:'#fff',\r\n//         marginTop:10,\r\n//         marginLeft:10,\r\n//         marginRight:10,\r\n\r\n//       },\r\n//       root: {\r\n//         flexGrow: 1,\r\n//       },\r\n//       paper: {\r\n\r\n//         textAlign: 'center',\r\n//        // color: '#fff',\r\n//         height:'50%',\r\n//         width:'100%',\r\n//         background:'#fff',\r\n//         marginTop:10,\r\n//         marginLeft:20,\r\n//         marginRight:20,\r\n//       },\r\n\r\n//   }));\r\n\r\n// function ProductView() {\r\n//     const classes = useStyles()\r\n//         return (\r\n//             <div className={classes.main_div}>\r\n//            <Grid container spacing={3}>\r\n//         <Grid item xs={12}>\r\n//           <Paper className={classes.paper}>\r\n//               hggggggggggg\r\n//           </Paper>\r\n//         </Grid>\r\n//           </Grid>\r\n//           </div>\r\n\r\n//     )\r\n// }\r\n\r\n// export default ProductView\r\n","D:\\ecom\\src\\components\\ClientView\\SproductView.js",["452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { useEffect, useState, createRef } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { getData, postData, ServerURL } from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport QtyCtrl from \"./QtyCtrl\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function ProductView(props) {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState(null);\r\n  const [getProductPictureList, setProductPictureList] = useState([]);\r\n  const [cartRender, setCartRender] = useState(false);\r\n  var params = useParams();\r\n  var dispatch = useDispatch();\r\n  const numberFormat = (value) =>\r\n    new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n    }).format(value);\r\n\r\n  useEffect(function () {\r\n    fetchProduct();\r\n    fetchProductPictures(params.pid);\r\n  }, []);\r\n  const fetchProduct = async () => {\r\n    var list = await getData(\"product/fetchproductbyid/\" + params.pid);\r\n    console.log(\"IIIIITEM>>>>\", list);\r\n    setList(list[0]);\r\n  };\r\n\r\n  const fetchProductPictures = async (pid) => {\r\n    let body = { productid: pid };\r\n    var list = await postData(\"productpicture/productpicturedisplaybyid\", body);\r\n\r\n    setProductPictureList(list);\r\n  };\r\n  const handleChangeQty = (item, value) => {\r\n    item[\"qtydemand\"] = value;\r\n    dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n    setCartRender(!cartRender);\r\n  };\r\n\r\n  const showAllProducts = (item) => {\r\n    console.log(\"ITEM\", item);\r\n    return (\r\n      <div>\r\n        {item != null ? (\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <img\r\n                src={ServerURL + \"/images/\" + item.picture}\r\n                width=\"50%\"\r\n                style={{ borderRadius: \"2%\", elevation: 20 }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  padding: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"normal\",\r\n                  lineHeight: 1.5,\r\n                  color: \"#3f414d\",\r\n                }}\r\n              >\r\n                {item.productname.length > 45 ? (\r\n                  <div>{item.productname.substring(0, 45) + \"...\"}</div>\r\n                ) : (\r\n                  <div>\r\n                    <div>{item.productname}</div>\r\n                    <div>&nbsp;</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  padding: 5,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  fontSize: \"16px\",\r\n                  fontWeight: \"normal\",\r\n                  lineHeight: 1.5,\r\n                  color: \"#3f414d\",\r\n                }}\r\n              >\r\n                {item.offerprice == 0 ? (\r\n                  <div> &#8377;{item.price}</div>\r\n                ) : (\r\n                  <div>\r\n                    {\" \"}\r\n                    <span style={{ textDecorationLine: \"line-through\" }}>\r\n                      {\" \"}\r\n                      &#8377;{item.price}\r\n                    </span>{\" \"}\r\n                    &#8377; {item.offerprice}{\" \"}\r\n                    <span style={{ color: \"#fc2779\", fontWeight: \"bold\" }}>\r\n                      {\" \"}\r\n                      &nbsp;Save &#8377;{item.offerprice}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <QtyCtrl\r\n                  value={0}\r\n                  onChange={(value) => handleChangeQty(item, value)}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{showAllProducts(getList)}</div>;\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\Filter.js",["466","467","468","469","470","471"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainroot: {\r\n    width: \"280px\",\r\n    background: \"#FFF\",\r\n    position: \"sticky\",\r\n    top: 20,\r\n    bottom: 20,\r\n    paddingTop: \"40px\",\r\n    paddingBottom: \"40px\",\r\n    zIndex: 5,\r\n  },\r\n  root: {\r\n    position: \"relative\",\r\n    left: 50,\r\n    marginTop: 30,\r\n    width: \"auto\",\r\n  },\r\n  troot: {\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    background: \"white\", //#fc2779\r\n    height: \"auto\",\r\n    maxWidth: 400,\r\n    marginRight: 50,\r\n    elevation: 60,\r\n  },\r\n  input: {\r\n    padding: 800,\r\n    background: \"red\",\r\n  },\r\n  h2: {\r\n    textAlign: \"left\",\r\n    marginLeft: 15,\r\n    fontWeight: \"bold\",\r\n    fontSize: 16,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontWeight: \"bold\",\r\n  },\r\n  radio: {\r\n    color: \"#fc2779\",\r\n    fontSize: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function Filter() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"female\");\r\n  const [checked, setChecked] = React.useState(true);\r\n  const [Range, setRange] = React.useState([100, 10000]);\r\n  const [getFisrtValue, setFisrtValue] = React.useState(\"100\");\r\n  const [getSecondValue, setSecondValue] = React.useState(\"10000\");\r\n\r\n  const handleRadio = (event) => {\r\n    setValue(event.target.value);\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handlePrice = (event, newValue) => {\r\n    setRange(newValue);\r\n    setFisrtValue(newValue[0]);\r\n    setSecondValue(newValue[1]);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mainroot}>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper} variant=\"outlined\">\r\n          <h2 className={classes.h2}>Filters</h2>\r\n          <Divider style={{ height: 2 }} />\r\n          <h2 className={classes.h2}>Price</h2>\r\n\r\n          <div className={classes.troot}>\r\n            <Slider\r\n              min={0}\r\n              max={10000}\r\n              value={Range}\r\n              onChange={handlePrice}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              style={{ color: \"#fc2779\" }}\r\n            />\r\n            <Grid container spacing={1}>\r\n              <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n                Min\r\n              </Grid>\r\n              <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n                Max\r\n              </Grid>\r\n              <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n                {getFisrtValue}\r\n              </Grid>\r\n              <Grid xs={12} sm={6} style={{ fontSize: \"14px\" }}>\r\n                {getSecondValue}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Divider />\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Sort By</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  aria-label=\"gender\"\r\n                  name=\"gender1\"\r\n                  value={value}\r\n                  onChange={handleRadio}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"a\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"Low to High\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"b\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"High to Low\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"c\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"Oldest to Newest\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"d\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"Newest to Oldest\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Divider />\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Discount</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  aria-label=\"gender\"\r\n                  name=\"gender1\"\r\n                  value={value}\r\n                  onChange={handleRadio}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"e\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"40% or more\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"f\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"30% or more\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"g\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"20% or more\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"h\"\r\n                    control={<Radio className={classes.radio} />}\r\n                    label=\"10% or more\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Divider />\r\n          <div style={{ marginRight: \"247px\", marginTop: \"10px\" }}>\r\n            <Typography className={classes.h2}>Availability</Typography>\r\n          </div>\r\n          <div style={{ marginRight: 122 }}>\r\n            <Checkbox\r\n              inputProps={{ \"aria-label\": \"uncontrolled-checkbox\" }}\r\n              style={{ color: \"#fc2779\" }}\r\n            />\r\n            In Stock\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\ecom\\src\\components\\statecity\\StateCityArea.js",["472","473","474","475","476","477","478","479","480"],"import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { postData, postDataAndImage, ServerURL } from \"../FetchNodeServices\";\r\nimport { isEmpty } from \"../Checks\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  headingdiv: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"auto\",\r\n    padding: 3,\r\n    border: \"1 solid #000000\",\r\n  },\r\n  maindiv: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n\r\n    padding: 20,\r\n    marginTop: 20,\r\n    width: 600,\r\n    backgroundColor: \"#ecf0f1\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  large: {\r\n    width: 70,\r\n    height: 70,\r\n    margin: 5,\r\n    padding: 3,\r\n  },\r\n}));\r\n\r\nexport default function StateCityArea() {\r\n  const classes = useStyles();\r\n  const [getStateName, setStateName] = useState(\"\");\r\n  const [getErrorPic, setErrorPic] = useState({ sn: \"tp.png\" });\r\n  const [getMessage, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    var error = false;\r\n    var sn = isEmpty(getStateName);\r\n    if (sn.err) {\r\n      error = sn.err;\r\n    }\r\n    setErrorPic({ sn: sn.img });\r\n\r\n    if (!error) {\r\n      const body = { statename: getStateName };\r\n      var result = await postData(\"statecityarea/stateAdd\", body);\r\n      if (result) {\r\n        setMessage(\"Record Submtted....\");\r\n      } else {\r\n        setMessage(\"Fail to Record Submit\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.maindiv}>\r\n        <div className={classes.headingdiv}>\r\n          <h3>State</h3>\r\n        </div>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <img src={`/${getErrorPic.sn}`} />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"State Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={(event) => setStateName(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            xs={12}\r\n            sm={6}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            xs={12}\r\n            sm={6}\r\n          >\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <div\r\n          style={{\r\n            width: 550,\r\n            padding: 10,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          <b>{getMessage}</b>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\SignInClient.js",["481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { getData, ServerURL, postData } from \"../FetchNodeServices\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkMobile, checkRequire } from \"../Checks\";\r\nimport MainPage from \"../ClientView/MainPage\";\r\nimport Footer from \"../ClientView/Footer\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    // alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  formdiv: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#f1f2f6\",\r\n    flexDirection: \"column\",\r\n    width: 1000,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: \"2%\",\r\n  },\r\n\r\n  image: {\r\n    backgroundPosition: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n    fontSize: 32,\r\n    color: \"white\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#fc2779\",\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nfunction SignInClient(props) {\r\n  const classes = useStyles();\r\n\r\n  var dispatch = useDispatch();\r\n\r\n  const [getMobile, setMobile] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getOTPMsg, setOTPMsg] = useState(\"\");\r\n  const [getOTP, setOTP] = useState(\"\");\r\n  const [getGOTP, setGOTP] = useState(\"\");\r\n  const [getUserStatus, setUserStatus] = useState(\"\");\r\n  const [getUser, setUser] = useState(\"\");\r\n  const SignInForm = () => {\r\n    return (\r\n      <div>\r\n        <h1>Hello world</h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n\r\n    if (getMobile.length == 0) {\r\n      err = true;\r\n      setMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your mobile no!</i>\r\n        </font>\r\n      );\r\n    } else if (!checkMobile(getMobile)) {\r\n      err = true;\r\n      setMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter valid mobile no!</i>\r\n        </font>\r\n      );\r\n    } else if (checkMobile(getMobile)) {\r\n      setMsg(\"\");\r\n    }\r\n\r\n    if (!err) {\r\n      var body = { mobileno: getMobile };\r\n      var result = await postData(\"userdetail/checkuserrecord\", body);\r\n      console.log(\"RESSSSSSULT\", result.result);\r\n      setUser(result);\r\n      dispatch({ type: \"ADD_USER\", payload: [getMobile, result.DATA] });\r\n\r\n      if (result.RESULT == \"NOT FOUND\") {\r\n        setUserStatus(false);\r\n        props.history.push({ pathname: `/SignInUserForm` }, getMobile);\r\n      } else if (result.RESULT == \"FOUND\") {\r\n        otpCallback();\r\n        setUserStatus(true);\r\n        // props.history.push({pathname:`/ShowCartWithAddress`},{'data':result.data,'mobileno':getMobile});\r\n      } else {\r\n        alert(\"SERVER ERROR\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const otpCallback = async () => {\r\n    let otp = parseInt(Math.random() * 9999) + 1000;\r\n    //  let body = { otp: otp, mob: props.location.state };\r\n    //   let result = await postData(\"smsapi/sendotp\", body);\r\n    //  if (result.result) {\r\n    //    alert(result.result);\r\n    setGOTP(otp);\r\n    alert(otp);\r\n    //}\r\n  };\r\n\r\n  const handleVerify = () => {\r\n    if (!checkRequire(getOTP)) {\r\n      setOTPMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter OTP</i>\r\n        </font>\r\n      );\r\n    } else {\r\n      if (getOTP == getGOTP) {\r\n        props.history.push(\r\n          { pathname: `/ShowCartWithAddress` }\r\n          // { data: getUser.DATA, mobileno: getMobile }\r\n        );\r\n      } else {\r\n        setOTPMsg(\r\n          <font color=\"red\" size=\"2\">\r\n            <i>Invalid OTP</i>\r\n          </font>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainPage props={props} />\r\n      <div className={classes.root}>\r\n        <div className={classes.formdiv}>\r\n          <Grid container component=\"main\" spacing={3} className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              style={{\r\n                backgroundColor: \"#FFFFFF\",\r\n                display: \"flex\",\r\n                padding: 10,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <img src=\"/jhanvi.jpg\" height=\"130%\" width=\"100%\" />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              style={{ backgroundColor: \"#FFFFFF\", padding: 20 }}\r\n            >\r\n              <h1>Sign In</h1>\r\n              <h4>Sign in to access your Orders, Offers and Wishlist.</h4>\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"mobile\"\r\n                placeholder=\"Enter your mobile no\"\r\n                name=\"mobile\"\r\n                autoComplete=\"mobile\"\r\n                autoFocus\r\n                size=\"small\"\r\n                value={getMobile}\r\n                onChange={(event) => {\r\n                  setMobile(event.target.value);\r\n                }}\r\n              />\r\n              {getMsg}\r\n\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Button\r\n                  //type=\"submit\"\r\n                  color=\"primary\"\r\n                  //className={classes.submit}\r\n                  //display= 'flex'\r\n                  //flexDirection= 'column'\r\n                  //alignItems= 'center'\r\n                  //onClick={<a href=\"/Mainpage\">View React Commits</a>}\r\n                  onClick={() => handleSubmit()}\r\n                >\r\n                  <Avatar className={classes.blue}>\r\n                    {/*<a href=\"/SignInUserForm\" style={{ textDecoration: 'none' }} >*/}\r\n                    <font color=\"white\" size=\"6\">\r\n                      &gt;\r\n                    </font>\r\n                    {/*</a>*/}\r\n                  </Avatar>\r\n                </Button>\r\n              </Grid>\r\n\r\n              {getUserStatus ? (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <h2>Verify</h2>\r\n                    <small>\r\n                      We have sent 6 digit OTP on{\" \"}\r\n                      <font size=\"2\">\r\n                        <b>+{props.location.state}</b>\r\n                      </font>\r\n                      <font color=\"red\" style={{ paddingLeft: \"230px\" }}>\r\n                        Change\r\n                      </font>\r\n                    </small>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"otp\"\r\n                      placeholder=\"Enter your OTP\"\r\n                      name=\"otp\"\r\n                      //autoComplete=\"email\"\r\n                      autoFocus\r\n                      size=\"small\"\r\n                      onChange={(event) => {\r\n                        setOTP(event.target.value);\r\n                      }}\r\n                    />\r\n                    {getOTPMsg}\r\n                    <small style={{ paddingLeft: \"350px\" }}>\r\n                      <font color=\"red\">Resend OTP</font>\r\n                    </small>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      onClick={() => handleVerify()}\r\n                    >\r\n                      Verify\r\n                    </Button>\r\n                    {\r\n                      //getMsg\r\n                    }\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <small>\r\n            By continuing you agree to our&nbsp;\r\n            <font color=\"red\"> Terms of service</font>&nbsp;\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            and<font color=\"red\">&nbsp; Privacy & Legal Policy.</font>\r\n          </small>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInClient;\r\n","D:\\ecom\\src\\components\\ClientView\\SignInUserForm.js",["498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport { postData, getData, ServerURL } from \"../FetchNodeServices\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport MainPage from \"../ClientView/MainPage\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainroot: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    // alignItems: 'center',\r\n    paddingTop: 20,\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n    fontSize: 32,\r\n  },\r\n}));\r\n\r\nfunction SignInUserForm(props) {\r\n  const classes = useStyles();\r\n  const [getFirstName, setFirstName] = useState(\"\");\r\n  const [getLastName, setLastName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getOTP, setOTP] = useState(\"\");\r\n  const [getGOTP, setGOTP] = useState(\"\");\r\n  const [getFirstNameMsg, setFirstNameMsg] = useState(\"\");\r\n  const [getLastNameMsg, setLastNameMsg] = useState(\"\");\r\n  const [getEmailMsg, setEmailMsg] = useState(\"\");\r\n  const [getPasswordMsg, setPasswordMsg] = useState(\"\");\r\n  const [getConfirmPasswordMsg, setConfirmPasswordMsg] = useState(\"\");\r\n  const [getOTPMsg, setOTPMsg] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getUser, setUser] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const otpCallback = async () => {\r\n    let otp = parseInt(Math.random() * 9999) + 1000;\r\n    //  let body = { otp: otp, mob: props.location.state };\r\n    //  let result = await postData(\"smsapi/sendotp\", body);\r\n    //  if (result.result) {\r\n    alert(otp);\r\n    setGOTP(otp);\r\n    //  }\r\n  };\r\n\r\n  useEffect(function () {\r\n    otpCallback();\r\n  }, []);\r\n\r\n  const [values, setValues] = React.useState({\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const [CPvalues, setCPValues] = React.useState({\r\n    confirmPassword: \"\",\r\n    showConfirmPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  ////////////////////////////\r\n  const handleChangeCP = (prop) => (event) => {\r\n    setCPValues({ ...CPvalues, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setCPValues({\r\n      ...CPvalues,\r\n      showConfirmPassword: !CPvalues.showConfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownConfirmPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  {\r\n    /*const handleSubmit=()=>{\r\n  if(values.password==CPvalues.confirmPassword)\r\n  {alert('matched')}\r\n  else\r\n  {alert('not matched')}\r\n}*/\r\n  }\r\n\r\n  const fetchUserData = async (mobileno) => {\r\n    dispatch({ type: \"REMOVE_USER\", payload: [] });\r\n    var body = { mobileno: mobileno };\r\n    var result = await postData(\"userdetail/checkuserrecord\", body);\r\n    setUser(result);\r\n    dispatch({ type: \"ADD_USER\", payload: [mobileno, result.DATA] });\r\n    props.history.push({ pathname: `/ShowCartWithAddress` });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setFirstNameMsg(\"\");\r\n    setLastNameMsg(\"\");\r\n    setEmailMsg(\"\");\r\n    setPasswordMsg(\"\");\r\n    setConfirmPasswordMsg(\"\");\r\n    setOTPMsg(\"\");\r\n\r\n    var err = false;\r\n    if (!checkRequire(getFirstName)) {\r\n      err = true;\r\n      setFirstNameMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your First Name</i>\r\n        </font>\r\n      );\r\n    } else if (!checkRequire(getLastName)) {\r\n      err = true;\r\n      setLastNameMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your Last Name</i>\r\n        </font>\r\n      );\r\n    } else if (getEmail.length == 0) {\r\n      err = true;\r\n      setEmailMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your Email Id</i>\r\n        </font>\r\n      );\r\n    } else if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setEmailMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Invalid Email Id</i>\r\n        </font>\r\n      );\r\n    } else if (values.password.length == 0) {\r\n      err = true;\r\n      setPasswordMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your Password</i>\r\n        </font>\r\n      );\r\n    } else if (!checkPassword(values.password)) {\r\n      err = true;\r\n      setPasswordMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>\r\n            Password must be alphanumeric and between 8-20 characters! Allowed\r\n            special characters are !@#$%^&*\r\n          </i>\r\n        </font>\r\n      );\r\n    } else if (CPvalues.confirmPassword.length == 0) {\r\n      err = true;\r\n      setConfirmPasswordMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please re-enter your password</i>\r\n        </font>\r\n      );\r\n    } else if (!checkPassword(CPvalues.confirmPassword)) {\r\n      err = true;\r\n      setConfirmPasswordMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>\r\n            Password must be alphanumeric and between 8-20 characters! Allowed\r\n            special characters are !@#$%^&*\r\n          </i>\r\n        </font>\r\n      );\r\n    } else if (!checkRequire(getOTP)) {\r\n      err = true;\r\n      setOTPMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter OTP</i>\r\n        </font>\r\n      );\r\n    } else if (values.password != CPvalues.confirmPassword) {\r\n      err = true;\r\n      setConfirmPasswordMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>\r\n            Confirm password you entered doesnot match to your original password\r\n          </i>\r\n        </font>\r\n      );\r\n    }\r\n\r\n    if (!err) {\r\n      if (getGOTP == getOTP) {\r\n        let body = {\r\n          mobileno: props.location.state,\r\n          firstname: getFirstName,\r\n          lastname: getLastName,\r\n          emailaddress: getEmail,\r\n          password: values.password,\r\n        };\r\n        console.log(body);\r\n        var result = await postData(\"userdetail/addnewrecord\", body);\r\n\r\n        if (result) {\r\n          fetchUserData(props.location.state);\r\n\r\n          //   props.history.push(\r\n          //     { pathname: `/ShowCartWithAddress` },\r\n          //     { data: getUser.DATA, mobileno: props.location.state }\r\n          //   );\r\n        } else {\r\n          setMsg(\"Fail to submit Record ..\");\r\n        }\r\n      } else {\r\n        alert(\"Invalid OTP\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainPage props={props} />\r\n\r\n      <div className={classes.mainroot}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            padding: 20,\r\n            borderRadius: \"2%\",\r\n            background: \"#FFFFFF\",\r\n          }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} sm={6}>\r\n              <img\r\n                src=\"/jhanvi2.jpg\"\r\n                style={{ borderRadius: 10 }}\r\n                width=\"97%\"\r\n                height=\"100%\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <h1>Sign Up</h1>\r\n                  <h4>Please enter your details.</h4>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstname\"\r\n                    placeholder=\"Your First Name\"\r\n                    name=\"firstname\"\r\n                    //autoComplete=\"email\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      setFirstName(event.target.value);\r\n                    }}\r\n                  />\r\n                  {getFirstNameMsg}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastname\"\r\n                    placeholder=\"Your Last Name\"\r\n                    name=\"lastname\"\r\n                    //autoComplete=\"email\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      setLastName(event.target.value);\r\n                    }}\r\n                  />\r\n                  {getLastNameMsg}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    placeholder=\"Enter your Email Id\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                  />\r\n                  {getEmailMsg}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth=\"true\" size=\"small\">\r\n                    {/*<InputLabel htmlFor=\"outlined-adornment-password\"></InputLabel>*/}\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      type={values.showPassword ? \"text\" : \"password\"}\r\n                      value={values.password}\r\n                      placeholder=\"Enter your Password\"\r\n                      onChange={handleChange(\"password\")}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                              <VisibilityOff />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      //labelWidth={70}\r\n                    />\r\n                  </FormControl>\r\n                  <small>\r\n                    Use 8 or more characters with a mix of letters & numbers\r\n                  </small>\r\n                  <br />\r\n                  {getPasswordMsg}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth=\"true\" size=\"small\">\r\n                    {/*<InputLabel htmlFor=\"outlined-adornment-password\"></InputLabel>*/}\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      type={\r\n                        CPvalues.showConfirmPassword\r\n                          ? \"text\"\r\n                          : \"confirmPassword\"\r\n                      }\r\n                      value={CPvalues.confirmPassword}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleChangeCP(\"confirmPassword\")}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowConfirmPassword}\r\n                            onMouseDown={handleMouseDownConfirmPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {CPvalues.showConfirmPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                              <VisibilityOff />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      //labelWidth={70}\r\n                    />\r\n                    {getConfirmPasswordMsg}\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <h4>\r\n                    <img src=\"/whatsapp.jpg\" width=\"30\" height=\"30\" />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Enable order updates and important\r\n                    information on Whatsapp\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox name=\"checkedC\" />} />\r\n                  </h4>\r\n                  <Divider orientation=\"horizontal\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <h2>Verify</h2>\r\n                  <small>\r\n                    We have sent 6 digit OTP on{\" \"}\r\n                    <font size=\"2\">\r\n                      <b>+{props.location.state}</b>\r\n                    </font>\r\n                    <font color=\"red\" style={{ paddingLeft: \"230px\" }}>\r\n                      Change\r\n                    </font>\r\n                  </small>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter your OTP\"\r\n                    name=\"otp\"\r\n                    //autoComplete=\"email\"\r\n                    autoFocus\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      setOTP(event.target.value);\r\n                    }}\r\n                  />\r\n                  {getOTPMsg}\r\n                  <small style={{ paddingLeft: \"350px\" }}>\r\n                    <font color=\"red\">Resend OTP</font>\r\n                  </small>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    color=\"secondary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  {getMsg}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: 20,\r\n            }}\r\n          >\r\n            <small>\r\n              By continuing you agree to our&nbsp;\r\n              <font color=\"red\"> Terms of service</font>&nbsp;\r\n              <br />\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              and<font color=\"red\">&nbsp; Privacy & Legal Policy.</font>\r\n            </small>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInUserForm;\r\n","D:\\ecom\\src\\components\\ClientView\\ShowCartWithAddress.js",["520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getData, ServerURL, postData } from \"../FetchNodeServices\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MainPage from \"../ClientView/MainPage\";\r\nimport Footer from \"./Footer\";\r\nimport clsx from \"clsx\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport { StaticRouter } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  maindiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    width: 700,\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  papercoupon: {\r\n    padding: theme.spacing(1),\r\n    width: 400,\r\n    backgroundColor: \"#FFFFFF\",\r\n    padding: 10,\r\n  },\r\n\r\n  paperpayment: {\r\n    padding: theme.spacing(1),\r\n    width: 400,\r\n    backgroundColor: \"#FFFFFF\",\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    height: 50,\r\n  },\r\n  list: {\r\n    width: 350,\r\n    padding: 30,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function ShowCartWithAddress(props) {\r\n  const classes = useStyles();\r\n  const [getAddress1Msg, setAddress1Msg] = useState(\"\");\r\n  const [getAddress2Msg, setAddress2Msg] = useState(\"\");\r\n  const [getCityMsg, setCityMsg] = useState(\"\");\r\n  const [getStateMsg, setStateMsg] = useState(\"\");\r\n  const [getAddress1, setAddress1] = useState(\"\");\r\n  const [getAddress2, setAddress2] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getStates, setStates] = useState(\"\");\r\n  const [getZipcode, setZipcode] = useState(\"\");\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [getCount, setCount] = useState();\r\n  var dispatch = useDispatch();\r\n  var data = useSelector((state) => state.user);\r\n\r\n  var userdata = Object.values(data);\r\n  console.log(\"VAlue User\", userdata);\r\n  const [getUserData, setUserData] = useState(userdata[0]);\r\n  var cart = useSelector((state) => state.data);\r\n  var length = Object.keys(cart).length;\r\n  var cartitems = Object.values(cart);\r\n  //var total=cartitems.reduce((a,b)=>a+b.price,0);\r\n  var total = cartitems.reduce(calculate, 0);\r\n  function calculate(a, b) {\r\n    var price =\r\n      b.offerprice == 0 ? b.price * b.qtydemand : b.offerprice * b.qtydemand;\r\n    return a + price;\r\n  }\r\n\r\n  var totalsaving = cartitems.reduce(calculatesavings, 0);\r\n  function calculatesavings(a, b) {\r\n    var price = b.price - b.offerprice;\r\n    price = price * b.qtydemand;\r\n    return a + price;\r\n  }\r\n\r\n  console.log(\"xxxxxxxx\", total);\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const handleSubmit = async () => {\r\n    setAddress1Msg(\"\");\r\n    setAddress2Msg(\"\");\r\n    setCityMsg(\"\");\r\n    setStateMsg(\"\");\r\n\r\n    var err = false;\r\n    if (!checkRequire(getAddress1)) {\r\n      err = true;\r\n      setAddress1Msg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your Address</i>\r\n        </font>\r\n      );\r\n    } else if (!checkRequire(getAddress2)) {\r\n      err = true;\r\n      setAddress2Msg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your Address</i>\r\n        </font>\r\n      );\r\n    } else if (getCity.length == 0) {\r\n      err = true;\r\n      setCityMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your City</i>\r\n        </font>\r\n      );\r\n    } else if (!checkRequire(getStates)) {\r\n      err = true;\r\n      setStateMsg(\r\n        <font color=\"red\" size=\"2\">\r\n          <i>Please enter your State</i>\r\n        </font>\r\n      );\r\n    }\r\n    if (!err) {\r\n      let body = {\r\n        address1: getAddress1,\r\n        address2: getAddress2,\r\n        zipcode: getZipcode,\r\n        city: getCity,\r\n        state: getStates,\r\n        mobileno: getUserData[0].mobileno,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"userdetail/addAddress\", body);\r\n      if (result.RESULT) {\r\n        body = { mobileno: getUserData[0].mobileno };\r\n        var user = await postData(\"userdetail/checkuserrecord\", body);\r\n        setUserData(user.DATA);\r\n      }\r\n    }\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div style={{ fontSize: 16, padding: 5 }}>\r\n        <b>Enter Your Address....</b>\r\n      </div>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"address1\"\r\n        placeholder=\"Address 1\"\r\n        name=\"address1\"\r\n        autoComplete=\"address\"\r\n        autoFocus\r\n        size=\"small\"\r\n        onChange={(event) => {\r\n          setAddress1(event.target.value);\r\n        }}\r\n      />\r\n      {getAddress1Msg}\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"address1\"\r\n        placeholder=\"Address 2\"\r\n        name=\"address1\"\r\n        autoComplete=\"address\"\r\n        autoFocus\r\n        size=\"small\"\r\n        onChange={(event) => {\r\n          setAddress2(event.target.value);\r\n        }}\r\n      />\r\n      {getAddress2Msg}\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"zipcode\"\r\n        placeholder=\"zipcode\"\r\n        name=\"zipcode\"\r\n        autoComplete=\"zipcode\"\r\n        autoFocus\r\n        size=\"small\"\r\n        onChange={(event) => {\r\n          setZipcode(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"city\"\r\n        placeholder=\"City\"\r\n        name=\"city\"\r\n        autoComplete=\"city\"\r\n        autoFocus\r\n        size=\"small\"\r\n        onChange={(event) => {\r\n          setCity(event.target.value);\r\n        }}\r\n      />\r\n      {getCityMsg}\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"city\"\r\n        placeholder=\"State\"\r\n        name=\"state\"\r\n        autoComplete=\"state\"\r\n        autoFocus\r\n        size=\"small\"\r\n        onChange={(event) => {\r\n          setStates(event.target.value);\r\n        }}\r\n      />\r\n      {getStateMsg}\r\n      <div>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          endIcon={<Icon>send</Icon>}\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          <div style={{ fontSize: 14, fontWeight: \"bold\" }}>Save Address</div>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleQtyChange = (value, item, key) => {\r\n    if (value == 0) {\r\n      item[\"qtydemand\"] = value;\r\n      // var list=getListTop\r\n      //list[key]['cartstatus']=0\r\n      //setListTop(list)\r\n      dispatch({ type: \"REMOVE_ITEM\", payload: [item.productid, item] });\r\n      setCount(value); //only rendring\r\n    } else {\r\n      item[\"qtydemand\"] = value;\r\n      dispatch({ type: \"ADD_CART\", payload: [item.productid, item] });\r\n      setCount(value); //only rendring\r\n    }\r\n  };\r\n\r\n  const ShowCartItems = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.maindiv}>\r\n          <div className={classes.paper}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <b>ORDER SUMMARY ({length} item(s))</b>\r\n              </Grid>\r\n              <Grid\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n              >\r\n                {\r\n                  <b>\r\n                    <span>&#8377;</span>\r\n                    {total}\r\n                  </b>\r\n                }\r\n              </Grid>\r\n\r\n              {cartitems.map((item, key) => (\r\n                <>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <img\r\n                      src={`${ServerURL}/images/${item.picture}`}\r\n                      width=\"60\"\r\n                      height=\"60\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                    item\r\n                    xs={12}\r\n                    sm={4}\r\n                  >\r\n                    <div style={{ padding: 5 }}>{item.productname}</div>\r\n                    {item.offerprice != 0 ? (\r\n                      <div style={{ padding: 5 }}>\r\n                        <b>\r\n                          <span>&#8377;</span>\r\n                          {item.offerprice * item.qtydemand}\r\n                        </b>{\" \"}\r\n                        <s>\r\n                          <span>&#8377;</span>\r\n                          {item.price}\r\n                        </s>{\" \"}\r\n                        <strong style={{ color: \"#27ae60\" }}>\r\n                          You save<span>&#8377;</span>&nbsp;\r\n                          {item.price - item.offerprice}\r\n                        </strong>\r\n                      </div>\r\n                    ) : (\r\n                      <div style={{ padding: 5 }}>\r\n                        <b>\r\n                          <span>&#8377;</span>\r\n                          {item.price * item.qtydemand}\r\n                        </b>\r\n                      </div>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    item\r\n                    xs={12}\r\n                    sm={4}\r\n                  >\r\n                    Qty:{item.qtydemand}\r\n                  </Grid>\r\n                </>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ShowCoupon = () => {\r\n    return (\r\n      <div className={classes.root} style={{ flexDirection: \"column\" }}>\r\n        <div className={classes.maindiv}>\r\n          <div className={classes.papercoupon}>\r\n            <div style={{ fontSize: 16, padding: 5 }}>\r\n              <b>Apply Coupon</b>\r\n            </div>\r\n            <div style={{ fontSize: 14, padding: 5 }}>\r\n              <a href=\"#\">Log in</a> to see best offers and cashback deals\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.maindiv}>\r\n          <div className={classes.paperpayment}>\r\n            <div style={{ fontSize: 16, padding: 5 }}>\r\n              <b>Payment Details</b>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                fontSize: 14,\r\n                padding: 5,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                MRP Total\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                <span>&#8377;</span> {total}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                fontSize: 14,\r\n                padding: 5,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                Product Discount\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                <span>&#8377; </span>\r\n                {totalsaving}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                fontSize: 14,\r\n                padding: 5,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                Total Amount\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                <span>&#8377;</span> {total - totalsaving}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                fontSize: 14,\r\n                padding: 5,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: 200,\r\n                }}\r\n              >\r\n                <b>\r\n                  <font color=\"green\">\r\n                    You save <span>&#8377;</span> {totalsaving}\r\n                  </font>\r\n                </b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ShowAddress = () => {\r\n    //  alert(getUserData[0].addressstatus == \"0\");\r\n    if (getUserData[0].addressstatus == \"0\") {\r\n      return (\r\n        <div className={classes.root}>\r\n          <div className={classes.maindiv}>\r\n            <div className={classes.paper}>\r\n              <div style={{ fontSize: 16, padding: 5 }}>\r\n                <b>Delivery Address</b>\r\n              </div>\r\n              <div style={{ fontSize: 14, padding: 5 }}>\r\n                {getUserData[0].firstname} {getUserData[0].lastname}\r\n                <br />\r\n              </div>\r\n              <div style={{ fontSize: 14, padding: 5 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<Icon>send</Icon>}\r\n                  onClick={toggleDrawer(\"right\", true)}\r\n                >\r\n                  <div style={{ fontSize: 14, fontWeight: \"bold\" }}>\r\n                    Add Address\r\n                  </div>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <div className={classes.maindiv}>\r\n            <div className={classes.paper}>\r\n              <div style={{ fontSize: 16, padding: 5 }}>\r\n                <b>Delivery Address</b>\r\n              </div>\r\n              <div style={{ fontSize: 14, padding: 5 }}>\r\n                {getUserData[0].firstname} {getUserData[0].lastname}\r\n                <br />\r\n                {getUserData[0].address1}\r\n                <br />\r\n                {getUserData[0].address2}\r\n                <br />\r\n                {getUserData[0].city} {getUserData[0].state}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePayment = () => {\r\n    /* var user_data={'mobileno':getUserData[0].mobileno,\r\n  'emailid':getUserData[0].emailid,'username':getUserData[0].firstname+\" \"+getUserData[0].lastname,\r\n  'deliveryaddress':getUserData[0].address1+\"<br/>\"+getUserData[0].address2+\"<br/>\"+getUserData[0].city+\",\"+getUserData[0].state+\"<br/>\"+getUserData[0].zipcode+\"<br/>\"}\r\n*/\r\n    dispatch({\r\n      type: \"ADD_USER\",\r\n      payload: [getUserData[0].mobileno, getUserData[0]],\r\n    });\r\n    props.history.push({ pathname: \"PaymentGateway\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainPage props={props} />\r\n      <div style={{ padding: 30 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {ShowAddress()}\r\n            {ShowCartItems()}\r\n          </Grid>\r\n          <Grid\r\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n          >\r\n            {ShowCoupon()}\r\n          </Grid>\r\n          {getUserData[0].addressstatus ? (\r\n            <Grid\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                padding: 20,\r\n              }}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ width: 200 }}\r\n                onClick={() => handlePayment()}\r\n              >\r\n                Make Payment\r\n              </Button>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n\r\n      <React.Fragment key={\"right\"}>\r\n        <SwipeableDrawer\r\n          anchor={\"right\"}\r\n          open={state[\"right\"]}\r\n          onClose={toggleDrawer(\"right\", false)}\r\n          onOpen={toggleDrawer(\"right\", true)}\r\n        >\r\n          {list(\"right\")}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\ecom\\src\\components\\ClientView\\PaymentGateway.js",["540","541","542","543","544","545","546"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { postData } from '../../FetchService';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  icon: {\r\n    margin: theme.spacing.unit,\r\n    fontSize: 32,\r\n  },\r\n  margin: {\r\n    marginRight: \"80%\",\r\n    paddingLeft: \"\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n\r\n  rightIcon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nconst PaymentGateway = (props) => {\r\n  var dispatch = useDispatch();\r\n  var data = useSelector((state) => state.user);\r\n\r\n  var userdata = Object.values(data);\r\n  console.log(\"VAlue User\", userdata);\r\n  const [getUserData, setUserData] = useState(userdata[0]);\r\n\r\n  var cart = useSelector((state) => state.data);\r\n  var length = Object.keys(cart).length;\r\n  var cartitems = Object.values(cart);\r\n  //var total=cartitems.reduce((a,b)=>a+b.price,0);\r\n  var total = cartitems.reduce(calculate, 0);\r\n  function calculate(a, b) {\r\n    var price =\r\n      b.offerprice == 0 ? b.price * b.qtydemand : b.offerprice * b.qtydemand;\r\n    return a + price;\r\n  }\r\n\r\n  var totalsaving = cartitems.reduce(calculatesavings, 0);\r\n  function calculatesavings(a, b) {\r\n    var price = b.price - b.offerprice;\r\n    price = price * b.qtydemand;\r\n    return a + price;\r\n  }\r\n\r\n  // const handleRazorpay=async(id)=>{\r\n  //     let body={name:getName,\r\n  //     email:getEmail,\r\n  //     mobile:getMobile,\r\n  //     amount: props.invoice_total/100,\r\n  //     razorpayid:id\r\n  //     }\r\n  //     let result=await postData('userpayment/addnew',body)\r\n  //     alert(result)\r\n  // }\r\n\r\n  const options = {\r\n    key: \"rzp_test_GQ6XaPC6gMPNwH\",\r\n    amount: total, //  = INR 1\r\n    name: \"CSEP Campusshala Education Pvt. Ltd.\",\r\n    // description: 'some description',\r\n    image:\r\n      \"https://i.pinimg.com/originals/d1/d2/66/d1d26618a7876afa7b99f2afebf6c790.jpg\",\r\n    handler: function (response) {\r\n      // handleRazorpay(response.razorpay_payment_id)\r\n      // props.addnewrecord()\r\n      alert(response.razorpay_payment_id);\r\n    },\r\n    prefill: {\r\n      name: getUserData[0].firstname + \" \" + getUserData[0].lastname,\r\n      contact: getUserData[0].mobileno,\r\n      email: getUserData[0].emailaddress,\r\n    },\r\n    notes: {\r\n      address: \"some address\",\r\n    },\r\n    theme: {\r\n      color: \"blue\",\r\n      hide_topbar: false,\r\n    },\r\n  };\r\n\r\n  const openPayModal = () => {\r\n    var rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          // size=\"large\"\r\n          // className={classes.button}\r\n          onClick={openPayModal}\r\n        >\r\n          <h3>Proceed to Pay</h3>\r\n        </Button>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PaymentGateway);\r\n\r\n// class Checkout extends React.Component {\r\n//     state = {\r\n//       amount: 0\r\n//     };\r\n\r\n//     constructor() {\r\n//       super()\r\n//       this.changeAmount = this.changeAmount.bind(this);\r\n//       this.openCheckout = this.openCheckout.bind(this);\r\n//     }\r\n\r\n//     changeAmount(e) {\r\n//       this.setState({amount: e.target.value})\r\n//     }\r\n\r\n//     openCheckout() {\r\n//       let options = {\r\n//         \"key\": \"rzp_live_Bwt8dZqpBj6XvO\",\r\n//         \"amount\": this.state.amount, // 2000 paise = INR 20, amount in paisa\r\n//         \"name\": \"Merchant Name\",\r\n//         \"description\": \"Purchase Description\",\r\n//         \"image\": \"/your_logo.png\",\r\n//         \"handler\": function (response){\r\n//           alert(response.razorpay_payment_id);\r\n//         },\r\n//         \"prefill\": {\r\n//           \"name\": \"Harshil Mathur\",\r\n//           \"email\": \"harshil@razorpay.com\"\r\n//         },\r\n//         \"notes\": {\r\n//           \"address\": \"Hello World\"\r\n//         },\r\n//         \"theme\": {\r\n//           \"color\": \"#F37254\"\r\n//         }\r\n//       };\r\n\r\n//       let rzp = new Razorpay(options);\r\n//       rzp.open();\r\n//     }\r\n\r\n//     render () {\r\n//       return (\r\n//         <div>\r\n//           <input type='text' onChange={\r\n//              this.changeAmount\r\n//             } />\r\n//           <button onClick={this.openCheckout}>Pay Rs. {this.state.amount/100}</button>\r\n//         </div>\r\n//       )\r\n//     }\r\n//   }\r\n",{"ruleId":"547","replacedBy":"548"},{"ruleId":"549","replacedBy":"550"},{"ruleId":"551","severity":1,"message":"552","line":1,"column":8,"nodeType":"553","messageId":"554","endLine":1,"endColumn":12},{"ruleId":"551","severity":1,"message":"555","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":18},{"ruleId":"551","severity":1,"message":"556","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":23},{"ruleId":"551","severity":1,"message":"557","line":32,"column":8,"nodeType":"553","messageId":"554","endLine":32,"endColumn":23},{"ruleId":"551","severity":1,"message":"558","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":14},{"ruleId":"551","severity":1,"message":"559","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":22},{"ruleId":"551","severity":1,"message":"560","line":12,"column":26,"nodeType":"553","messageId":"554","endLine":12,"endColumn":35},{"ruleId":"561","severity":1,"message":"562","line":127,"column":9,"nodeType":"563","endLine":127,"endColumn":42},{"ruleId":"561","severity":1,"message":"562","line":132,"column":9,"nodeType":"563","endLine":132,"endColumn":42},{"ruleId":"561","severity":1,"message":"562","line":137,"column":9,"nodeType":"563","endLine":137,"endColumn":42},{"ruleId":"561","severity":1,"message":"562","line":154,"column":7,"nodeType":"563","endLine":154,"endColumn":90},{"ruleId":"561","severity":1,"message":"562","line":158,"column":5,"nodeType":"563","endLine":158,"endColumn":38},{"ruleId":"561","severity":1,"message":"562","line":175,"column":7,"nodeType":"563","endLine":175,"endColumn":70},{"ruleId":"561","severity":1,"message":"562","line":179,"column":6,"nodeType":"563","endLine":179,"endColumn":40},{"ruleId":"551","severity":1,"message":"558","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":14},{"ruleId":"551","severity":1,"message":"559","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":22},{"ruleId":"551","severity":1,"message":"560","line":12,"column":26,"nodeType":"553","messageId":"554","endLine":12,"endColumn":35},{"ruleId":"561","severity":1,"message":"562","line":180,"column":5,"nodeType":"563","endLine":180,"endColumn":58},{"ruleId":"561","severity":1,"message":"562","line":197,"column":10,"nodeType":"563","endLine":197,"endColumn":63},{"ruleId":"561","severity":1,"message":"562","line":202,"column":9,"nodeType":"563","endLine":202,"endColumn":62},{"ruleId":"561","severity":1,"message":"562","line":207,"column":9,"nodeType":"563","endLine":207,"endColumn":62},{"ruleId":"561","severity":1,"message":"562","line":224,"column":7,"nodeType":"563","endLine":224,"endColumn":87},{"ruleId":"561","severity":1,"message":"562","line":228,"column":5,"nodeType":"563","endLine":228,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":245,"column":7,"nodeType":"563","endLine":245,"endColumn":67},{"ruleId":"561","severity":1,"message":"562","line":250,"column":6,"nodeType":"563","endLine":250,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":268,"column":1,"nodeType":"563","endLine":268,"endColumn":49},{"ruleId":"561","severity":1,"message":"562","line":286,"column":6,"nodeType":"563","endLine":286,"endColumn":54},{"ruleId":"564","severity":1,"message":"565","line":2,"column":18,"nodeType":"566","messageId":"567","endLine":2,"endColumn":20},{"ruleId":"564","severity":1,"message":"565","line":6,"column":18,"nodeType":"566","messageId":"567","endLine":6,"endColumn":20},{"ruleId":"564","severity":1,"message":"565","line":18,"column":21,"nodeType":"566","messageId":"567","endLine":18,"endColumn":23},{"ruleId":"568","severity":1,"message":"569","line":24,"column":29,"nodeType":"570","messageId":"571","endLine":24,"endColumn":30,"suggestions":"572"},{"ruleId":"568","severity":1,"message":"573","line":24,"column":31,"nodeType":"570","messageId":"571","endLine":24,"endColumn":32,"suggestions":"574"},{"ruleId":"568","severity":1,"message":"575","line":24,"column":36,"nodeType":"570","messageId":"571","endLine":24,"endColumn":37,"suggestions":"576"},{"ruleId":"568","severity":1,"message":"573","line":24,"column":50,"nodeType":"570","messageId":"571","endLine":24,"endColumn":51,"suggestions":"577"},{"ruleId":"564","severity":1,"message":"565","line":25,"column":23,"nodeType":"566","messageId":"567","endLine":25,"endColumn":25},{"ruleId":"551","severity":1,"message":"560","line":2,"column":9,"nodeType":"553","messageId":"554","endLine":2,"endColumn":18},{"ruleId":"551","severity":1,"message":"558","line":21,"column":8,"nodeType":"553","messageId":"554","endLine":21,"endColumn":14},{"ruleId":"551","severity":1,"message":"559","line":24,"column":8,"nodeType":"553","messageId":"554","endLine":24,"endColumn":22},{"ruleId":"551","severity":1,"message":"578","line":70,"column":10,"nodeType":"553","messageId":"554","endLine":70,"endColumn":20},{"ruleId":"551","severity":1,"message":"579","line":70,"column":22,"nodeType":"553","messageId":"554","endLine":70,"endColumn":32},{"ruleId":"551","severity":1,"message":"580","line":83,"column":19,"nodeType":"553","messageId":"554","endLine":83,"endColumn":29},{"ruleId":"561","severity":1,"message":"562","line":91,"column":9,"nodeType":"563","endLine":94,"endColumn":11},{"ruleId":"561","severity":1,"message":"562","line":101,"column":9,"nodeType":"563","endLine":104,"endColumn":11},{"ruleId":"551","severity":1,"message":"581","line":184,"column":11,"nodeType":"553","messageId":"554","endLine":184,"endColumn":17},{"ruleId":"551","severity":1,"message":"581","line":196,"column":9,"nodeType":"553","messageId":"554","endLine":196,"endColumn":15},{"ruleId":"561","severity":1,"message":"562","line":236,"column":17,"nodeType":"563","endLine":236,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":248,"column":17,"nodeType":"563","endLine":248,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":304,"column":17,"nodeType":"563","endLine":304,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":341,"column":17,"nodeType":"563","endLine":341,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":383,"column":17,"nodeType":"563","endLine":387,"endColumn":19},{"ruleId":"561","severity":1,"message":"562","line":395,"column":17,"nodeType":"563","endLine":395,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":437,"column":17,"nodeType":"563","endLine":437,"endColumn":78},{"ruleId":"551","severity":1,"message":"560","line":10,"column":18,"nodeType":"553","messageId":"554","endLine":10,"endColumn":27},{"ruleId":"561","severity":1,"message":"562","line":168,"column":20,"nodeType":"563","endLine":168,"endColumn":41},{"ruleId":"561","severity":1,"message":"562","line":179,"column":19,"nodeType":"563","endLine":179,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":190,"column":17,"nodeType":"563","endLine":190,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":194,"column":17,"nodeType":"563","endLine":194,"endColumn":51},{"ruleId":"551","severity":1,"message":"560","line":2,"column":9,"nodeType":"553","messageId":"554","endLine":2,"endColumn":18},{"ruleId":"551","severity":1,"message":"582","line":2,"column":37,"nodeType":"553","messageId":"554","endLine":2,"endColumn":53},{"ruleId":"551","severity":1,"message":"580","line":69,"column":21,"nodeType":"553","messageId":"554","endLine":69,"endColumn":31},{"ruleId":"551","severity":1,"message":"581","line":177,"column":17,"nodeType":"553","messageId":"554","endLine":177,"endColumn":23},{"ruleId":"561","severity":1,"message":"562","line":199,"column":20,"nodeType":"563","endLine":199,"endColumn":41},{"ruleId":"561","severity":1,"message":"562","line":210,"column":19,"nodeType":"563","endLine":210,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":222,"column":17,"nodeType":"563","endLine":222,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":226,"column":17,"nodeType":"563","endLine":226,"endColumn":51},{"ruleId":"551","severity":1,"message":"581","line":263,"column":11,"nodeType":"553","messageId":"554","endLine":263,"endColumn":17},{"ruleId":"551","severity":1,"message":"583","line":2,"column":8,"nodeType":"553","messageId":"554","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"584","line":3,"column":8,"nodeType":"553","messageId":"554","endLine":3,"endColumn":14},{"ruleId":"551","severity":1,"message":"585","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":15},{"ruleId":"551","severity":1,"message":"586","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":21},{"ruleId":"551","severity":1,"message":"587","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":21},{"ruleId":"551","severity":1,"message":"588","line":7,"column":8,"nodeType":"553","messageId":"554","endLine":7,"endColumn":25},{"ruleId":"551","severity":1,"message":"589","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":19},{"ruleId":"551","severity":1,"message":"590","line":12,"column":21,"nodeType":"553","messageId":"554","endLine":12,"endColumn":31},{"ruleId":"551","severity":1,"message":"591","line":13,"column":8,"nodeType":"553","messageId":"554","endLine":13,"endColumn":17},{"ruleId":"551","severity":1,"message":"560","line":16,"column":9,"nodeType":"553","messageId":"554","endLine":16,"endColumn":18},{"ruleId":"551","severity":1,"message":"592","line":16,"column":27,"nodeType":"553","messageId":"554","endLine":16,"endColumn":35},{"ruleId":"551","severity":1,"message":"582","line":16,"column":36,"nodeType":"553","messageId":"554","endLine":16,"endColumn":52},{"ruleId":"551","severity":1,"message":"593","line":78,"column":9,"nodeType":"553","messageId":"554","endLine":78,"endColumn":19},{"ruleId":"551","severity":1,"message":"580","line":81,"column":21,"nodeType":"553","messageId":"554","endLine":81,"endColumn":31},{"ruleId":"551","severity":1,"message":"594","line":3,"column":25,"nodeType":"553","messageId":"554","endLine":3,"endColumn":38},{"ruleId":"551","severity":1,"message":"579","line":74,"column":23,"nodeType":"553","messageId":"554","endLine":74,"endColumn":33},{"ruleId":"551","severity":1,"message":"581","line":101,"column":11,"nodeType":"553","messageId":"554","endLine":101,"endColumn":17},{"ruleId":"551","severity":1,"message":"581","line":112,"column":11,"nodeType":"553","messageId":"554","endLine":112,"endColumn":17},{"ruleId":"551","severity":1,"message":"581","line":193,"column":11,"nodeType":"553","messageId":"554","endLine":193,"endColumn":17},{"ruleId":"551","severity":1,"message":"580","line":208,"column":21,"nodeType":"553","messageId":"554","endLine":208,"endColumn":31},{"ruleId":"561","severity":1,"message":"562","line":212,"column":60,"nodeType":"563","endLine":212,"endColumn":163},{"ruleId":"561","severity":1,"message":"562","line":213,"column":50,"nodeType":"563","endLine":213,"endColumn":149},{"ruleId":"551","severity":1,"message":"595","line":224,"column":19,"nodeType":"553","messageId":"554","endLine":224,"endColumn":34},{"ruleId":"561","severity":1,"message":"562","line":299,"column":13,"nodeType":"563","endLine":299,"endColumn":66},{"ruleId":"561","severity":1,"message":"562","line":318,"column":11,"nodeType":"563","endLine":318,"endColumn":64},{"ruleId":"561","severity":1,"message":"562","line":322,"column":11,"nodeType":"563","endLine":322,"endColumn":64},{"ruleId":"561","severity":1,"message":"562","line":326,"column":9,"nodeType":"563","endLine":326,"endColumn":62},{"ruleId":"561","severity":1,"message":"562","line":344,"column":9,"nodeType":"563","endLine":344,"endColumn":62},{"ruleId":"561","severity":1,"message":"562","line":361,"column":9,"nodeType":"563","endLine":361,"endColumn":62},{"ruleId":"561","severity":1,"message":"562","line":395,"column":12,"nodeType":"563","endLine":395,"endColumn":65},{"ruleId":"561","severity":1,"message":"562","line":409,"column":13,"nodeType":"563","endLine":409,"endColumn":71},{"ruleId":"561","severity":1,"message":"562","line":423,"column":12,"nodeType":"563","endLine":423,"endColumn":60},{"ruleId":"561","severity":1,"message":"562","line":438,"column":11,"nodeType":"563","endLine":438,"endColumn":64},{"ruleId":"551","severity":1,"message":"560","line":10,"column":18,"nodeType":"553","messageId":"554","endLine":10,"endColumn":27},{"ruleId":"561","severity":1,"message":"562","line":297,"column":20,"nodeType":"563","endLine":297,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":308,"column":19,"nodeType":"563","endLine":308,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":319,"column":19,"nodeType":"563","endLine":319,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":330,"column":17,"nodeType":"563","endLine":330,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":334,"column":17,"nodeType":"563","endLine":334,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":338,"column":17,"nodeType":"563","endLine":338,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":342,"column":17,"nodeType":"563","endLine":342,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":352,"column":19,"nodeType":"563","endLine":352,"endColumn":85},{"ruleId":"561","severity":1,"message":"562","line":356,"column":17,"nodeType":"563","endLine":356,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":361,"column":17,"nodeType":"563","endLine":361,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":365,"column":17,"nodeType":"563","endLine":365,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":370,"column":17,"nodeType":"563","endLine":370,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":374,"column":18,"nodeType":"563","endLine":374,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":384,"column":17,"nodeType":"563","endLine":384,"endColumn":77},{"ruleId":"561","severity":1,"message":"562","line":388,"column":13,"nodeType":"563","endLine":388,"endColumn":48},{"ruleId":"561","severity":1,"message":"562","line":402,"column":17,"nodeType":"563","endLine":402,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":408,"column":17,"nodeType":"563","endLine":408,"endColumn":51},{"ruleId":"551","severity":1,"message":"580","line":81,"column":21,"nodeType":"553","messageId":"554","endLine":81,"endColumn":31},{"ruleId":"561","severity":1,"message":"562","line":89,"column":66,"nodeType":"563","endLine":89,"endColumn":170},{"ruleId":"561","severity":1,"message":"562","line":94,"column":55,"nodeType":"563","endLine":94,"endColumn":154},{"ruleId":"551","severity":1,"message":"581","line":205,"column":13,"nodeType":"553","messageId":"554","endLine":205,"endColumn":19},{"ruleId":"551","severity":1,"message":"581","line":218,"column":13,"nodeType":"553","messageId":"554","endLine":218,"endColumn":19},{"ruleId":"561","severity":1,"message":"562","line":347,"column":20,"nodeType":"563","endLine":347,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":358,"column":19,"nodeType":"563","endLine":358,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":369,"column":19,"nodeType":"563","endLine":369,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":380,"column":17,"nodeType":"563","endLine":380,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":384,"column":17,"nodeType":"563","endLine":384,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":388,"column":17,"nodeType":"563","endLine":388,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":393,"column":17,"nodeType":"563","endLine":393,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":398,"column":17,"nodeType":"563","endLine":398,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":403,"column":17,"nodeType":"563","endLine":403,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":408,"column":17,"nodeType":"563","endLine":408,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":413,"column":17,"nodeType":"563","endLine":413,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":427,"column":17,"nodeType":"563","endLine":427,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":433,"column":17,"nodeType":"563","endLine":433,"endColumn":51},{"ruleId":"561","severity":1,"message":"562","line":449,"column":19,"nodeType":"563","endLine":449,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":467,"column":19,"nodeType":"563","endLine":467,"endColumn":85},{"ruleId":"561","severity":1,"message":"562","line":473,"column":19,"nodeType":"563","endLine":473,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":492,"column":17,"nodeType":"563","endLine":492,"endColumn":77},{"ruleId":"551","severity":1,"message":"581","line":540,"column":11,"nodeType":"553","messageId":"554","endLine":540,"endColumn":17},{"ruleId":"551","severity":1,"message":"596","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":12},{"ruleId":"551","severity":1,"message":"597","line":16,"column":8,"nodeType":"553","messageId":"554","endLine":16,"endColumn":13},{"ruleId":"551","severity":1,"message":"598","line":135,"column":9,"nodeType":"553","messageId":"554","endLine":135,"endColumn":25},{"ruleId":"551","severity":1,"message":"599","line":3,"column":8,"nodeType":"553","messageId":"554","endLine":3,"endColumn":16},{"ruleId":"551","severity":1,"message":"600","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":20},{"ruleId":"551","severity":1,"message":"601","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":20},{"ruleId":"551","severity":1,"message":"602","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":21},{"ruleId":"551","severity":1,"message":"603","line":7,"column":8,"nodeType":"553","messageId":"554","endLine":7,"endColumn":21},{"ruleId":"551","severity":1,"message":"604","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":24},{"ruleId":"551","severity":1,"message":"605","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":18},{"ruleId":"551","severity":1,"message":"606","line":10,"column":8,"nodeType":"553","messageId":"554","endLine":10,"endColumn":20},{"ruleId":"551","severity":1,"message":"607","line":11,"column":8,"nodeType":"553","messageId":"554","endLine":11,"endColumn":18},{"ruleId":"551","severity":1,"message":"608","line":12,"column":8,"nodeType":"553","messageId":"554","endLine":12,"endColumn":22},{"ruleId":"551","severity":1,"message":"609","line":18,"column":8,"nodeType":"553","messageId":"554","endLine":18,"endColumn":29},{"ruleId":"551","severity":1,"message":"610","line":19,"column":8,"nodeType":"553","messageId":"554","endLine":19,"endColumn":16},{"ruleId":"551","severity":1,"message":"611","line":20,"column":8,"nodeType":"553","messageId":"554","endLine":20,"endColumn":17},{"ruleId":"551","severity":1,"message":"612","line":22,"column":8,"nodeType":"553","messageId":"554","endLine":22,"endColumn":22},{"ruleId":"551","severity":1,"message":"613","line":1,"column":44,"nodeType":"553","messageId":"554","endLine":1,"endColumn":50},{"ruleId":"551","severity":1,"message":"614","line":13,"column":10,"nodeType":"553","messageId":"554","endLine":13,"endColumn":29},{"ruleId":"615","severity":1,"message":"616","line":237,"column":50,"nodeType":"617","messageId":"618","endLine":237,"endColumn":52},{"ruleId":"561","severity":1,"message":"562","line":264,"column":20,"nodeType":"563","endLine":264,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":275,"column":19,"nodeType":"563","endLine":275,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":286,"column":19,"nodeType":"563","endLine":286,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":297,"column":19,"nodeType":"563","endLine":297,"endColumn":53},{"ruleId":"561","severity":1,"message":"562","line":309,"column":17,"nodeType":"563","endLine":309,"endColumn":51},{"ruleId":"551","severity":1,"message":"590","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":154,"column":20,"nodeType":"566","messageId":"567","endLine":154,"endColumn":22},{"ruleId":"551","severity":1,"message":"619","line":176,"column":9,"nodeType":"553","messageId":"554","endLine":176,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":319,"column":19,"nodeType":"563","endLine":323,"endColumn":21},{"ruleId":"564","severity":1,"message":"565","line":361,"column":36,"nodeType":"566","messageId":"567","endLine":361,"endColumn":38},{"ruleId":"564","severity":1,"message":"565","line":371,"column":36,"nodeType":"566","messageId":"567","endLine":371,"endColumn":38},{"ruleId":"561","severity":1,"message":"562","line":757,"column":11,"nodeType":"563","endLine":763,"endColumn":13},{"ruleId":"551","severity":1,"message":"585","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":15},{"ruleId":"551","severity":1,"message":"620","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":16},{"ruleId":"551","severity":1,"message":"621","line":7,"column":8,"nodeType":"553","messageId":"554","endLine":7,"endColumn":12},{"ruleId":"551","severity":1,"message":"622","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":18},{"ruleId":"551","severity":1,"message":"623","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":16},{"ruleId":"561","severity":1,"message":"562","line":142,"column":12,"nodeType":"563","endLine":142,"endColumn":83},{"ruleId":"561","severity":1,"message":"562","line":144,"column":9,"nodeType":"563","endLine":144,"endColumn":89},{"ruleId":"561","severity":1,"message":"562","line":145,"column":9,"nodeType":"563","endLine":145,"endColumn":79},{"ruleId":"561","severity":1,"message":"562","line":157,"column":47,"nodeType":"563","endLine":157,"endColumn":93},{"ruleId":"561","severity":1,"message":"562","line":225,"column":12,"nodeType":"563","endLine":225,"endColumn":65},{"ruleId":"551","severity":1,"message":"624","line":8,"column":5,"nodeType":"553","messageId":"554","endLine":8,"endColumn":13},{"ruleId":"561","severity":1,"message":"562","line":90,"column":12,"nodeType":"563","endLine":90,"endColumn":48},{"ruleId":"561","severity":1,"message":"562","line":91,"column":12,"nodeType":"563","endLine":91,"endColumn":47},{"ruleId":"551","severity":1,"message":"625","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":23},{"ruleId":"551","severity":1,"message":"602","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":21},{"ruleId":"551","severity":1,"message":"622","line":10,"column":8,"nodeType":"553","messageId":"554","endLine":10,"endColumn":18},{"ruleId":"551","severity":1,"message":"610","line":11,"column":8,"nodeType":"553","messageId":"554","endLine":11,"endColumn":16},{"ruleId":"551","severity":1,"message":"626","line":12,"column":23,"nodeType":"553","messageId":"554","endLine":12,"endColumn":34},{"ruleId":"551","severity":1,"message":"592","line":13,"column":30,"nodeType":"553","messageId":"554","endLine":13,"endColumn":38},{"ruleId":"551","severity":1,"message":"627","line":14,"column":10,"nodeType":"553","messageId":"554","endLine":14,"endColumn":15},{"ruleId":"561","severity":1,"message":"562","line":85,"column":11,"nodeType":"563","endLine":89,"endColumn":13},{"ruleId":"561","severity":1,"message":"562","line":101,"column":15,"nodeType":"563","endLine":112,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":126,"column":15,"nodeType":"563","endLine":136,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":155,"column":13,"nodeType":"563","endLine":164,"endColumn":15},{"ruleId":"564","severity":1,"message":"565","line":198,"column":32,"nodeType":"566","messageId":"567","endLine":198,"endColumn":34},{"ruleId":"551","severity":1,"message":"628","line":1,"column":24,"nodeType":"553","messageId":"554","endLine":1,"endColumn":33},{"ruleId":"551","severity":1,"message":"629","line":4,"column":9,"nodeType":"553","messageId":"554","endLine":4,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":43,"column":13,"nodeType":"566","messageId":"567","endLine":43,"endColumn":15},{"ruleId":"551","severity":1,"message":"583","line":3,"column":10,"nodeType":"553","messageId":"554","endLine":3,"endColumn":16},{"ruleId":"630","severity":1,"message":"631","line":117,"column":5,"nodeType":"632","messageId":"567","endLine":117,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":132,"column":62,"nodeType":"563","endLine":132,"endColumn":169},{"ruleId":"551","severity":1,"message":"628","line":1,"column":27,"nodeType":"553","messageId":"554","endLine":1,"endColumn":36},{"ruleId":"551","severity":1,"message":"583","line":3,"column":10,"nodeType":"553","messageId":"554","endLine":3,"endColumn":16},{"ruleId":"551","severity":1,"message":"585","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":15},{"ruleId":"551","severity":1,"message":"560","line":5,"column":10,"nodeType":"553","messageId":"554","endLine":5,"endColumn":19},{"ruleId":"551","severity":1,"message":"633","line":5,"column":21,"nodeType":"553","messageId":"554","endLine":5,"endColumn":28},{"ruleId":"551","severity":1,"message":"634","line":6,"column":23,"nodeType":"553","messageId":"554","endLine":6,"endColumn":35},{"ruleId":"564","severity":1,"message":"565","line":58,"column":31,"nodeType":"566","messageId":"567","endLine":58,"endColumn":33},{"ruleId":"564","severity":1,"message":"565","line":81,"column":25,"nodeType":"566","messageId":"567","endLine":81,"endColumn":27},{"ruleId":"630","severity":1,"message":"635","line":196,"column":17,"nodeType":"632","messageId":"567","endLine":196,"endColumn":26},{"ruleId":"630","severity":1,"message":"636","line":214,"column":17,"nodeType":"632","messageId":"567","endLine":214,"endColumn":32},{"ruleId":"630","severity":1,"message":"637","line":218,"column":17,"nodeType":"632","messageId":"567","endLine":218,"endColumn":22},{"ruleId":"551","severity":1,"message":"583","line":3,"column":10,"nodeType":"553","messageId":"554","endLine":3,"endColumn":16},{"ruleId":"551","severity":1,"message":"585","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":15},{"ruleId":"551","severity":1,"message":"638","line":5,"column":10,"nodeType":"553","messageId":"554","endLine":5,"endColumn":30},{"ruleId":"551","severity":1,"message":"560","line":6,"column":10,"nodeType":"553","messageId":"554","endLine":6,"endColumn":19},{"ruleId":"551","severity":1,"message":"633","line":6,"column":21,"nodeType":"553","messageId":"554","endLine":6,"endColumn":28},{"ruleId":"551","severity":1,"message":"578","line":115,"column":11,"nodeType":"553","messageId":"554","endLine":115,"endColumn":21},{"ruleId":"551","severity":1,"message":"597","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":13},{"ruleId":"551","severity":1,"message":"626","line":5,"column":23,"nodeType":"553","messageId":"554","endLine":5,"endColumn":34},{"ruleId":"551","severity":1,"message":"633","line":6,"column":21,"nodeType":"553","messageId":"554","endLine":6,"endColumn":28},{"ruleId":"551","severity":1,"message":"627","line":7,"column":10,"nodeType":"553","messageId":"554","endLine":7,"endColumn":15},{"ruleId":"551","severity":1,"message":"559","line":15,"column":8,"nodeType":"553","messageId":"554","endLine":15,"endColumn":22},{"ruleId":"551","severity":1,"message":"639","line":16,"column":8,"nodeType":"553","messageId":"554","endLine":16,"endColumn":17},{"ruleId":"551","severity":1,"message":"640","line":22,"column":10,"nodeType":"553","messageId":"554","endLine":22,"endColumn":16},{"ruleId":"551","severity":1,"message":"641","line":24,"column":10,"nodeType":"553","messageId":"554","endLine":24,"endColumn":15},{"ruleId":"551","severity":1,"message":"642","line":25,"column":8,"nodeType":"553","messageId":"554","endLine":25,"endColumn":17},{"ruleId":"551","severity":1,"message":"643","line":27,"column":8,"nodeType":"553","messageId":"554","endLine":27,"endColumn":32},{"ruleId":"551","severity":1,"message":"644","line":28,"column":8,"nodeType":"553","messageId":"554","endLine":28,"endColumn":20},{"ruleId":"551","severity":1,"message":"645","line":29,"column":8,"nodeType":"553","messageId":"554","endLine":29,"endColumn":16},{"ruleId":"551","severity":1,"message":"646","line":30,"column":8,"nodeType":"553","messageId":"554","endLine":30,"endColumn":22},{"ruleId":"551","severity":1,"message":"647","line":103,"column":10,"nodeType":"553","messageId":"554","endLine":103,"endColumn":20},{"ruleId":"648","severity":1,"message":"649","line":134,"column":5,"nodeType":"650","endLine":134,"endColumn":12,"suggestions":"651"},{"ruleId":"561","severity":1,"message":"562","line":163,"column":13,"nodeType":"563","endLine":172,"endColumn":15},{"ruleId":"564","severity":1,"message":"565","line":205,"column":32,"nodeType":"566","messageId":"567","endLine":205,"endColumn":34},{"ruleId":"551","severity":1,"message":"652","line":244,"column":9,"nodeType":"553","messageId":"554","endLine":244,"endColumn":19},{"ruleId":"551","severity":1,"message":"653","line":2,"column":10,"nodeType":"553","messageId":"554","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"583","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":14},{"ruleId":"551","severity":1,"message":"558","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":14},{"ruleId":"551","severity":1,"message":"626","line":8,"column":10,"nodeType":"553","messageId":"554","endLine":8,"endColumn":21},{"ruleId":"551","severity":1,"message":"654","line":10,"column":10,"nodeType":"553","messageId":"554","endLine":10,"endColumn":14},{"ruleId":"551","severity":1,"message":"655","line":12,"column":10,"nodeType":"553","messageId":"554","endLine":12,"endColumn":18},{"ruleId":"551","severity":1,"message":"622","line":16,"column":10,"nodeType":"553","messageId":"554","endLine":16,"endColumn":20},{"ruleId":"551","severity":1,"message":"591","line":16,"column":22,"nodeType":"553","messageId":"554","endLine":16,"endColumn":31},{"ruleId":"551","severity":1,"message":"656","line":19,"column":8,"nodeType":"553","messageId":"554","endLine":19,"endColumn":18},{"ruleId":"551","severity":1,"message":"657","line":81,"column":10,"nodeType":"553","messageId":"554","endLine":81,"endColumn":22},{"ruleId":"551","severity":1,"message":"658","line":84,"column":10,"nodeType":"553","messageId":"554","endLine":84,"endColumn":24},{"ruleId":"551","severity":1,"message":"659","line":85,"column":10,"nodeType":"553","messageId":"554","endLine":85,"endColumn":20},{"ruleId":"551","severity":1,"message":"660","line":86,"column":10,"nodeType":"553","messageId":"554","endLine":86,"endColumn":18},{"ruleId":"551","severity":1,"message":"661","line":86,"column":20,"nodeType":"553","messageId":"554","endLine":86,"endColumn":28},{"ruleId":"648","severity":1,"message":"662","line":101,"column":6,"nodeType":"650","endLine":101,"endColumn":8,"suggestions":"663"},{"ruleId":"551","severity":1,"message":"664","line":156,"column":9,"nodeType":"553","messageId":"554","endLine":156,"endColumn":26},{"ruleId":"551","severity":1,"message":"665","line":170,"column":9,"nodeType":"553","messageId":"554","endLine":170,"endColumn":16},{"ruleId":"564","severity":1,"message":"565","line":195,"column":22,"nodeType":"566","messageId":"567","endLine":195,"endColumn":24},{"ruleId":"551","severity":1,"message":"666","line":207,"column":9,"nodeType":"553","messageId":"554","endLine":207,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":254,"column":24,"nodeType":"566","messageId":"567","endLine":254,"endColumn":26},{"ruleId":"564","severity":1,"message":"565","line":254,"column":59,"nodeType":"566","messageId":"567","endLine":254,"endColumn":61},{"ruleId":"551","severity":1,"message":"667","line":260,"column":9,"nodeType":"553","messageId":"554","endLine":260,"endColumn":21},{"ruleId":"551","severity":1,"message":"668","line":297,"column":11,"nodeType":"553","messageId":"554","endLine":297,"endColumn":19},{"ruleId":"564","severity":1,"message":"565","line":299,"column":22,"nodeType":"566","messageId":"567","endLine":299,"endColumn":24},{"ruleId":"564","severity":1,"message":"669","line":331,"column":41,"nodeType":"566","messageId":"567","endLine":331,"endColumn":43},{"ruleId":"564","severity":1,"message":"565","line":382,"column":27,"nodeType":"566","messageId":"567","endLine":382,"endColumn":29},{"ruleId":"564","severity":1,"message":"565","line":404,"column":26,"nodeType":"566","messageId":"567","endLine":404,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":431,"column":25,"nodeType":"566","messageId":"567","endLine":431,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":436,"column":23,"nodeType":"566","messageId":"567","endLine":436,"endColumn":25},{"ruleId":"551","severity":1,"message":"670","line":480,"column":7,"nodeType":"553","messageId":"554","endLine":480,"endColumn":8},{"ruleId":"551","severity":1,"message":"671","line":1,"column":38,"nodeType":"553","messageId":"554","endLine":1,"endColumn":47},{"ruleId":"551","severity":1,"message":"653","line":2,"column":10,"nodeType":"553","messageId":"554","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"585","line":3,"column":8,"nodeType":"553","messageId":"554","endLine":3,"endColumn":15},{"ruleId":"551","severity":1,"message":"583","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":14},{"ruleId":"551","severity":1,"message":"558","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":14},{"ruleId":"551","severity":1,"message":"626","line":8,"column":10,"nodeType":"553","messageId":"554","endLine":8,"endColumn":21},{"ruleId":"551","severity":1,"message":"654","line":10,"column":10,"nodeType":"553","messageId":"554","endLine":10,"endColumn":14},{"ruleId":"551","severity":1,"message":"655","line":12,"column":10,"nodeType":"553","messageId":"554","endLine":12,"endColumn":18},{"ruleId":"551","severity":1,"message":"672","line":18,"column":9,"nodeType":"553","messageId":"554","endLine":18,"endColumn":16},{"ruleId":"551","severity":1,"message":"673","line":20,"column":10,"nodeType":"553","messageId":"554","endLine":20,"endColumn":31},{"ruleId":"551","severity":1,"message":"674","line":24,"column":9,"nodeType":"553","messageId":"554","endLine":24,"endColumn":21},{"ruleId":"648","severity":1,"message":"662","line":33,"column":6,"nodeType":"650","endLine":33,"endColumn":8,"suggestions":"675"},{"ruleId":"561","severity":1,"message":"562","line":59,"column":15,"nodeType":"563","endLine":63,"endColumn":17},{"ruleId":"564","severity":1,"message":"565","line":99,"column":34,"nodeType":"566","messageId":"567","endLine":99,"endColumn":36},{"ruleId":"551","severity":1,"message":"676","line":3,"column":8,"nodeType":"553","messageId":"554","endLine":3,"endColumn":16},{"ruleId":"551","severity":1,"message":"677","line":5,"column":8,"nodeType":"553","messageId":"554","endLine":5,"endColumn":24},{"ruleId":"551","severity":1,"message":"678","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":16},{"ruleId":"551","severity":1,"message":"639","line":13,"column":8,"nodeType":"553","messageId":"554","endLine":13,"endColumn":17},{"ruleId":"630","severity":1,"message":"679","line":63,"column":5,"nodeType":"632","messageId":"567","endLine":63,"endColumn":15},{"ruleId":"551","severity":1,"message":"680","line":74,"column":10,"nodeType":"553","messageId":"554","endLine":74,"endColumn":17},{"ruleId":"551","severity":1,"message":"558","line":7,"column":8,"nodeType":"553","messageId":"554","endLine":7,"endColumn":14},{"ruleId":"551","severity":1,"message":"656","line":8,"column":8,"nodeType":"553","messageId":"554","endLine":8,"endColumn":18},{"ruleId":"551","severity":1,"message":"620","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":16},{"ruleId":"551","severity":1,"message":"559","line":10,"column":8,"nodeType":"553","messageId":"554","endLine":10,"endColumn":22},{"ruleId":"551","severity":1,"message":"681","line":11,"column":8,"nodeType":"553","messageId":"554","endLine":11,"endColumn":19},{"ruleId":"551","severity":1,"message":"682","line":12,"column":8,"nodeType":"553","messageId":"554","endLine":12,"endColumn":14},{"ruleId":"551","severity":1,"message":"582","line":13,"column":20,"nodeType":"553","messageId":"554","endLine":13,"endColumn":36},{"ruleId":"551","severity":1,"message":"560","line":13,"column":38,"nodeType":"553","messageId":"554","endLine":13,"endColumn":47},{"ruleId":"561","severity":1,"message":"562","line":82,"column":13,"nodeType":"563","endLine":82,"endColumn":47},{"ruleId":"551","severity":1,"message":"683","line":6,"column":8,"nodeType":"553","messageId":"554","endLine":6,"endColumn":24},{"ruleId":"551","severity":1,"message":"684","line":7,"column":8,"nodeType":"553","messageId":"554","endLine":7,"endColumn":16},{"ruleId":"551","severity":1,"message":"633","line":8,"column":10,"nodeType":"553","messageId":"554","endLine":8,"endColumn":17},{"ruleId":"551","severity":1,"message":"560","line":8,"column":19,"nodeType":"553","messageId":"554","endLine":8,"endColumn":28},{"ruleId":"551","severity":1,"message":"597","line":10,"column":8,"nodeType":"553","messageId":"554","endLine":10,"endColumn":13},{"ruleId":"551","severity":1,"message":"685","line":11,"column":8,"nodeType":"553","messageId":"554","endLine":11,"endColumn":11},{"ruleId":"551","severity":1,"message":"686","line":13,"column":8,"nodeType":"553","messageId":"554","endLine":13,"endColumn":24},{"ruleId":"551","severity":1,"message":"626","line":16,"column":23,"nodeType":"553","messageId":"554","endLine":16,"endColumn":34},{"ruleId":"551","severity":1,"message":"687","line":21,"column":10,"nodeType":"553","messageId":"554","endLine":21,"endColumn":19},{"ruleId":"630","severity":1,"message":"636","line":46,"column":5,"nodeType":"632","messageId":"567","endLine":46,"endColumn":20},{"ruleId":"551","severity":1,"message":"688","line":86,"column":10,"nodeType":"553","messageId":"554","endLine":86,"endColumn":17},{"ruleId":"551","severity":1,"message":"689","line":87,"column":9,"nodeType":"553","messageId":"554","endLine":87,"endColumn":19},{"ruleId":"564","severity":1,"message":"565","line":98,"column":26,"nodeType":"566","messageId":"567","endLine":98,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":123,"column":25,"nodeType":"566","messageId":"567","endLine":123,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":126,"column":32,"nodeType":"566","messageId":"567","endLine":126,"endColumn":34},{"ruleId":"564","severity":1,"message":"565","line":155,"column":18,"nodeType":"566","messageId":"567","endLine":155,"endColumn":20},{"ruleId":"561","severity":1,"message":"562","line":190,"column":15,"nodeType":"563","endLine":190,"endColumn":67},{"ruleId":"551","severity":1,"message":"558","line":2,"column":8,"nodeType":"553","messageId":"554","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"690","line":4,"column":8,"nodeType":"553","messageId":"554","endLine":4,"endColumn":19},{"ruleId":"551","severity":1,"message":"597","line":9,"column":8,"nodeType":"553","messageId":"554","endLine":9,"endColumn":13},{"ruleId":"551","severity":1,"message":"685","line":11,"column":8,"nodeType":"553","messageId":"554","endLine":11,"endColumn":11},{"ruleId":"551","severity":1,"message":"686","line":13,"column":8,"nodeType":"553","messageId":"554","endLine":13,"endColumn":24},{"ruleId":"551","severity":1,"message":"691","line":20,"column":3,"nodeType":"553","messageId":"554","endLine":20,"endColumn":14},{"ruleId":"551","severity":1,"message":"633","line":23,"column":20,"nodeType":"553","messageId":"554","endLine":23,"endColumn":27},{"ruleId":"551","severity":1,"message":"560","line":23,"column":29,"nodeType":"553","messageId":"554","endLine":23,"endColumn":38},{"ruleId":"551","severity":1,"message":"626","line":24,"column":23,"nodeType":"553","messageId":"554","endLine":24,"endColumn":34},{"ruleId":"551","severity":1,"message":"692","line":25,"column":8,"nodeType":"553","messageId":"554","endLine":25,"endColumn":19},{"ruleId":"551","severity":1,"message":"656","line":27,"column":8,"nodeType":"553","messageId":"554","endLine":27,"endColumn":18},{"ruleId":"551","severity":1,"message":"693","line":30,"column":8,"nodeType":"553","messageId":"554","endLine":30,"endColumn":12},{"ruleId":"551","severity":1,"message":"687","line":38,"column":10,"nodeType":"553","messageId":"554","endLine":38,"endColumn":19},{"ruleId":"551","severity":1,"message":"688","line":84,"column":10,"nodeType":"553","messageId":"554","endLine":84,"endColumn":17},{"ruleId":"694","severity":1,"message":"695","line":140,"column":3,"nodeType":"696","messageId":"697","endLine":147,"endColumn":4},{"ruleId":"564","severity":1,"message":"565","line":181,"column":32,"nodeType":"566","messageId":"567","endLine":181,"endColumn":34},{"ruleId":"564","severity":1,"message":"565","line":195,"column":39,"nodeType":"566","messageId":"567","endLine":195,"endColumn":41},{"ruleId":"564","severity":1,"message":"565","line":212,"column":48,"nodeType":"566","messageId":"567","endLine":212,"endColumn":50},{"ruleId":"564","severity":1,"message":"669","line":236,"column":32,"nodeType":"566","messageId":"567","endLine":236,"endColumn":34},{"ruleId":"564","severity":1,"message":"565","line":248,"column":19,"nodeType":"566","messageId":"567","endLine":248,"endColumn":21},{"ruleId":"561","severity":1,"message":"562","line":290,"column":15,"nodeType":"563","endLine":295,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":433,"column":21,"nodeType":"563","endLine":433,"endColumn":71},{"ruleId":"551","severity":1,"message":"628","line":1,"column":27,"nodeType":"553","messageId":"554","endLine":1,"endColumn":36},{"ruleId":"551","severity":1,"message":"622","line":3,"column":8,"nodeType":"553","messageId":"554","endLine":3,"endColumn":18},{"ruleId":"551","severity":1,"message":"653","line":4,"column":10,"nodeType":"553","messageId":"554","endLine":4,"endColumn":14},{"ruleId":"551","severity":1,"message":"633","line":6,"column":10,"nodeType":"553","messageId":"554","endLine":6,"endColumn":17},{"ruleId":"551","severity":1,"message":"590","line":10,"column":8,"nodeType":"553","messageId":"554","endLine":10,"endColumn":18},{"ruleId":"551","severity":1,"message":"698","line":17,"column":3,"nodeType":"553","messageId":"554","endLine":17,"endColumn":13},{"ruleId":"551","severity":1,"message":"691","line":18,"column":3,"nodeType":"553","messageId":"554","endLine":18,"endColumn":14},{"ruleId":"551","severity":1,"message":"699","line":19,"column":3,"nodeType":"553","messageId":"554","endLine":19,"endColumn":16},{"ruleId":"551","severity":1,"message":"700","line":21,"column":10,"nodeType":"553","messageId":"554","endLine":21,"endColumn":22},{"ruleId":"630","severity":1,"message":"701","line":42,"column":5,"nodeType":"632","messageId":"567","endLine":42,"endColumn":12},{"ruleId":"630","severity":1,"message":"701","line":49,"column":5,"nodeType":"632","messageId":"567","endLine":49,"endColumn":12},{"ruleId":"551","severity":1,"message":"702","line":81,"column":10,"nodeType":"553","messageId":"554","endLine":81,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":95,"column":20,"nodeType":"566","messageId":"567","endLine":95,"endColumn":22},{"ruleId":"564","severity":1,"message":"565","line":140,"column":31,"nodeType":"566","messageId":"567","endLine":140,"endColumn":33},{"ruleId":"551","severity":1,"message":"703","line":284,"column":9,"nodeType":"553","messageId":"554","endLine":284,"endColumn":24},{"ruleId":"564","severity":1,"message":"565","line":285,"column":15,"nodeType":"566","messageId":"567","endLine":285,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":325,"column":21,"nodeType":"563","endLine":329,"endColumn":23},{"ruleId":"564","severity":1,"message":"669","line":339,"column":38,"nodeType":"566","messageId":"567","endLine":339,"endColumn":40},{"ruleId":"704","severity":1,"message":"705","line":390,"column":15,"nodeType":"563","endLine":390,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":525,"column":38,"nodeType":"566","messageId":"567","endLine":525,"endColumn":40},{"ruleId":"551","severity":1,"message":"706","line":1,"column":17,"nodeType":"553","messageId":"554","endLine":1,"endColumn":26},{"ruleId":"551","severity":1,"message":"707","line":34,"column":7,"nodeType":"553","messageId":"554","endLine":34,"endColumn":15},{"ruleId":"551","severity":1,"message":"708","line":39,"column":23,"nodeType":"553","messageId":"554","endLine":39,"endColumn":34},{"ruleId":"551","severity":1,"message":"709","line":42,"column":7,"nodeType":"553","messageId":"554","endLine":42,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":48,"column":20,"nodeType":"566","messageId":"567","endLine":48,"endColumn":22},{"ruleId":"551","severity":1,"message":"710","line":52,"column":7,"nodeType":"553","messageId":"554","endLine":52,"endColumn":18},{"ruleId":"551","severity":1,"message":"672","line":107,"column":11,"nodeType":"553","messageId":"554","endLine":107,"endColumn":18},"no-native-reassign",["711"],"no-negated-in-lhs",["712"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DisplayAll' is defined but never used.","'DisplayTracking' is defined but never used.","'PaymmentGateway' is defined but never used.","'Avatar' is defined but never used.","'FormHelperText' is defined but never used.","'ServerURL' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["713","714"],"Unnecessary escape character: \\-.",["715","716"],"Unnecessary escape character: \\@.",["717","718"],["719","720"],"'getMessage' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'result' is assigned a value but never used.","'postDataAndImage' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'Divider' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'postData' is defined but never used.","'fullScreen' is assigned a value but never used.","'MTableToolbar' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'List' is defined but never used.","'Paper' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'DashboardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'InfoIcon' is defined but never used.","'ForumIcon' is defined but never used.","'LocalOfferIcon' is defined but never used.","'useRef' is defined but never used.","'createSecureContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'cartData' is assigned a value but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'settings' is assigned a value but never used.","'GridListTileBar' is defined but never used.","'useSelector' is defined but never used.","'width' is defined but never used.","'useEffect' is defined but never used.","'pink' is defined but never used.","no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","'getData' is defined but never used.","'checkRequire' is defined but never used.","Duplicate key 'textAlign'.","Duplicate key 'backgroundColor'.","Duplicate key 'color'.","'getDefaultNormalizer' is defined but never used.","'FormLabel' is defined but never used.","'Height' is defined but never used.","'green' is defined but never used.","'FormGroup' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'helperText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchByBrand'. Either include it or remove the dependency array.","ArrayExpression",["721"],"'showFilter' is assigned a value but never used.","'fade' is defined but never used.","'blue' is defined but never used.","'Carousel' is defined but never used.","'InputLabel' is defined but never used.","'getPinStatus' is assigned a value but never used.","'getPincodeData' is assigned a value but never used.","'getOpacity' is assigned a value but never used.","'getColor' is assigned a value but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProduct' and 'params.pid'. Either include them or remove the dependency array.",["722"],"'fetchProductColor' is assigned a value but never used.","'Prebook' is assigned a value but never used.","'AddToCart' is assigned a value but never used.","'colorProduct' is assigned a value but never used.","'discount' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'o' is assigned a value but never used.","'createRef' is defined but never used.","'classes' is assigned a value but never used.","'getProductPictureList' is assigned a value but never used.","'numberFormat' is assigned a value but never used.",["723"],"'TreeView' is defined but never used.","'ChevronRightIcon' is defined but never used.","'TreeItem' is defined but never used.","Duplicate key 'fontWeight'.","'checked' is assigned a value but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Copyright' is defined but never used.","'getUser' is assigned a value but never used.","'SignInForm' is assigned a value but never used.","'CssBaseline' is defined but never used.","'checkMobile' is defined but never used.","'FilledInput' is defined but never used.","'clsx' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'checkEmail' is defined but never used.","'checkPassword' is defined but never used.","'StaticRouter' is defined but never used.","Duplicate key 'padding'.","'getCount' is assigned a value but never used.","'handleQtyChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'dispatch' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'length' is assigned a value but never used.","'totalsaving' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"724","fix":"725","desc":"726"},{"messageId":"727","fix":"728","desc":"729"},{"messageId":"724","fix":"730","desc":"726"},{"messageId":"727","fix":"731","desc":"729"},{"messageId":"724","fix":"732","desc":"726"},{"messageId":"727","fix":"733","desc":"729"},{"messageId":"724","fix":"734","desc":"726"},{"messageId":"727","fix":"735","desc":"729"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"738","fix":"740"},"removeEscape",{"range":"741","text":"742"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"743","text":"744"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"745","text":"742"},{"range":"746","text":"744"},{"range":"747","text":"742"},{"range":"748","text":"744"},{"range":"749","text":"742"},{"range":"750","text":"744"},"Update the dependencies array to be: [fetchByBrand, props]",{"range":"751","text":"752"},"Update the dependencies array to be: [fetchProduct, params.pid]",{"range":"753","text":"754"},{"range":"755","text":"754"},[575,576],"",[575,575],"\\",[577,578],[577,577],[582,583],[582,582],[596,597],[596,596],[4302,4309],"[fetchByBrand, props]",[3381,3383],"[fetchProduct, params.pid]",[1321,1323]]